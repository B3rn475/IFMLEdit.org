{"version":3,"sources":["lodash.js"],"names":["upper","lower","FUNC_ERROR_TEXT","PLACEHOLDER","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","numberTag","objectTag","regexpTag","stringTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChars","reHasRegExpChars","reComboMark","reEscapeChar","reEsTemplate","reFlags","reHasHexPrefix","reIsHostCtor","reIsUint","reLatin1","reNoMatch","reUnescapedString","reWords","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","htmlEscapes","&","<",">","\"","'","`","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","&#96;","objectTypes","function","object","regexpEscapes","0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F","a","b","c","d","e","f","n","r","t","u","v","x","stringEscapes","\\","\n","\r"," "," ","freeExports","exports","nodeType","freeModule","module","freeGlobal","global","Object","freeSelf","self","freeWindow","window","moduleExports","root","this","baseCompareAscending","value","other","valIsNull","valIsUndef","undefined","valIsReflexive","othIsNull","othIsUndef","othIsReflexive","baseFindIndex","array","predicate","fromRight","length","index","baseIndexOf","fromIndex","indexOfNaN","baseIsFunction","baseToString","charsLeftIndex","string","chars","indexOf","charAt","charsRightIndex","compareAscending","criteria","deburrLetter","letter","escapeHtmlChar","chr","escapeRegExpChar","leadingChar","whitespaceChar","escapeStringChar","isObjectLike","isSpace","charCode","replaceHolders","placeholder","resIndex","result","trimmedLeftIndex","charCodeAt","trimmedRightIndex","unescapeHtmlChar","_","runInContext","context","Array","defaults","pick","Date","Error","Function","Math","Number","String","TypeError","arrayProto","prototype","objectProto","stringProto","fnToString","toString","hasOwnProperty","idCounter","objToString","oldDash","reIsNative","call","replace","ArrayBuffer","clearTimeout","parseFloat","pow","propertyIsEnumerable","Set","getNative","setTimeout","splice","Uint8Array","WeakMap","nativeCeil","ceil","nativeCreate","nativeFloor","floor","nativeIsArray","nativeIsFinite","isFinite","nativeKeys","nativeMax","max","nativeMin","min","nativeNow","nativeParseInt","parseInt","nativeRandom","random","NEGATIVE_INFINITY","POSITIVE_INFINITY","metaMap","realNames","lodash","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","actions","__wrapped__","__actions__","__chain__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","MapCache","__data__","SetCache","values","data","hash","set","push","cacheIndexOf","cache","isObject","has","arrayCopy","arrayEach","iteratee","arrayEvery","arrayFilter","arrayMap","arrayPush","offset","arrayReduce","accumulator","initFromArray","arraySome","assignOwnDefaults","objectValue","sourceValue","key","assignWith","customizer","props","keys","baseAssign","baseCopy","baseAt","collection","isNil","isArr","isArrayLike","propsLength","isIndex","baseCallback","func","thisArg","argCount","type","bindCallback","identity","baseMatches","property","baseMatchesProperty","baseClone","isDeep","stackA","stackB","constructor","input","initCloneArray","tag","isFunc","Ctor","bufferClone","buffer","byteOffset","exec","lastIndex","initCloneByTag","initCloneObject","baseForOwn","subValue","support","templateSettings","escape","evaluate","interpolate","variable","imports","baseCreate","baseDelay","wait","args","apply","baseDifference","getIndexOf","isCommon","createCache","valuesLength","outer","valuesIndex","baseEach","createBaseEach","baseEachRight","baseForOwnRight","baseEvery","baseFilter","baseFind","eachFunc","retKey","baseFlatten","isStrict","isArguments","baseFor","createBaseFor","baseForRight","baseForIn","keysIn","baseFunctions","isFunction","baseGet","path","pathKey","toObject","baseIsEqual","isLoose","equalFunc","objIsArr","othIsArr","objTag","othTag","isTypedArray","objIsObj","othIsObj","isSameTag","name","message","equalByTag","objIsWrapped","othIsWrapped","equalArrays","equalObjects","pop","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","objValue","srcValue","baseMap","getMatchData","isKey","isStrictComparable","toPath","baseSlice","last","baseProperty","basePullAt","indexes","previous","baseRandom","baseReduce","initFromCollection","baseSetData","start","end","baseSome","baseSortBy","comparer","sort","baseSortByOrder","iteratees","orders","callback","getCallback","objCriteria","othCriteria","ordersLength","order","compareMultiple","baseUniq","isLarge","seen","computed","seenIndex","baseValues","baseWhile","isDrop","baseWrapperValue","action","binaryIndex","retHighest","low","high","MAX_ARRAY_LENGTH","mid","binaryIndexBy","valIsNaN","isDef","isReflexive","setLow","arguments","byteLength","composeArgs","partials","holders","holdersLength","argsIndex","argsLength","leftIndex","leftLength","composeArgsRight","holdersIndex","rightIndex","rightLength","createAggregator","setter","initializer","createAssigner","assigner","restParam","sources","guard","isIterateeCall","getLength","isLength","iterable","keysFunc","createCompounder","words","deburr","createCtorWrapper","thisBinding","createCurry","flag","curryFunc","arity","createWrapper","createDefaults","createExtremum","comparator","exValue","current","arrayExtremum","toIterable","baseExtremum","createFind","createFindIndex","createFindKey","objectFunc","createFlow","wrapper","funcs","thru","getFuncName","funcName","getData","isLaziable","plant","createForEach","arrayFunc","createForIn","createForOwn","createObjectMapper","isMapKeys","mapped","createPadDir","createPadding","createPartial","partialFunc","createReduce","createHybridWrapper","bitmask","partialsRight","holdersRight","argPos","ary","isAry","isBind","isBindKey","isCurry","isCurryBound","isCurryRight","argsHolders","newArgPos","newArity","newsHolders","newHoldersRight","newPartials","newPartialsRight","newData","setData","fn","reorder","strLength","padLength","repeat","slice","createPartialWrapper","createRound","methodName","number","precision","createSortedIndex","srcBitmask","newBitmask","isCombo","mergeData","createBindWrapper","arrLength","othLength","arrValue","othValue","objProps","objLength","skipCtor","objCtor","othCtor","get","noop","otherFunc","target","pairs","isNative","invokePath","test","pickByArray","pickByCallback","oldArray","count","lastCalled","stamp","now","remaining","shimKeys","allowIndexes","match","quote","clone","difference","drop","dropRight","findIndex","findLastIndex","first","intersection","arrays","othIndex","caches","pullAt","rest","sortedIndex","sortedLastIndex","union","uniq","isSorted","sortedUniq","unzip","group","unzipWith","without","zip","zipObject","zipWith","chain","interceptor","wrapperConcat","arrayConcat","at","countBy","every","filter","find","findLast","forEach","forEachRight","groupBy","includes","isString","indexBy","invoke","isProp","map","partition","reduce","reduceRight","sample","toArray","rand","some","sortByAll","getTime","before","temp","bind","bindAll","methodNames","functions","bindKey","BIND_FLAG","curry","curryRight","debounce","options","maxTimeoutId","timeoutId","trailingCall","maxWait","trailing","leading","complete","isCalled","id","delayed","maxDelayed","debounced","leadingCall","cancel","defer","delay","flow","flowRight","memoize","resolver","memoized","Cache","modArgs","transforms","partial","partialRight","rearg","otherArgs","gt","isEqual","isError","isNumber","isPlainObject","isRegExp","lt","toPlainObject","merge","baseMerge","isSrcArr","mergeFunc","baseMergeDeep","assign","defaultsDeep","mergeDefaults","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","isProto","skipIndexes","mapKeys","mapValues","omit","camelCase","word","toLowerCase","toUpperCase","kebabCase","padLeft","padRight","snakeCase","startCase","trim","pattern","attempt","matches","method","methodOf","mixin","isObj","basePropertyDeep","round","add","after","chunk","size","compact","constant","create","properties","dropRightWhile","dropWhile","fill","baseFill","flatten","flattenDeep","initial","invert","multiValue","matchesProperty","negate","once","pluck","propertyOf","pull","range","step","reject","remove","nested","shuffle","sortBy","sortByOrder","spread","take","takeRight","takeRightWhile","takeWhile","tap","throttle","times","transform","valuesIn","where","wrap","xor","backflow","collect","compose","each","eachRight","extend","methods","select","tail","unique","augend","addend","capitalize","cloneDeep","endsWith","position","escapeRegExp","findWhere","defaultValue","gte","inRange","isBoolean","isDate","isElement","isEmpty","isMatch","isNaN","isNull","isUndefined","lastIndexOf","lte","noConflict","pad","radix","floating","noMin","noMax","startsWith","sum","arraySum","baseSum","template","otherOptions","settings","isEscaping","isEvaluating","importsKeys","importsValues","reDelimiters","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","trimLeft","trimRight","trunc","omission","separator","search","newEnd","substring","unescape","uniqueId","prefix","all","any","contains","eq","detect","foldl","foldr","head","include","inject","VERSION","filtered","reverse","isFilter","takeName","dropName","operationName","createCallback","checkIteratee","retUnwrapped","lodashFunc","isHybrid","isLazy","useLazy","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","concat","parent","wrapped","run","toJSON","valueOf","define","amd"],"mappings":";;;;;;;;;CASE,WAGA,IA2HMA,EACAC,EA5FFC,EAAkB,sBAGlBC,EAAc,yBAGdC,EAAU,qBACVC,EAAW,iBACXC,EAAU,mBACVC,EAAU,gBACVC,EAAW,iBACXC,EAAU,oBAEVC,EAAY,kBACZC,EAAY,kBACZC,EAAY,kBAEZC,EAAY,kBAIZC,EAAa,wBACbC,EAAa,wBACbC,EAAU,qBACVC,EAAW,sBACXC,EAAW,sBACXC,EAAW,sBAEXC,EAAY,uBACZC,EAAY,uBAGZC,EAAuB,iBACvBC,EAAsB,qBACtBC,EAAwB,gCAGxBC,EAAgB,gCAChBC,EAAkB,YAClBC,EAAmBC,OAAOH,EAAcI,QACxCC,EAAqBF,OAAOF,EAAgBG,QAG5CE,EAAW,mBACXC,EAAa,kBACbC,EAAgB,mBAGhBC,EAAe,qDACfC,EAAgB,QAChBC,EAAa,wEAMbC,EAAgB,yEAChBC,EAAmBV,OAAOS,EAAcR,QAGxCU,EAAc,gCAGdC,EAAe,WAGfC,EAAe,kCAGfC,EAAU,OAGVC,EAAiB,SAGjBC,EAAe,8BAGfC,EAAW,QAGXC,EAAW,0CAGXC,EAAY,OAGZC,EAAoB,yBAGpBC,GACEjD,EAAQ,8BACRC,EAAQ,+BAEL2B,OAAO5B,EAAQ,OAASA,EAAQC,EAAQ,KAAOD,EAAQ,IAAMC,EAAQ,IAAMD,EAAQ,WAAY,MAIpGkD,EAAe,CACjB,QAAS,cAAe,OAAQ,QAAS,eAAgB,eACzD,WAAY,YAAa,aAAc,aAAc,OAAQ,SAC7D,SAAU,SAAU,MAAO,SAAU,IAAK,eAAgB,WAC1D,aAAc,WAAY,aAAc,YAAa,aACrD,oBAAqB,cAAe,cAAe,WAIjDC,GAAmB,EAGnBC,EAAiB,GACrBA,EAAetC,GAAcsC,EAAerC,GAC5CqC,EAAepC,GAAWoC,EAAenC,GACzCmC,EAAelC,GAAYkC,EAAejC,GAC1CiC,EAvFsB,8BAuFYA,EAAehC,GACjDgC,EAAe/B,IAAa,EAC5B+B,EAAehD,GAAWgD,EAAe/C,GACzC+C,EAjGqB,wBAiGYA,EAAe9C,GAChD8C,EAAe7C,GAAW6C,EAAe5C,GACzC4C,EAAe3C,GAAW2C,EA3Gb,gBA4GbA,EAAe1C,GAAa0C,EAAezC,GAC3CyC,EAAexC,GAAawC,EAzGf,gBA0GbA,EAAevC,GAAauC,EAxGX,qBAwGwC,EAGzD,IAAIC,EAAgB,GACpBA,EAAcjD,GAAWiD,EAAchD,GACvCgD,EA3GqB,wBA2GWA,EAAc/C,GAC9C+C,EAAc9C,GAAW8C,EAAcvC,GACvCuC,EAActC,GAAcsC,EAAcrC,GAC1CqC,EAAcpC,GAAYoC,EAAcnC,GACxCmC,EAAc3C,GAAa2C,EAAc1C,GACzC0C,EAAczC,GAAayC,EAAcxC,GACzCwC,EAAclC,GAAYkC,EA1GJ,8BA2GtBA,EAAcjC,GAAaiC,EAAchC,IAAa,EACtDgC,EAAc7C,GAAY6C,EAAc5C,GACxC4C,EA5Ha,gBA4HWA,EAxHX,gBAyHbA,EAvHiB,qBAuHW,EAG5B,IAAIC,EAAkB,CACpBC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAC1EC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAC1EC,IAAQ,IAAMC,IAAQ,IACtBC,IAAQ,IAAMC,IAAQ,IACtBC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IACtBC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAC1EC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAC1EC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IAAKC,IAAQ,IAChDC,IAAQ,IAAMC,IAAQ,IAAKC,IAAQ,IACnCC,IAAQ,KAAMC,IAAQ,KACtBC,IAAQ,KAAMC,IAAQ,KACtBC,IAAQ,MAINC,EAAc,CAChBC,IAAK,QACLC,IAAK,OACLC,IAAK,OACLC,IAAK,SACLC,IAAK,QACLC,IAAK,SAIHC,GAAgB,CAClBC,QAAS,IACTC,OAAQ,IACRC,OAAQ,IACRC,SAAU,IACVC,QAAS,IACTC,QAAS,KAIPC,GAAc,CAChBC,UAAY,EACZC,QAAU,GAIRC,GAAgB,CAClBC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MACrDC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MACrDC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MACjEC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MACjEC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,MAAOC,EAAK,OAI/DC,GAAgB,CAClBC,KAAM,KACN1C,IAAK,IACL2C,KAAM,IACNC,KAAM,IACNC,SAAU,QACVC,SAAU,SAIRC,GAActC,UAAmBuC,UAAYA,UAAYA,QAAQC,UAAYD,QAG7EE,GAAazC,UAAmB0C,SAAWA,SAAWA,OAAOF,UAAYE,OAGzEC,GAAaL,IAAeG,IAA+B,iBAAVG,QAAsBA,QAAUA,OAAOC,QAAUD,OAGlGE,GAAW9C,UAAmB+C,OAASA,MAAQA,KAAKF,QAAUE,KAG9DC,GAAahD,UAAmBiD,SAAWA,QAAUA,OAAOJ,QAAUI,OAGtEC,GAAgBT,IAAcA,GAAWF,UAAYD,IAAeA,GAQpEa,GAAOR,IAAgBK,MAAgBI,MAAQA,KAAKH,SAAYD,IAAeF,IAAYM,KAa/F,SAASC,GAAqBC,EAAOC,GACnC,GAAID,IAAUC,EAAO,CACnB,IAAIC,EAAsB,OAAVF,EACZG,OArRJC,IAqRiBJ,EACbK,EAAiBL,GAAUA,EAE3BM,EAAsB,OAAVL,EACZM,OAzRJH,IAyRiBH,EACbO,EAAiBP,GAAUA,EAE/B,GAAKD,EAAQC,IAAUK,IAAeD,GACjCH,IAAcK,GAAcC,GAC5BL,GAAcK,EACjB,OAAO,EAET,GAAKR,EAAQC,IAAUC,IAAeM,GACjCF,IAAcH,GAAcE,GAC5BE,GAAcF,EACjB,OAAQ,EAGZ,OAAO,EAaT,SAASI,GAAcC,EAAOC,EAAWC,GAIvC,IAHA,IAAIC,EAASH,EAAMG,OACfC,EAAQF,EAAYC,GAAU,EAE1BD,EAAYE,MAAYA,EAAQD,GACtC,GAAIF,EAAUD,EAAMI,GAAQA,EAAOJ,GACjC,OAAOI,EAGX,OAAQ,EAYV,SAASC,GAAYL,EAAOV,EAAOgB,GACjC,GAAIhB,GAAUA,EACZ,OAAOiB,GAAWP,EAAOM,GAK3B,IAHA,IAAIF,EAAQE,EAAY,EACpBH,EAASH,EAAMG,SAEVC,EAAQD,GACf,GAAIH,EAAMI,KAAWd,EACnB,OAAOc,EAGX,OAAQ,EAWV,SAASI,GAAelB,GAGtB,MAAuB,mBAATA,IAAuB,EAWvC,SAASmB,GAAanB,GACpB,OAAgB,MAATA,EAAgB,GAAMA,EAAQ,GAYvC,SAASoB,GAAeC,EAAQC,GAI9B,IAHA,IAAIR,GAAS,EACTD,EAASQ,EAAOR,SAEXC,EAAQD,GAAUS,EAAMC,QAAQF,EAAOG,OAAOV,KAAW,IAClE,OAAOA,EAYT,SAASW,GAAgBJ,EAAQC,GAG/B,IAFA,IAAIR,EAAQO,EAAOR,OAEZC,KAAWQ,EAAMC,QAAQF,EAAOG,OAAOV,KAAW,IACzD,OAAOA,EAYT,SAASY,GAAiB9E,EAAQqD,GAChC,OAAOF,GAAqBnD,EAAO+E,SAAU1B,EAAM0B,WAAc/E,EAAOkE,MAAQb,EAAMa,MAmDxF,SAASc,GAAaC,GACpB,OAAOhK,EAAgBgK,GAUzB,SAASC,GAAeC,GACtB,OAAOnG,EAAYmG,GAYrB,SAASC,GAAiBD,EAAKE,EAAaC,GAM1C,OALID,EACFF,EAAMlF,GAAckF,GACXG,IACTH,EAAMrD,GAAcqD,IAEf,KAAOA,EAUhB,SAASI,GAAiBJ,GACxB,MAAO,KAAOrD,GAAcqD,GAY9B,SAASd,GAAWP,EAAOM,EAAWJ,GAIpC,IAHA,IAAIC,EAASH,EAAMG,OACfC,EAAQE,GAAaJ,EAAY,GAAK,GAElCA,EAAYE,MAAYA,EAAQD,GAAS,CAC/C,IAAIZ,EAAQS,EAAMI,GAClB,GAAIb,GAAUA,EACZ,OAAOa,EAGX,OAAQ,EAUV,SAASsB,GAAapC,GACpB,QAASA,GAAyB,iBAATA,EAW3B,SAASqC,GAAQC,GACf,OAASA,GAAY,KAAQA,GAAY,GAAKA,GAAY,IAAmB,IAAZA,GAA8B,KAAZA,GAAgC,MAAZA,GAAgC,MAAZA,GACxHA,GAAY,OAASA,GAAY,MAAoB,MAAZA,GAAgC,MAAZA,GAAgC,MAAZA,GAAgC,MAAZA,GAAgC,OAAZA,GAAiC,OAAZA,GAYnJ,SAASC,GAAe7B,EAAO8B,GAM7B,IALA,IAAI1B,GAAS,EACTD,EAASH,EAAMG,OACf4B,GAAY,EACZC,EAAS,KAEJ5B,EAAQD,GACXH,EAAMI,KAAW0B,IACnB9B,EAAMI,GAASpM,EACfgO,IAASD,GAAY3B,GAGzB,OAAO4B,EAuCT,SAASC,GAAiBtB,GAIxB,IAHA,IAAIP,GAAS,EACTD,EAASQ,EAAOR,SAEXC,EAAQD,GAAUwB,GAAQhB,EAAOuB,WAAW9B,MACrD,OAAOA,EAWT,SAAS+B,GAAkBxB,GAGzB,IAFA,IAAIP,EAAQO,EAAOR,OAEZC,KAAWuB,GAAQhB,EAAOuB,WAAW9B,MAC5C,OAAOA,EAUT,SAASgC,GAAiBf,GACxB,OAAO5F,GAAc4F,GA84WvB,IAAIgB,GAt2WJ,SAASC,EAAaC,GAQpB,IAAIC,GAHJD,EAAUA,EAAUF,GAAEI,SAAStD,GAAKN,SAAU0D,EAASF,GAAEK,KAAKvD,GAAMpI,IAAiBoI,IAGjEqD,MAChBG,EAAOJ,EAAQI,KACfC,GAAQL,EAAQK,MAChBC,GAAWN,EAAQM,SACnBC,GAAOP,EAAQO,KACfC,GAASR,EAAQQ,OACjBlE,GAAS0D,EAAQ1D,OACjBpJ,GAAS8M,EAAQ9M,OACjBuN,GAAST,EAAQS,OACjBC,GAAYV,EAAQU,UAGpBC,GAAaV,EAAMW,UACnBC,GAAcvE,GAAOsE,UACrBE,GAAcL,GAAOG,UAGrBG,GAAaT,GAASM,UAAUI,SAGhCC,GAAiBJ,GAAYI,eAG7BC,GAAY,EAMZC,GAAcN,GAAYG,SAG1BI,GAAUxE,GAAKkD,EAGfuB,GAAanO,GAAO,IACtB6N,GAAWO,KAAKL,IAAgBM,QAAQ,sBAAuB,QAC9DA,QAAQ,yDAA0D,SAAW,KAI5EC,GAAcxB,EAAQwB,YACtBC,GAAezB,EAAQyB,aACvBC,GAAa1B,EAAQ0B,WACrBC,GAAMpB,GAAKoB,IACXC,GAAuBf,GAAYe,qBACnCC,GAAMC,GAAU9B,EAAS,OACzB+B,GAAa/B,EAAQ+B,WACrBC,GAASrB,GAAWqB,OACpBC,GAAajC,EAAQiC,WACrBC,GAAUJ,GAAU9B,EAAS,WAG7BmC,GAAa5B,GAAK6B,KAClBC,GAAeP,GAAUxF,GAAQ,UACjCgG,GAAc/B,GAAKgC,MACnBC,GAAgBV,GAAU7B,EAAO,WACjCwC,GAAiBzC,EAAQ0C,SACzBC,GAAab,GAAUxF,GAAQ,QAC/BsG,GAAYrC,GAAKsC,IACjBC,GAAYvC,GAAKwC,IACjBC,GAAYlB,GAAU1B,EAAM,OAC5B6C,GAAiBjD,EAAQkD,SACzBC,GAAe5C,GAAK6C,OAGpBC,GAAoB7C,GAAO6C,kBAC3BC,GAAoB9C,GAAO8C,kBAc3BC,GAAUrB,IAAW,IAAIA,GAGzBsB,GAAY,GAoGhB,SAASC,GAAO1G,GACd,GAAIoC,GAAapC,KAAW2G,GAAQ3G,MAAYA,aAAiB4G,IAAc,CAC7E,GAAI5G,aAAiB6G,GACnB,OAAO7G,EAET,GAAIkE,GAAeK,KAAKvE,EAAO,cAAgBkE,GAAeK,KAAKvE,EAAO,eACxE,OAAO8G,GAAa9G,GAGxB,OAAO,IAAI6G,GAAc7G,GAQ3B,SAAS+G,MAYT,SAASF,GAAc7G,EAAOgH,EAAUC,GACtCnH,KAAKoH,YAAclH,EACnBF,KAAKqH,YAAcF,GAAW,GAC9BnH,KAAKsH,YAAcJ,EAiFrB,SAASJ,GAAY5G,GACnBF,KAAKoH,YAAclH,EACnBF,KAAKqH,YAAc,GACnBrH,KAAKuH,QAAU,EACfvH,KAAKwH,cAAe,EACpBxH,KAAKyH,cAAgB,GACrBzH,KAAK0H,cAAgBjB,GACrBzG,KAAK2H,UAAY,GA6GnB,SAASC,KACP5H,KAAK6H,SAAW,GAoElB,SAASC,GAASC,GAChB,IAAIhH,EAASgH,EAASA,EAAOhH,OAAS,EAGtC,IADAf,KAAKgI,KAAO,CAAEC,KAAQzC,GAAa,MAAO0C,IAAO,IAAIlD,IAC9CjE,KACLf,KAAKmI,KAAKJ,EAAOhH,IAarB,SAASqH,GAAaC,EAAOnI,GAC3B,IAAI8H,EAAOK,EAAML,KAGjB,OAF8B,iBAAT9H,GAAqBoI,GAASpI,GAAU8H,EAAKE,IAAIK,IAAIrI,GAAS8H,EAAKC,KAAK/H,IAE7E,GAAK,EAsDvB,SAASsI,GAAUlS,EAAQsK,GACzB,IAAII,GAAS,EACTD,EAASzK,EAAOyK,OAGpB,IADAH,IAAUA,EAAQwC,EAAMrC,MACfC,EAAQD,GACfH,EAAMI,GAAS1K,EAAO0K,GAExB,OAAOJ,EAYT,SAAS6H,GAAU7H,EAAO8H,GAIxB,IAHA,IAAI1H,GAAS,EACTD,EAASH,EAAMG,SAEVC,EAAQD,IAC8B,IAAzC2H,EAAS9H,EAAMI,GAAQA,EAAOJ,KAIpC,OAAOA,EAiCT,SAAS+H,GAAW/H,EAAOC,GAIzB,IAHA,IAAIG,GAAS,EACTD,EAASH,EAAMG,SAEVC,EAAQD,GACf,IAAKF,EAAUD,EAAMI,GAAQA,EAAOJ,GAClC,OAAO,EAGX,OAAO,EAyCT,SAASgI,GAAYhI,EAAOC,GAM1B,IALA,IAAIG,GAAS,EACTD,EAASH,EAAMG,OACf4B,GAAY,EACZC,EAAS,KAEJ5B,EAAQD,GAAQ,CACvB,IAAIb,EAAQU,EAAMI,GACdH,EAAUX,EAAOc,EAAOJ,KAC1BgC,IAASD,GAAYzC,GAGzB,OAAO0C,EAYT,SAASiG,GAASjI,EAAO8H,GAKvB,IAJA,IAAI1H,GAAS,EACTD,EAASH,EAAMG,OACf6B,EAASQ,EAAMrC,KAEVC,EAAQD,GACf6B,EAAO5B,GAAS0H,EAAS9H,EAAMI,GAAQA,EAAOJ,GAEhD,OAAOgC,EAWT,SAASkG,GAAUlI,EAAOmH,GAKxB,IAJA,IAAI/G,GAAS,EACTD,EAASgH,EAAOhH,OAChBgI,EAASnI,EAAMG,SAEVC,EAAQD,GACfH,EAAMmI,EAAS/H,GAAS+G,EAAO/G,GAEjC,OAAOJ,EAeT,SAASoI,GAAYpI,EAAO8H,EAAUO,EAAaC,GACjD,IAAIlI,GAAS,EACTD,EAASH,EAAMG,OAKnB,IAHImI,GAAiBnI,IACnBkI,EAAcrI,IAAQI,MAEfA,EAAQD,GACfkI,EAAcP,EAASO,EAAarI,EAAMI,GAAQA,EAAOJ,GAE3D,OAAOqI,EAoCT,SAASE,GAAUvI,EAAOC,GAIxB,IAHA,IAAIG,GAAS,EACTD,EAASH,EAAMG,SAEVC,EAAQD,GACf,GAAIF,EAAUD,EAAMI,GAAQA,EAAOJ,GACjC,OAAO,EAGX,OAAO,EA+CT,SAASwI,GAAkBC,EAAaC,EAAaC,EAAKzM,GACxD,YA5/CAwD,IA4/CQ+I,GAA8BjF,GAAeK,KAAK3H,EAAQyM,GAE9DF,EADAC,EAeN,SAASE,GAAW1M,EAAQxG,EAAQmT,GAKlC,IAJA,IAAIzI,GAAS,EACT0I,EAAQC,GAAKrT,GACbyK,EAAS2I,EAAM3I,SAEVC,EAAQD,GAAQ,CACvB,IAAIwI,EAAMG,EAAM1I,GACZd,EAAQpD,EAAOyM,GACf3G,EAAS6G,EAAWvJ,EAAO5J,EAAOiT,GAAMA,EAAKzM,EAAQxG,KAEpDsM,GAAWA,EAAUA,IAAW1C,EAAUA,GAAUA,SAthD3DI,IAuhDOJ,KAAyBqJ,KAAOzM,MACnCA,EAAOyM,GAAO3G,GAGlB,OAAO9F,EAYT,SAAS8M,GAAW9M,EAAQxG,GAC1B,OAAiB,MAAVA,EACHwG,EACA+M,GAASvT,EAAQqT,GAAKrT,GAASwG,GAYrC,SAASgN,GAAOC,EAAYL,GAQ1B,IAPA,IAAI1I,GAAS,EACTgJ,EAAsB,MAAdD,EACRE,GAASD,GAASE,GAAYH,GAC9BhJ,EAASkJ,EAAQF,EAAWhJ,OAAS,EACrCoJ,EAAcT,EAAM3I,OACpB6B,EAASQ,EAAM+G,KAEXnJ,EAAQmJ,GAAa,CAC3B,IAAIZ,EAAMG,EAAM1I,GAEd4B,EAAO5B,GADLiJ,EACcG,GAAQb,EAAKxI,GAAUgJ,EAAWR,QAjkDtDjJ,EAmkDoB0J,OAnkDpB1J,EAmkDwCyJ,EAAWR,GAGnD,OAAO3G,EAYT,SAASiH,GAASvT,EAAQoT,EAAO5M,GAC/BA,IAAWA,EAAS,IAKpB,IAHA,IAAIkE,GAAS,EACTD,EAAS2I,EAAM3I,SAEVC,EAAQD,GAAQ,CACvB,IAAIwI,EAAMG,EAAM1I,GAChBlE,EAAOyM,GAAOjT,EAAOiT,GAEvB,OAAOzM,EAaT,SAASuN,GAAaC,EAAMC,EAASC,GACnC,IAAIC,SAAcH,EAClB,MAAY,YAARG,OA3mDJnK,IA4mDSiK,EACHD,EACAI,GAAaJ,EAAMC,EAASC,GAEtB,MAARF,EACKK,GAEG,UAARF,EACKG,GAAYN,QApnDrBhK,IAsnDOiK,EACHM,GAASP,GACTQ,GAAoBR,EAAMC,GAiBhC,SAASQ,GAAU7K,EAAO8K,EAAQvB,EAAYF,EAAKzM,EAAQmO,EAAQC,GACjE,IAAItI,EAIJ,GAHI6G,IACF7G,EAAS9F,EAAS2M,EAAWvJ,EAAOqJ,EAAKzM,GAAU2M,EAAWvJ,SA5oDhEI,IA8oDIsC,EACF,OAAOA,EAET,IAAK0F,GAASpI,GACZ,OAAOA,EAET,IAAI+J,EAAQpD,GAAQ3G,GACpB,GAAI+J,GAEF,GADArH,EA2uEJ,SAAwBhC,GACtB,IAAIG,EAASH,EAAMG,OACf6B,EAAS,IAAIhC,EAAMuK,YAAYpK,GAG/BA,GAA6B,iBAAZH,EAAM,IAAkBwD,GAAeK,KAAK7D,EAAO,WACtEgC,EAAO5B,MAAQJ,EAAMI,MACrB4B,EAAOwI,MAAQxK,EAAMwK,OAEvB,OAAOxI,EApvEIyI,CAAenL,IACnB8K,EACH,OAAOxC,GAAUtI,EAAO0C,OAErB,CACL,IAAI0I,EAAMhH,GAAYG,KAAKvE,GACvBqL,EAASD,GAAOpW,EAEpB,GAAIoW,GAAOlW,GAAakW,GAAOzW,KAAY0W,GAAWzO,GAMpD,OAAOhF,EAAcwT,GAowE3B,SAAwBxO,EAAQwO,EAAKN,GACnC,IAAIQ,EAAO1O,EAAOqO,YAClB,OAAQG,GACN,IAv3He,uBAw3Hb,OAAOG,GAAY3O,GAErB,KAAK/H,EACL,KAAKC,EACH,OAAO,IAAIwW,GAAM1O,GAEnB,KAAKvH,EAAY,KAAKC,EACtB,KAAKC,EAAS,KAAKC,EAAU,KAAKC,EAClC,KAAKC,EAAU,IAz3HC,6BAy3HqB,KAAKC,EAAW,KAAKC,EACxD,IAAI4V,EAAS5O,EAAO4O,OACpB,OAAO,IAAIF,EAAKR,EAASS,GAAYC,GAAUA,EAAQ5O,EAAO6O,WAAY7O,EAAOiE,QAEnF,KAAK5L,EACL,KAAKG,EACH,OAAO,IAAIkW,EAAK1O,GAElB,KAAKzH,EACH,IAAIuN,EAAS,IAAI4I,EAAK1O,EAAOxG,OAAQa,EAAQyU,KAAK9O,IAClD8F,EAAOiJ,UAAY/O,EAAO+O,UAE9B,OAAOjJ,EA3xECkJ,CAAe5L,EAAOoL,EAAKN,GAC1BlO,EAASoD,EAAQ,GANtB,GADA0C,EAqvEN,SAAyB9F,GACvB,IAAI0O,EAAO1O,EAAOqO,YACG,mBAARK,GAAsBA,aAAgBA,IACjDA,EAAO/L,IAET,OAAO,IAAI+L,EA1vEEO,CAAgBR,EAAS,GAAKrL,IAClC8K,EACH,OAAOpB,GAAWhH,EAAQ1C,GAShC+K,IAAWA,EAAS,IACpBC,IAAWA,EAAS,IAGpB,IADA,IAAInK,EAASkK,EAAOlK,OACbA,KACL,GAAIkK,EAAOlK,IAAWb,EACpB,OAAOgL,EAAOnK,GAWlB,OAPAkK,EAAO9C,KAAKjI,GACZgL,EAAO/C,KAAKvF,IAGXqH,EAAQxB,GAAYuD,IAAY9L,GAAO,SAAS+L,EAAU1C,GACzD3G,EAAO2G,GAAOwB,GAAUkB,EAAUjB,EAAQvB,EAAYF,EAAKrJ,EAAO+K,EAAQC,MAErEtI,EApyBKgE,GAAOsF,QAAU,GAW/BtF,GAAOuF,iBAAmB,CAQxBC,OAAU5V,EAQV6V,SAAY5V,EAQZ6V,YAAe5V,EAQf6V,SAAY,GAQZC,QAAW,CAQTvJ,EAAK2D,KAovBT,IAAI6F,GAAc,WAChB,SAAS3P,KACT,OAAO,SAASiH,GACd,GAAIuE,GAASvE,GAAY,CACvBjH,EAAOiH,UAAYA,EACnB,IAAInB,EAAS,IAAI9F,EACjBA,EAAOiH,eA5sDXzD,EA8sDE,OAAOsC,GAAU,IARJ,GAsBjB,SAAS8J,GAAUpC,EAAMqC,EAAMC,GAC7B,GAAmB,mBAARtC,EACT,MAAM,IAAIzG,GAAUlP,GAEtB,OAAOuQ,IAAW,WAAaoF,EAAKuC,WAhuDpCvM,EAguDqDsM,KAAUD,GAYjE,SAASG,GAAelM,EAAOmH,GAC7B,IAAIhH,EAASH,EAAQA,EAAMG,OAAS,EAChC6B,EAAS,GAEb,IAAK7B,EACH,OAAO6B,EAET,IAAI5B,GAAS,EACTS,EAAUsL,KACVC,EAAWvL,GAAWR,GACtBoH,EAAS2E,GAAYjF,EAAOhH,QA7tDb,IA6tD2CkM,GAAYlF,GAAU,KAChFmF,EAAenF,EAAOhH,OAEtBsH,IACF5G,EAAU2G,GACV4E,GAAW,EACXjF,EAASM,GAEX8E,EACA,OAASnM,EAAQD,GAAQ,CACvB,IAAIb,EAAQU,EAAMI,GAElB,GAAIgM,GAAY9M,GAAUA,EAAO,CAE/B,IADA,IAAIkN,EAAcF,EACXE,KACL,GAAIrF,EAAOqF,KAAiBlN,EAC1B,SAASiN,EAGbvK,EAAOuF,KAAKjI,QAELuB,EAAQsG,EAAQ7H,EAAO,GAAK,GACnC0C,EAAOuF,KAAKjI,GAGhB,OAAO0C,EAYT,IAAIyK,GAAWC,GAAetB,IAW1BuB,GAAgBD,GAAeE,IAAiB,GAYpD,SAASC,GAAU1D,EAAYlJ,GAC7B,IAAI+B,GAAS,EAKb,OAJAyK,GAAStD,GAAY,SAAS7J,EAAOc,EAAO+I,GAE1C,OADAnH,IAAW/B,EAAUX,EAAOc,EAAO+I,MAG9BnH,EAoET,SAAS8K,GAAW3D,EAAYlJ,GAC9B,IAAI+B,EAAS,GAMb,OALAyK,GAAStD,GAAY,SAAS7J,EAAOc,EAAO+I,GACtClJ,EAAUX,EAAOc,EAAO+I,IAC1BnH,EAAOuF,KAAKjI,MAGT0C,EAgBT,SAAS+K,GAAS5D,EAAYlJ,EAAW+M,EAAUC,GACjD,IAAIjL,EAOJ,OANAgL,EAAS7D,GAAY,SAAS7J,EAAOqJ,EAAKQ,GACxC,GAAIlJ,EAAUX,EAAOqJ,EAAKQ,GAExB,OADAnH,EAASiL,EAAStE,EAAMrJ,GACjB,KAGJ0C,EAcT,SAASkL,GAAYlN,EAAOoK,EAAQ+C,EAAUnL,GAC5CA,IAAWA,EAAS,IAKpB,IAHA,IAAI5B,GAAS,EACTD,EAASH,EAAMG,SAEVC,EAAQD,GAAQ,CACvB,IAAIb,EAAQU,EAAMI,GACdsB,GAAapC,IAAUgK,GAAYhK,KAClC6N,GAAYlH,GAAQ3G,IAAU8N,GAAY9N,IACzC8K,EAEF8C,GAAY5N,EAAO8K,EAAQ+C,EAAUnL,GAErCkG,GAAUlG,EAAQ1C,GAEV6N,IACVnL,EAAOA,EAAO7B,QAAUb,GAG5B,OAAO0C,EAeT,IAAIqL,GAAUC,KAYVC,GAAeD,IAAc,GAWjC,SAASE,GAAUtR,EAAQ4L,GACzB,OAAOuF,GAAQnR,EAAQ4L,EAAU2F,IAYnC,SAASrC,GAAWlP,EAAQ4L,GAC1B,OAAOuF,GAAQnR,EAAQ4L,EAAUiB,IAYnC,SAAS6D,GAAgB1Q,EAAQ4L,GAC/B,OAAOyF,GAAarR,EAAQ4L,EAAUiB,IAYxC,SAAS2E,GAAcxR,EAAQ4M,GAM7B,IALA,IAAI1I,GAAS,EACTD,EAAS2I,EAAM3I,OACf4B,GAAY,EACZC,EAAS,KAEJ5B,EAAQD,GAAQ,CACvB,IAAIwI,EAAMG,EAAM1I,GACZuN,GAAWzR,EAAOyM,MACpB3G,IAASD,GAAY4G,GAGzB,OAAO3G,EAaT,SAAS4L,GAAQ1R,EAAQ2R,EAAMC,GAC7B,GAAc,MAAV5R,EAAJ,MApiEAwD,IAuiEIoO,GAAyBA,KAAWC,GAAS7R,KAC/C2R,EAAO,CAACC,IAKV,IAHA,IAAI1N,EAAQ,EACRD,EAAS0N,EAAK1N,OAED,MAAVjE,GAAkBkE,EAAQD,GAC/BjE,EAASA,EAAO2R,EAAKzN,MAEvB,OAAQA,GAASA,GAASD,EAAUjE,OAhjEpCwD,GAgkEF,SAASsO,GAAY1O,EAAOC,EAAOsJ,EAAYoF,EAAS5D,EAAQC,GAC9D,OAAIhL,IAAUC,IAGD,MAATD,GAA0B,MAATC,IAAmBmI,GAASpI,KAAWoC,GAAanC,GAChED,GAAUA,GAASC,GAAUA,EAoBxC,SAAyBrD,EAAQqD,EAAO2O,EAAWrF,EAAYoF,EAAS5D,EAAQC,GAC9E,IAAI6D,EAAWlI,GAAQ/J,GACnBkS,EAAWnI,GAAQ1G,GACnB8O,EAASna,EACToa,EAASpa,EAERia,KACHE,EAAS3K,GAAYG,KAAK3H,KACZjI,EACZoa,EAAS7Z,EACA6Z,GAAU7Z,IACnB2Z,EAAWI,GAAarS,KAGvBkS,KACHE,EAAS5K,GAAYG,KAAKtE,KACZtL,EACZqa,EAAS9Z,EACA8Z,GAAU9Z,IACnB4Z,EAAWG,GAAahP,KAG5B,IAAIiP,EAAWH,GAAU7Z,EACrBia,EAAWH,GAAU9Z,EACrBka,EAAYL,GAAUC,EAE1B,GAAII,IAAeP,IAAYK,EAC7B,OA6iDJ,SAAoBtS,EAAQqD,EAAOmL,GACjC,OAAQA,GACN,KAAKvW,EACL,KAAKC,EAGH,OAAQ8H,IAAWqD,EAErB,KAAKlL,EACH,OAAO6H,EAAOyS,MAAQpP,EAAMoP,MAAQzS,EAAO0S,SAAWrP,EAAMqP,QAE9D,KAAKra,EAEH,OAAQ2H,IAAWA,EACfqD,IAAUA,EACVrD,IAAWqD,EAEjB,KAAK9K,EACL,KAAKC,EAGH,OAAOwH,GAAWqD,EAAQ,GAE9B,OAAO,EApkDEsP,CAAW3S,EAAQqD,EAAO8O,GAEnC,IAAKJ,EAAS,CACZ,IAAIa,EAAeN,GAAYhL,GAAeK,KAAK3H,EAAQ,eACvD6S,EAAeN,GAAYjL,GAAeK,KAAKtE,EAAO,eAE1D,GAAIuP,GAAgBC,EAClB,OAAOb,EAAUY,EAAe5S,EAAOoD,QAAUpD,EAAQ6S,EAAexP,EAAMD,QAAUC,EAAOsJ,EAAYoF,EAAS5D,EAAQC,GAGhI,IAAKoE,EACH,OAAO,EAITrE,IAAWA,EAAS,IACpBC,IAAWA,EAAS,IAEpB,IAAInK,EAASkK,EAAOlK,OACpB,KAAOA,KACL,GAAIkK,EAAOlK,IAAWjE,EACpB,OAAOoO,EAAOnK,IAAWZ,EAI7B8K,EAAO9C,KAAKrL,GACZoO,EAAO/C,KAAKhI,GAEZ,IAAIyC,GAAUmM,EAAWa,GAAcC,IAAc/S,EAAQqD,EAAO2O,EAAWrF,EAAYoF,EAAS5D,EAAQC,GAK5G,OAHAD,EAAO6E,MACP5E,EAAO4E,MAEAlN,EA9EAmN,CAAgB7P,EAAOC,EAAOyO,GAAanF,EAAYoF,EAAS5D,EAAQC,IA2FjF,SAAS8E,GAAYlT,EAAQmT,EAAWxG,GACtC,IAAIzI,EAAQiP,EAAUlP,OAClBA,EAASC,EACTkP,GAAgBzG,EAEpB,GAAc,MAAV3M,EACF,OAAQiE,EAGV,IADAjE,EAAS6R,GAAS7R,GACXkE,KAAS,CACd,IAAIgH,EAAOiI,EAAUjP,GACrB,GAAKkP,GAAgBlI,EAAK,GAClBA,EAAK,KAAOlL,EAAOkL,EAAK,MACtBA,EAAK,KAAMlL,GAEnB,OAAO,EAGX,OAASkE,EAAQD,GAAQ,CAEvB,IAAIwI,GADJvB,EAAOiI,EAAUjP,IACF,GACXmP,EAAWrT,EAAOyM,GAClB6G,EAAWpI,EAAK,GAEpB,GAAIkI,GAAgBlI,EAAK,IACvB,QA3rEJ1H,IA2rEQ6P,KAA4B5G,KAAOzM,GACrC,OAAO,MAEJ,CACL,IAAI8F,EAAS6G,EAAaA,EAAW0G,EAAUC,EAAU7G,QA/rE7DjJ,EAgsEI,UAhsEJA,IAgsEUsC,EAAuBgM,GAAYwB,EAAUD,EAAU1G,GAAY,GAAQ7G,GAC/E,OAAO,GAIb,OAAO,EAYT,SAASyN,GAAQtG,EAAYrB,GAC3B,IAAI1H,GAAS,EACT4B,EAASsH,GAAYH,GAAc3G,EAAM2G,EAAWhJ,QAAU,GAKlE,OAHAsM,GAAStD,GAAY,SAAS7J,EAAOqJ,EAAKQ,GACxCnH,IAAS5B,GAAS0H,EAASxI,EAAOqJ,EAAKQ,MAElCnH,EAUT,SAASgI,GAAYtU,GACnB,IAAI2Z,EAAYK,GAAaha,GAC7B,GAAwB,GAApB2Z,EAAUlP,QAAekP,EAAU,GAAG,GAAI,CAC5C,IAAI1G,EAAM0G,EAAU,GAAG,GACnB/P,EAAQ+P,EAAU,GAAG,GAEzB,OAAO,SAASnT,GACd,OAAc,MAAVA,IAGGA,EAAOyM,KAASrJ,SA5uE3BI,IA4uEqCJ,GAAwBqJ,KAAOoF,GAAS7R,MAG7E,OAAO,SAASA,GACd,OAAOkT,GAAYlT,EAAQmT,IAY/B,SAASnF,GAAoB2D,EAAM2B,GACjC,IAAInG,EAAQpD,GAAQ4H,GAChBzB,EAAWuD,GAAM9B,IAAS+B,GAAmBJ,GAC7C1B,EAAWD,EAAO,GAGtB,OADAA,EAAOgC,GAAOhC,GACP,SAAS3R,GACd,GAAc,MAAVA,EACF,OAAO,EAET,IAAIyM,EAAMmF,EAEV,GADA5R,EAAS6R,GAAS7R,IACbmN,IAAU+C,MAAezD,KAAOzM,GAAS,CAE5C,GAAc,OADdA,EAAwB,GAAf2R,EAAK1N,OAAcjE,EAAS0R,GAAQ1R,EAAQ4T,GAAUjC,EAAM,GAAI,KAEvE,OAAO,EAETlF,EAAMoH,GAAKlC,GACX3R,EAAS6R,GAAS7R,GAEpB,OAAOA,EAAOyM,KAAS6G,OAhxEzB9P,IAixEO8P,GAA2B7G,KAAOzM,EACnC8R,GAAYwB,EAAUtT,EAAOyM,QAlxEnCjJ,GAkxEoD,IAmHtD,SAASsQ,GAAarH,GACpB,OAAO,SAASzM,GACd,OAAiB,MAAVA,OAv4ETwD,EAu4EsCxD,EAAOyM,IA4B/C,SAASsH,GAAWjQ,EAAOkQ,GAEzB,IADA,IAAI/P,EAASH,EAAQkQ,EAAQ/P,OAAS,EAC/BA,KAAU,CACf,IAAIC,EAAQ8P,EAAQ/P,GACpB,GAAIC,GAAS+P,GAAY3G,GAAQpJ,GAAQ,CACvC,IAAI+P,EAAW/P,EACfmE,GAAOV,KAAK7D,EAAOI,EAAO,IAG9B,OAAOJ,EAYT,SAASoQ,GAAW9K,EAAKF,GACvB,OAAOE,EAAMT,GAAYa,MAAkBN,EAAME,EAAM,IAiBzD,SAAS+K,GAAWlH,EAAYrB,EAAUO,EAAaiI,EAAoBtD,GAMzE,OALAA,EAAS7D,GAAY,SAAS7J,EAAOc,EAAO+I,GAC1Cd,EAAciI,GACTA,GAAqB,EAAOhR,GAC7BwI,EAASO,EAAa/I,EAAOc,EAAO+I,MAEnCd,EAWT,IAAIkI,GAAezK,GAAqB,SAAS4D,EAAMtC,GAErD,OADAtB,GAAQwB,IAAIoC,EAAMtC,GACXsC,GAFoBK,GAc7B,SAAS+F,GAAU9P,EAAOwQ,EAAOC,GAC/B,IAAIrQ,GAAS,EACTD,EAASH,EAAMG,QAEnBqQ,EAAiB,MAATA,EAAgB,GAAMA,GAAS,GAC3B,IACVA,GAASA,EAAQrQ,EAAS,EAAKA,EAASqQ,IAE1CC,OAj/EA/Q,IAi/EO+Q,GAAqBA,EAAMtQ,EAAUA,GAAWsQ,GAAO,GACpD,IACRA,GAAOtQ,GAETA,EAASqQ,EAAQC,EAAM,EAAMA,EAAMD,IAAW,EAC9CA,KAAW,EAGX,IADA,IAAIxO,EAASQ,EAAMrC,KACVC,EAAQD,GACf6B,EAAO5B,GAASJ,EAAMI,EAAQoQ,GAEhC,OAAOxO,EAaT,SAAS0O,GAASvH,EAAYlJ,GAC5B,IAAI+B,EAMJ,OAJAyK,GAAStD,GAAY,SAAS7J,EAAOc,EAAO+I,GAE1C,QADAnH,EAAS/B,EAAUX,EAAOc,EAAO+I,SAG1BnH,EAaX,SAAS2O,GAAW3Q,EAAO4Q,GACzB,IAAIzQ,EAASH,EAAMG,OAGnB,IADAH,EAAM6Q,KAAKD,GACJzQ,KACLH,EAAMG,GAAUH,EAAMG,GAAQb,MAEhC,OAAOU,EAYT,SAAS8Q,GAAgB3H,EAAY4H,EAAWC,GAC9C,IAAIC,EAAWC,KACX9Q,GAAS,EASb,OAPA2Q,EAAY9I,GAAS8I,GAAW,SAASjJ,GAAY,OAAOmJ,EAASnJ,MAO9D6I,GALMlB,GAAQtG,GAAY,SAAS7J,GAExC,MAAO,CAAE2B,SADMgH,GAAS8I,GAAW,SAASjJ,GAAY,OAAOA,EAASxI,MACzCc,QAAWA,EAAOd,MAASA,OAGlC,SAASpD,EAAQqD,GACzC,OA9oEN,SAAyBrD,EAAQqD,EAAOyR,GAOtC,IANA,IAAI5Q,GAAS,EACT+Q,EAAcjV,EAAO+E,SACrBmQ,EAAc7R,EAAM0B,SACpBd,EAASgR,EAAYhR,OACrBkR,EAAeL,EAAO7Q,SAEjBC,EAAQD,GAAQ,CACvB,IAAI6B,EAAS3C,GAAqB8R,EAAY/Q,GAAQgR,EAAYhR,IAClE,GAAI4B,EAAQ,CACV,GAAI5B,GAASiR,EACX,OAAOrP,EAET,IAAIsP,EAAQN,EAAO5Q,GACnB,OAAO4B,GAAqB,QAAVsP,IAA6B,IAAVA,EAAkB,GAAK,IAUhE,OAAOpV,EAAOkE,MAAQb,EAAMa,MAsnEjBmR,CAAgBrV,EAAQqD,EAAOyR,MA8B1C,SAASQ,GAASxR,EAAO8H,GACvB,IAAI1H,GAAS,EACTS,EAAUsL,KACVhM,EAASH,EAAMG,OACfiM,EAAWvL,GAAWR,GACtBoR,EAAUrF,GAAYjM,GAtkFP,IAukFfuR,EAAOD,EAAUpF,KAAgB,KACjCrK,EAAS,GAET0P,GACF7Q,EAAU2G,GACV4E,GAAW,IAEXqF,GAAU,EACVC,EAAO5J,EAAW,GAAK9F,GAEzBuK,EACA,OAASnM,EAAQD,GAAQ,CACvB,IAAIb,EAAQU,EAAMI,GACduR,EAAW7J,EAAWA,EAASxI,EAAOc,EAAOJ,GAASV,EAE1D,GAAI8M,GAAY9M,GAAUA,EAAO,CAE/B,IADA,IAAIsS,EAAYF,EAAKvR,OACdyR,KACL,GAAIF,EAAKE,KAAeD,EACtB,SAASpF,EAGTzE,GACF4J,EAAKnK,KAAKoK,GAEZ3P,EAAOuF,KAAKjI,QAELuB,EAAQ6Q,EAAMC,EAAU,GAAK,KAChC7J,GAAY2J,IACdC,EAAKnK,KAAKoK,GAEZ3P,EAAOuF,KAAKjI,IAGhB,OAAO0C,EAaT,SAAS6P,GAAW3V,EAAQ4M,GAK1B,IAJA,IAAI1I,GAAS,EACTD,EAAS2I,EAAM3I,OACf6B,EAASQ,EAAMrC,KAEVC,EAAQD,GACf6B,EAAO5B,GAASlE,EAAO4M,EAAM1I,IAE/B,OAAO4B,EAcT,SAAS8P,GAAU9R,EAAOC,EAAW8R,EAAQ7R,GAI3C,IAHA,IAAIC,EAASH,EAAMG,OACfC,EAAQF,EAAYC,GAAU,GAE1BD,EAAYE,MAAYA,EAAQD,IAAWF,EAAUD,EAAMI,GAAQA,EAAOJ,KAClF,OAAO+R,EACHjC,GAAU9P,EAAQE,EAAY,EAAIE,EAASF,EAAYE,EAAQ,EAAID,GACnE2P,GAAU9P,EAAQE,EAAYE,EAAQ,EAAI,EAAKF,EAAYC,EAASC,GAa1E,SAAS4R,GAAiB1S,EAAOiH,GAC/B,IAAIvE,EAAS1C,EACT0C,aAAkBkE,KACpBlE,EAASA,EAAO1C,SAKlB,IAHA,IAAIc,GAAS,EACTD,EAASoG,EAAQpG,SAEZC,EAAQD,GAAQ,CACvB,IAAI8R,EAAS1L,EAAQnG,GACrB4B,EAASiQ,EAAOvI,KAAKuC,MAAMgG,EAAOtI,QAASzB,GAAU,CAAClG,GAASiQ,EAAOjG,OAExE,OAAOhK,EAcT,SAASkQ,GAAYlS,EAAOV,EAAO6S,GACjC,IAAIC,EAAM,EACNC,EAAOrS,EAAQA,EAAMG,OAASiS,EAElC,GAAoB,iBAAT9S,GAAqBA,GAAUA,GAAS+S,GA19DzBC,WA09DwD,CAChF,KAAOF,EAAMC,GAAM,CACjB,IAAIE,EAAOH,EAAMC,IAAU,EACvBV,EAAW3R,EAAMuS,IAEhBJ,EAAcR,GAAYrS,EAAUqS,EAAWrS,IAAwB,OAAbqS,EAC7DS,EAAMG,EAAM,EAEZF,EAAOE,EAGX,OAAOF,EAET,OAAOG,GAAcxS,EAAOV,EAAOyK,GAAUoI,GAgB/C,SAASK,GAAcxS,EAAOV,EAAOwI,EAAUqK,GAC7C7S,EAAQwI,EAASxI,GAQjB,IANA,IAAI8S,EAAM,EACNC,EAAOrS,EAAQA,EAAMG,OAAS,EAC9BsS,EAAWnT,GAAUA,EACrBE,EAAsB,OAAVF,EACZG,OA3vFJC,IA2vFiBJ,EAEV8S,EAAMC,GAAM,CACjB,IAAIE,EAAM1N,IAAauN,EAAMC,GAAQ,GACjCV,EAAW7J,EAAS9H,EAAMuS,IAC1BG,OAhwFNhT,IAgwFciS,EACRgB,EAAchB,GAAaA,EAE/B,GAAIc,EACF,IAAIG,EAASD,GAAeR,OAE5BS,EADSpT,EACAmT,GAAeD,IAAUP,GAA0B,MAAZR,GACvClS,EACAkT,IAAgBR,GAAcO,GAClB,MAAZf,IAGAQ,EAAcR,GAAYrS,EAAUqS,EAAWrS,GAEtDsT,EACFR,EAAMG,EAAM,EAEZF,EAAOE,EAGX,OAAOlN,GAAUgN,EAxhEGC,YAqiEtB,SAASxI,GAAaJ,EAAMC,EAASC,GACnC,GAAmB,mBAARF,EACT,OAAOK,GAET,QAryFArK,IAqyFIiK,EACF,OAAOD,EAET,OAAQE,GACN,KAAK,EAAG,OAAO,SAAStK,GACtB,OAAOoK,EAAK7F,KAAK8F,EAASrK,IAE5B,KAAK,EAAG,OAAO,SAASA,EAAOc,EAAO+I,GACpC,OAAOO,EAAK7F,KAAK8F,EAASrK,EAAOc,EAAO+I,IAE1C,KAAK,EAAG,OAAO,SAASd,EAAa/I,EAAOc,EAAO+I,GACjD,OAAOO,EAAK7F,KAAK8F,EAAStB,EAAa/I,EAAOc,EAAO+I,IAEvD,KAAK,EAAG,OAAO,SAAS7J,EAAOC,EAAOoJ,EAAKzM,EAAQxG,GACjD,OAAOgU,EAAK7F,KAAK8F,EAASrK,EAAOC,EAAOoJ,EAAKzM,EAAQxG,IAGzD,OAAO,WACL,OAAOgU,EAAKuC,MAAMtC,EAASkJ,YAW/B,SAAShI,GAAYC,GACnB,IAAI9I,EAAS,IAAI+B,GAAY+G,EAAOgI,YAIpC,OAHW,IAAItO,GAAWxC,GAErBsF,IAAI,IAAI9C,GAAWsG,IACjB9I,EAaT,SAAS+Q,GAAY/G,EAAMgH,EAAUC,GAQnC,IAPA,IAAIC,EAAgBD,EAAQ9S,OACxBgT,GAAa,EACbC,EAAajO,GAAU6G,EAAK7L,OAAS+S,EAAe,GACpDG,GAAa,EACbC,EAAaN,EAAS7S,OACtB6B,EAASQ,EAAM8Q,EAAaF,KAEvBC,EAAYC,GACnBtR,EAAOqR,GAAaL,EAASK,GAE/B,OAASF,EAAYD,GACnBlR,EAAOiR,EAAQE,IAAcnH,EAAKmH,GAEpC,KAAOC,KACLpR,EAAOqR,KAAerH,EAAKmH,KAE7B,OAAOnR,EAaT,SAASuR,GAAiBvH,EAAMgH,EAAUC,GASxC,IARA,IAAIO,GAAgB,EAChBN,EAAgBD,EAAQ9S,OACxBgT,GAAa,EACbC,EAAajO,GAAU6G,EAAK7L,OAAS+S,EAAe,GACpDO,GAAc,EACdC,EAAcV,EAAS7S,OACvB6B,EAASQ,EAAM4Q,EAAaM,KAEvBP,EAAYC,GACnBpR,EAAOmR,GAAanH,EAAKmH,GAG3B,IADA,IAAIhL,EAASgL,IACJM,EAAaC,GACpB1R,EAAOmG,EAASsL,GAAcT,EAASS,GAEzC,OAASD,EAAeN,GACtBlR,EAAOmG,EAAS8K,EAAQO,IAAiBxH,EAAKmH,KAEhD,OAAOnR,EAWT,SAAS2R,GAAiBC,EAAQC,GAChC,OAAO,SAAS1K,EAAYrB,EAAU6B,GACpC,IAAI3H,EAAS6R,EAAcA,IAAgB,GAG3C,GAFA/L,EAAWoJ,GAAYpJ,EAAU6B,EAAS,GAEtC1D,GAAQkD,GAIV,IAHA,IAAI/I,GAAS,EACTD,EAASgJ,EAAWhJ,SAEfC,EAAQD,GAAQ,CACvB,IAAIb,EAAQ6J,EAAW/I,GACvBwT,EAAO5R,EAAQ1C,EAAOwI,EAASxI,EAAOc,EAAO+I,GAAaA,QAG5DsD,GAAStD,GAAY,SAAS7J,EAAOqJ,EAAKQ,GACxCyK,EAAO5R,EAAQ1C,EAAOwI,EAASxI,EAAOqJ,EAAKQ,GAAaA,MAG5D,OAAOnH,GAWX,SAAS8R,GAAeC,GACtB,OAAOC,IAAU,SAAS9X,EAAQ+X,GAChC,IAAI7T,GAAS,EACTD,EAAmB,MAAVjE,EAAiB,EAAI+X,EAAQ9T,OACtC0I,EAAa1I,EAAS,EAAI8T,EAAQ9T,EAAS,QAj7FjDT,EAk7FMwU,EAAQ/T,EAAS,EAAI8T,EAAQ,QAl7FnCvU,EAm7FMiK,EAAUxJ,EAAS,EAAI8T,EAAQ9T,EAAS,QAn7F9CT,EAg8FE,IAXyB,mBAAdmJ,GACTA,EAAaiB,GAAajB,EAAYc,EAAS,GAC/CxJ,GAAU,GAGVA,IADA0I,EAA+B,mBAAXc,EAAwBA,OAz7FhDjK,GA07F4B,EAAI,EAE1BwU,GAASC,GAAeF,EAAQ,GAAIA,EAAQ,GAAIC,KAClDrL,EAAa1I,EAAS,OA77F1BT,EA67F0CmJ,EACtC1I,EAAS,KAEFC,EAAQD,GAAQ,CACvB,IAAIzK,EAASue,EAAQ7T,GACjB1K,GACFqe,EAAS7X,EAAQxG,EAAQmT,GAG7B,OAAO3M,KAYX,SAASwQ,GAAeM,EAAU9M,GAChC,OAAO,SAASiJ,EAAYrB,GAC1B,IAAI3H,EAASgJ,EAAaiL,GAAUjL,GAAc,EAClD,IAAKkL,GAASlU,GACZ,OAAO6M,EAAS7D,EAAYrB,GAK9B,IAHA,IAAI1H,EAAQF,EAAYC,GAAU,EAC9BmU,EAAWvG,GAAS5E,IAEhBjJ,EAAYE,MAAYA,EAAQD,KACa,IAA/C2H,EAASwM,EAASlU,GAAQA,EAAOkU,KAIvC,OAAOnL,GAWX,SAASmE,GAAcpN,GACrB,OAAO,SAAShE,EAAQ4L,EAAUyM,GAMhC,IALA,IAAID,EAAWvG,GAAS7R,GACpB4M,EAAQyL,EAASrY,GACjBiE,EAAS2I,EAAM3I,OACfC,EAAQF,EAAYC,GAAU,EAE1BD,EAAYE,MAAYA,EAAQD,GAAS,CAC/C,IAAIwI,EAAMG,EAAM1I,GAChB,IAA+C,IAA3C0H,EAASwM,EAAS3L,GAAMA,EAAK2L,GAC/B,MAGJ,OAAOpY,GA8BX,SAASmQ,GAAYlF,GACnB,OAAQvC,IAAgBR,GAAO,IAAI8C,GAASC,GAAU,KAWxD,SAASqN,GAAiBvD,GACxB,OAAO,SAAStQ,GAMd,IALA,IAAIP,GAAS,EACTJ,EAAQyU,GAAMC,GAAO/T,IACrBR,EAASH,EAAMG,OACf6B,EAAS,KAEJ5B,EAAQD,GACf6B,EAASiP,EAASjP,EAAQhC,EAAMI,GAAQA,GAE1C,OAAO4B,GAYX,SAAS2S,GAAkB/J,GACzB,OAAO,WAIL,IAAIoB,EAAO6G,UACX,OAAQ7G,EAAK7L,QACX,KAAK,EAAG,OAAO,IAAIyK,EACnB,KAAK,EAAG,OAAO,IAAIA,EAAKoB,EAAK,IAC7B,KAAK,EAAG,OAAO,IAAIpB,EAAKoB,EAAK,GAAIA,EAAK,IACtC,KAAK,EAAG,OAAO,IAAIpB,EAAKoB,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC/C,KAAK,EAAG,OAAO,IAAIpB,EAAKoB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACxD,KAAK,EAAG,OAAO,IAAIpB,EAAKoB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IACjE,KAAK,EAAG,OAAO,IAAIpB,EAAKoB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAC1E,KAAK,EAAG,OAAO,IAAIpB,EAAKoB,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,GAAIA,EAAK,IAErF,IAAI4I,EAAc/I,GAAWjB,EAAKzH,WAC9BnB,EAAS4I,EAAKqB,MAAM2I,EAAa5I,GAIrC,OAAOtE,GAAS1F,GAAUA,EAAS4S,GAWvC,SAASC,GAAYC,GASnB,OARA,SAASC,EAAUrL,EAAMsL,EAAOd,GAC1BA,GAASC,GAAezK,EAAMsL,EAAOd,KACvCc,OA3lGJtV,GA6lGE,IAAIsC,EAASiT,GAAcvL,EAAMoL,OA7lGnCpV,OAAAA,OAAAA,OAAAA,OAAAA,EA6lGgGsV,GAE9F,OADAhT,EAAOF,YAAciT,EAAUjT,YACxBE,GAaX,SAASkT,GAAenB,EAAUlL,GAChC,OAAOmL,IAAU,SAAShI,GACxB,IAAI9P,EAAS8P,EAAK,GAClB,OAAc,MAAV9P,EACKA,GAET8P,EAAKzE,KAAKsB,GACHkL,EAAS9H,WAnnGlBvM,EAmnGmCsM,OAYrC,SAASmJ,GAAeC,EAAYC,GAClC,OAAO,SAASlM,EAAYrB,EAAU6B,GAKpC,GAJIA,GAAWwK,GAAehL,EAAYrB,EAAU6B,KAClD7B,OAloGJpI,GAqoGyB,IADvBoI,EAAWoJ,GAAYpJ,EAAU6B,EAAS,IAC7BxJ,OAAa,CAExB,IAAI6B,EA/0DV,SAAuBhC,EAAO8H,EAAUsN,EAAYC,GAMlD,IALA,IAAIjV,GAAS,EACTD,EAASH,EAAMG,OACfwR,EAAW0D,EACXrT,EAAS2P,IAEJvR,EAAQD,GAAQ,CACvB,IAAIb,EAAQU,EAAMI,GACdkV,GAAWxN,EAASxI,GAEpB8V,EAAWE,EAAS3D,KACtBA,EAAW2D,EACXtT,EAAS1C,GAGb,OAAO0C,EAg0DUuT,CADbpM,EAAalD,GAAQkD,GAAcA,EAAaqM,GAAWrM,GACpBrB,EAAUsN,EAAYC,GAC7D,IAAMlM,EAAWhJ,QAAU6B,IAAWqT,EACpC,OAAOrT,EAGX,OAr0CJ,SAAsBmH,EAAYrB,EAAUsN,EAAYC,GACtD,IAAI1D,EAAW0D,EACXrT,EAAS2P,EASb,OAPAlF,GAAStD,GAAY,SAAS7J,EAAOc,EAAO+I,GAC1C,IAAImM,GAAWxN,EAASxI,EAAOc,EAAO+I,IAClCiM,EAAWE,EAAS3D,IAAc2D,IAAYD,GAAWC,IAAYtT,KACvE2P,EAAW2D,EACXtT,EAAS1C,MAGN0C,EA0zCEyT,CAAatM,EAAYrB,EAAUsN,EAAYC,IAY1D,SAASK,GAAW1I,EAAU9M,GAC5B,OAAO,SAASiJ,EAAYlJ,EAAW0J,GAErC,GADA1J,EAAYiR,GAAYjR,EAAW0J,EAAS,GACxC1D,GAAQkD,GAAa,CACvB,IAAI/I,EAAQL,GAAcoJ,EAAYlJ,EAAWC,GACjD,OAAOE,GAAS,EAAI+I,EAAW/I,QA7pGnCV,EA+pGE,OAAOqN,GAAS5D,EAAYlJ,EAAW+M,IAW3C,SAAS2I,GAAgBzV,GACvB,OAAO,SAASF,EAAOC,EAAW0J,GAChC,OAAM3J,GAASA,EAAMG,OAIdJ,GAAcC,EADrBC,EAAYiR,GAAYjR,EAAW0J,EAAS,GACLzJ,IAH7B,GAcd,SAAS0V,GAAcC,GACrB,OAAO,SAAS3Z,EAAQ+D,EAAW0J,GAEjC,OAAOoD,GAAS7Q,EADhB+D,EAAYiR,GAAYjR,EAAW0J,EAAS,GACTkM,GAAY,IAWnD,SAASC,GAAW5V,GAClB,OAAO,WAOL,IANA,IAAI6V,EACA5V,EAAS0S,UAAU1S,OACnBC,EAAQF,EAAYC,GAAU,EAC9BkT,EAAY,EACZ2C,EAAQxT,EAAMrC,GAEVD,EAAYE,MAAYA,EAAQD,GAAS,CAC/C,IAAIuJ,EAAOsM,EAAM3C,KAAeR,UAAUzS,GAC1C,GAAmB,mBAARsJ,EACT,MAAM,IAAIzG,GAAUlP,IAEjBgiB,GAAW5P,GAAchD,UAAU8S,MAA6B,WAArBC,GAAYxM,KAC1DqM,EAAU,IAAI5P,GAAc,IAAI,IAIpC,IADA/F,EAAQ2V,GAAW,EAAI5V,IACdC,EAAQD,GAAQ,CAGvB,IAAIgW,EAAWD,GAFfxM,EAAOsM,EAAM5V,IAGTgH,EAAmB,WAAZ+O,EAAwBC,GAAQ1M,QA/tG/ChK,EAkuGMqW,EADE3O,GAAQiP,GAAWjP,EAAK,KAAkB,KAAXA,EAAK,KAA8DA,EAAK,GAAGjH,QAAqB,GAAXiH,EAAK,GACjH2O,EAAQG,GAAY9O,EAAK,KAAK6E,MAAM8J,EAAS3O,EAAK,IAElC,GAAfsC,EAAKvJ,QAAekW,GAAW3M,GAASqM,EAAQI,KAAcJ,EAAQE,KAAKvM,GAG1F,OAAO,WACL,IAAIsC,EAAO6G,UACPvT,EAAQ0M,EAAK,GAEjB,GAAI+J,GAA0B,GAAf/J,EAAK7L,QAAe8F,GAAQ3G,IAAUA,EAAMa,QAltG5C,IAmtGb,OAAO4V,EAAQO,MAAMhX,GAAOA,QAK9B,IAHA,IAAIc,EAAQ,EACR4B,EAAS7B,EAAS6V,EAAM5V,GAAO6L,MAAM7M,KAAM4M,GAAQ1M,IAE9Cc,EAAQD,GACf6B,EAASgU,EAAM5V,GAAOyD,KAAKzE,KAAM4C,GAEnC,OAAOA,IAab,SAASuU,GAAcC,EAAWxJ,GAChC,OAAO,SAAS7D,EAAYrB,EAAU6B,GACpC,MAA2B,mBAAZ7B,QAnwGjBpI,IAmwG2CiK,GAAyB1D,GAAQkD,GACtEqN,EAAUrN,EAAYrB,GACtBkF,EAAS7D,EAAYW,GAAahC,EAAU6B,EAAS,KAW7D,SAAS8M,GAAYZ,GACnB,OAAO,SAAS3Z,EAAQ4L,EAAU6B,GAIhC,MAHuB,mBAAZ7B,QAlxGbpI,IAkxGuCiK,IACnC7B,EAAWgC,GAAahC,EAAU6B,EAAS,IAEtCkM,EAAW3Z,EAAQ4L,EAAU2F,KAWxC,SAASiJ,GAAab,GACpB,OAAO,SAAS3Z,EAAQ4L,EAAU6B,GAIhC,MAHuB,mBAAZ7B,QAlyGbpI,IAkyGuCiK,IACnC7B,EAAWgC,GAAahC,EAAU6B,EAAS,IAEtCkM,EAAW3Z,EAAQ4L,IAW9B,SAAS6O,GAAmBC,GAC1B,OAAO,SAAS1a,EAAQ4L,EAAU6B,GAChC,IAAI3H,EAAS,GASb,OARA8F,EAAWoJ,GAAYpJ,EAAU6B,EAAS,GAE1CyB,GAAWlP,GAAQ,SAASoD,EAAOqJ,EAAKzM,GACtC,IAAI2a,EAAS/O,EAASxI,EAAOqJ,EAAKzM,GAElCoD,EAAQsX,EAAYtX,EAAQuX,EAC5B7U,EAFA2G,EAAMiO,EAAYC,EAASlO,GAEbrJ,KAET0C,GAWX,SAAS8U,GAAa5W,GACpB,OAAO,SAASS,EAAQR,EAAQS,GAE9B,OADAD,EAASF,GAAaE,IACdT,EAAYS,EAAS,IAAMoW,GAAcpW,EAAQR,EAAQS,IAAUV,EAAY,GAAKS,IAWhG,SAASqW,GAAclC,GACrB,IAAImC,EAAcjD,IAAU,SAAStK,EAAMsJ,GACzC,IAAIC,EAAUpR,GAAemR,EAAUiE,EAAYnV,aACnD,OAAOmT,GAAcvL,EAAMoL,OAv1G7BpV,EAu1G8CsT,EAAUC,MAExD,OAAOgE,EAWT,SAASC,GAAaV,EAAWxJ,GAC/B,OAAO,SAAS7D,EAAYrB,EAAUO,EAAasB,GACjD,IAAIrB,EAAgBuK,UAAU1S,OAAS,EACvC,MAA2B,mBAAZ2H,QAv2GjBpI,IAu2G2CiK,GAAyB1D,GAAQkD,GACtEqN,EAAUrN,EAAYrB,EAAUO,EAAaC,GAC7C+H,GAAWlH,EAAY+H,GAAYpJ,EAAU6B,EAAS,GAAItB,EAAaC,EAAe0E,IAqB9F,SAASmK,GAAoBzN,EAAM0N,EAASzN,EAASqJ,EAAUC,EAASoE,EAAeC,EAAcC,EAAQC,EAAKxC,GAChH,IAAIyC,EAl3GO,IAk3GCL,EACRM,EA13GQ,EA03GCN,EACTO,EA13GY,EA03GAP,EACZQ,EAz3GS,EAy3GCR,EACVS,EA33Ge,EA23GAT,EACfU,EA13Ge,GA03GAV,EACfxM,EAAO+M,OAr4GXjY,EAq4GmCiV,GAAkBjL,GA6DrD,OA3DA,SAASqM,IAOP,IAJA,IAAI5V,EAAS0S,UAAU1S,OACnBC,EAAQD,EACR6L,EAAOxJ,EAAMrC,GAEVC,KACL4L,EAAK5L,GAASyS,UAAUzS,GAQ1B,GANI4S,IACFhH,EAAO+G,GAAY/G,EAAMgH,EAAUC,IAEjCoE,IACFrL,EAAOuH,GAAiBvH,EAAMqL,EAAeC,IAE3CM,GAAWE,EAAc,CAC3B,IAAIhW,EAAciU,EAAQjU,YACtBiW,EAAclW,GAAemK,EAAMlK,GAGvC,IADA3B,GAAU4X,EAAY5X,QACT6U,EAAO,CAClB,IAAIgD,EAAYT,EAAS3P,GAAU2P,QA75GzC7X,EA85GUuY,EAAW9S,GAAU6P,EAAQ7U,EAAQ,GACrC+X,EAAcN,EAAUG,OA/5GlCrY,EAg6GUyY,EAAkBP,OAh6G5BlY,EAg6GkDqY,EACxCK,EAAcR,EAAU5L,OAj6GlCtM,EAk6GU2Y,EAAmBT,OAl6G7BlY,EAk6GmDsM,EAE7CoL,GAAYQ,EAz5GH,GACM,GAy5GfR,KAAaQ,EAz5GE,GADN,IA45GJC,IACHT,IAAW,GAEb,IAAIkB,EAAU,CAAC5O,EAAM0N,EAASzN,EAASyO,EAAaF,EAAaG,EAAkBF,EAAiBH,EAAWR,EAAKS,GAChHjW,EAASmV,GAAoBlL,WA36GvCvM,EA26GwD4Y,GAMlD,OAJIjC,GAAW3M,IACb6O,GAAQvW,EAAQsW,GAElBtW,EAAOF,YAAcA,EACdE,GAGX,IAAI4S,EAAc8C,EAAS/N,EAAUvK,KACjCoZ,EAAKb,EAAY/C,EAAYlL,GAAQA,EAWzC,OATI6N,IACFvL,EAAOyM,GAAQzM,EAAMuL,IAEnBE,GAASD,EAAMxL,EAAK7L,SACtB6L,EAAK7L,OAASqX,GAEZpY,MAAQA,OAASD,IAAQC,gBAAgB2W,IAC3CyC,EAAK5N,GAAQ+J,GAAkBjL,IAE1B8O,EAAGvM,MAAM2I,EAAa5I,IAejC,SAAS+K,GAAcpW,EAAQR,EAAQS,GACrC,IAAI8X,EAAY/X,EAAOR,OAGvB,GAAIuY,IAFJvY,GAAUA,KAEkB6E,GAAe7E,GACzC,MAAO,GAET,IAAIwY,EAAYxY,EAASuY,EAEzB,OAAOE,GADPhY,EAAiB,MAATA,EAAgB,IAAOA,EAAQ,GAClB8D,GAAWiU,EAAY/X,EAAMT,SAAS0Y,MAAM,EAAGF,GAetE,SAASG,GAAqBpP,EAAM0N,EAASzN,EAASqJ,GACpD,IAAI0E,EAl+GQ,EAk+GCN,EACTxM,EAAO+J,GAAkBjL,GAoB7B,OAlBA,SAASqM,IASP,IANA,IAAI5C,GAAa,EACbC,EAAaP,UAAU1S,OACvBkT,GAAa,EACbC,EAAaN,EAAS7S,OACtB6L,EAAOxJ,EAAM8Q,EAAaF,KAErBC,EAAYC,GACnBtH,EAAKqH,GAAaL,EAASK,GAE7B,KAAOD,KACLpH,EAAKqH,KAAeR,YAAYM,GAElC,IAAIqF,EAAMpZ,MAAQA,OAASD,IAAQC,gBAAgB2W,EAAWnL,EAAOlB,EACrE,OAAO8O,EAAGvM,MAAMyL,EAAS/N,EAAUvK,KAAM4M,IAY7C,SAAS+M,GAAYC,GACnB,IAAItP,EAAO5G,GAAKkW,GAChB,OAAO,SAASC,EAAQC,GAEtB,OADAA,OA1gHFxZ,IA0gHcwZ,EAA0B,GAAMA,GAAa,IAEvDA,EAAYhV,GAAI,GAAIgV,GACbxP,EAAKuP,EAASC,GAAaA,GAE7BxP,EAAKuP,IAWhB,SAASE,GAAkBhH,GACzB,OAAO,SAASnS,EAAOV,EAAOwI,EAAU6B,GACtC,IAAIsH,EAAWC,GAAYpJ,GAC3B,OAAoB,MAAZA,GAAoBmJ,IAAaxH,GACrCyI,GAAYlS,EAAOV,EAAO6S,GAC1BK,GAAcxS,EAAOV,EAAO2R,EAASnJ,EAAU6B,EAAS,GAAIwI,IA6BpE,SAAS8C,GAAcvL,EAAM0N,EAASzN,EAASqJ,EAAUC,EAASsE,EAAQC,EAAKxC,GAC7E,IAAI2C,EAtjHY,EAsjHAP,EAChB,IAAKO,GAA4B,mBAARjO,EACvB,MAAM,IAAIzG,GAAUlP,GAEtB,IAAIoM,EAAS6S,EAAWA,EAAS7S,OAAS,EAM1C,GALKA,IACHiX,IAAW,GACXpE,EAAWC,OApkHbvT,GAskHAS,GAAW8S,EAAUA,EAAQ9S,OAAS,EA1jHjB,GA2jHjBiX,EAA8B,CAChC,IAAIC,EAAgBrE,EAChBsE,EAAerE,EAEnBD,EAAWC,OA3kHbvT,EA6kHA,IAAI0H,EAAOuQ,OA7kHXjY,EA6kHmC0W,GAAQ1M,GACvC4O,EAAU,CAAC5O,EAAM0N,EAASzN,EAASqJ,EAAUC,EAASoE,EAAeC,EAAcC,EAAQC,EAAKxC,GAWpG,GATI5N,KAsgBN,SAAmBA,EAAM1R,GACvB,IAAI0hB,EAAUhQ,EAAK,GACfgS,EAAa1jB,EAAO,GACpB2jB,EAAajC,EAAUgC,EACvBhN,EAAWiN,EA7kIJ,IA+kIPC,EA/kIO,KAglIRF,GAplIU,GAolIgBhC,GAhlIlB,KAilIRgC,GAhlIU,KAglIgBhC,GAAyBhQ,EAAK,GAAGjH,QAAUzK,EAAO,IAC9D,KAAd0jB,GAtlIU,GAslI+BhC,EAG5C,IAAMhL,IAAYkN,EAChB,OAAOlS,EA7lIG,EAgmIRgS,IACFhS,EAAK,GAAK1R,EAAO,GAEjB2jB,GAnmIU,EAmmIKjC,EAAuB,EAjmIrB,GAomInB,IAAI9X,EAAQ5J,EAAO,GACnB,GAAI4J,EAAO,CACT,IAAI0T,EAAW5L,EAAK,GACpBA,EAAK,GAAK4L,EAAWD,GAAYC,EAAU1T,EAAO5J,EAAO,IAAMkS,GAAUtI,GACzE8H,EAAK,GAAK4L,EAAWnR,GAAeuF,EAAK,GAAIpT,GAAe4T,GAAUlS,EAAO,KAG/E4J,EAAQ5J,EAAO,MAEbsd,EAAW5L,EAAK,GAChBA,EAAK,GAAK4L,EAAWO,GAAiBP,EAAU1T,EAAO5J,EAAO,IAAMkS,GAAUtI,GAC9E8H,EAAK,GAAK4L,EAAWnR,GAAeuF,EAAK,GAAIpT,GAAe4T,GAAUlS,EAAO,MAG/E4J,EAAQ5J,EAAO,MAEb0R,EAAK,GAAKQ,GAAUtI,IA/mIX,IAknIP8Z,IACFhS,EAAK,GAAgB,MAAXA,EAAK,GAAa1R,EAAO,GAAK2P,GAAU+B,EAAK,GAAI1R,EAAO,KAGrD,MAAX0R,EAAK,KACPA,EAAK,GAAK1R,EAAO,IAGnB0R,EAAK,GAAK1R,EAAO,GACjB0R,EAAK,GAAKiS,EAvjBRE,CAAUjB,EAASlR,GACnBgQ,EAAUkB,EAAQ,GAClBtD,EAAQsD,EAAQ,IAElBA,EAAQ,GAAc,MAATtD,EACR2C,EAAY,EAAIjO,EAAKvJ,OACrBgF,GAAU6P,EAAQ7U,EAAQ,IAAM,EAjlHzB,GAmlHRiX,EACF,IAAIpV,EArlBR,SAA2B0H,EAAMC,GAC/B,IAAIiB,EAAO+J,GAAkBjL,GAM7B,OAJA,SAASqM,IACP,IAAIyC,EAAMpZ,MAAQA,OAASD,IAAQC,gBAAgB2W,EAAWnL,EAAOlB,EACrE,OAAO8O,EAAGvM,MAAMtC,EAASkJ,YAglBZ2G,CAAkBlB,EAAQ,GAAIA,EAAQ,SAInDtW,EAnlHa,IAglHHoV,GAAsC,IAAXA,GAA2CkB,EAAQ,GAAGnY,OAGlFgX,GAAoBlL,WA9lH/BvM,EA8lHgD4Y,GAFrCQ,GAAqB7M,WA5lHhCvM,EA4lHiD4Y,GAKjD,OADalR,EAAOmJ,GAAcgI,IACpBvW,EAAQsW,GAiBxB,SAAStJ,GAAYhP,EAAOT,EAAO2O,EAAWrF,EAAYoF,EAAS5D,EAAQC,GACzE,IAAIlK,GAAS,EACTqZ,EAAYzZ,EAAMG,OAClBuZ,EAAYna,EAAMY,OAEtB,GAAIsZ,GAAaC,KAAezL,GAAWyL,EAAYD,GACrD,OAAO,EAGT,OAASrZ,EAAQqZ,GAAW,CAC1B,IAAIE,EAAW3Z,EAAMI,GACjBwZ,EAAWra,EAAMa,GACjB4B,EAAS6G,EAAaA,EAAWoF,EAAU2L,EAAWD,EAAU1L,EAAU0L,EAAWC,EAAUxZ,QA9nHrGV,EAgoHE,QAhoHFA,IAgoHMsC,EAAsB,CACxB,GAAIA,EACF,SAEF,OAAO,EAGT,GAAIiM,GACF,IAAK1F,GAAUhJ,GAAO,SAASqa,GACzB,OAAOD,IAAaC,GAAY1L,EAAUyL,EAAUC,EAAU/Q,EAAYoF,EAAS5D,EAAQC,MAE/F,OAAO,OAEJ,GAAMqP,IAAaC,IAAY1L,EAAUyL,EAAUC,EAAU/Q,EAAYoF,EAAS5D,EAAQC,GAC/F,OAAO,EAGX,OAAO,EAwDT,SAAS2E,GAAa/S,EAAQqD,EAAO2O,EAAWrF,EAAYoF,EAAS5D,EAAQC,GAC3E,IAAIuP,EAAW9Q,GAAK7M,GAChB4d,EAAYD,EAAS1Z,OAIzB,GAAI2Z,GAHW/Q,GAAKxJ,GACKY,SAEM8N,EAC7B,OAAO,EAGT,IADA,IAAI7N,EAAQ0Z,EACL1Z,KAAS,CACd,IAAIuI,EAAMkR,EAASzZ,GACnB,KAAM6N,EAAUtF,KAAOpJ,EAAQiE,GAAeK,KAAKtE,EAAOoJ,IACxD,OAAO,EAIX,IADA,IAAIoR,EAAW9L,IACN7N,EAAQ0Z,GAAW,CAE1B,IAAIvK,EAAWrT,EADfyM,EAAMkR,EAASzZ,IAEXwZ,EAAWra,EAAMoJ,GACjB3G,EAAS6G,EAAaA,EAAWoF,EAAU2L,EAAWrK,EAAUtB,EAASsB,EAAWqK,EAAUjR,QA9tHpGjJ,EAiuHE,UAjuHFA,IAiuHQsC,EAAuBkM,EAAUqB,EAAUqK,EAAU/Q,EAAYoF,EAAS5D,EAAQC,GAAUtI,GAChG,OAAO,EAET+X,IAAaA,EAAkB,eAAPpR,GAE1B,IAAKoR,EAAU,CACb,IAAIC,EAAU9d,EAAOqO,YACjB0P,EAAU1a,EAAMgL,YAGpB,GAAIyP,GAAWC,GACV,gBAAiB/d,GAAU,gBAAiBqD,KACzB,mBAAXya,GAAyBA,aAAmBA,GACjC,mBAAXC,GAAyBA,aAAmBA,GACvD,OAAO,EAGX,OAAO,EAYT,SAAS/I,GAAYxH,EAAMC,EAASC,GAClC,IAAI5H,EAASgE,GAAOiL,UAAYA,GAEhC,OADAjP,EAASA,IAAWiP,GAAWxH,GAAezH,EACvC4H,EAAW5H,EAAO0H,EAAMC,EAASC,GAAY5H,EAUtD,IAAIoU,GAAWtQ,GAAiB,SAAS4D,GACvC,OAAO5D,GAAQoU,IAAIxQ,IADIyQ,GAWzB,SAASjE,GAAYxM,GAKnB,IAJA,IAAI1H,EAAS0H,EAAKiF,KACd3O,EAAQ+F,GAAU/D,GAClB7B,EAASH,EAAQA,EAAMG,OAAS,EAE7BA,KAAU,CACf,IAAIiH,EAAOpH,EAAMG,GACbia,EAAYhT,EAAKsC,KACrB,GAAiB,MAAb0Q,GAAqBA,GAAa1Q,EACpC,OAAOtC,EAAKuH,KAGhB,OAAO3M,EAYT,SAASmK,GAAWhD,EAAYkR,EAAQ/Z,GACtC,IAAI0B,EAASgE,GAAOnF,SAAWA,GAE/B,OADAmB,EAASA,IAAWnB,GAAUR,GAAc2B,EACrCmH,EAAanH,EAAOmH,EAAYkR,EAAQ/Z,GAAa0B,EAa9D,IAAIoS,GAAYpE,GAAa,UAS7B,SAASN,GAAaxT,GAIpB,IAHA,IAAI8F,EAASsY,GAAMpe,GACfiE,EAAS6B,EAAO7B,OAEbA,KACL6B,EAAO7B,GAAQ,GAAKyP,GAAmB5N,EAAO7B,GAAQ,IAExD,OAAO6B,EAWT,SAASqC,GAAUnI,EAAQyM,GACzB,IAAIrJ,EAAkB,MAAVpD,OA11HZwD,EA01HyCxD,EAAOyM,GAChD,OAAO4R,GAASjb,GAASA,OA31HzBI,EA48HF,SAAS8a,GAAWte,EAAQ2R,EAAM7B,GAClB,MAAV9P,GAAmByT,GAAM9B,EAAM3R,KAEjCA,EAAwB,IADxB2R,EAAOgC,GAAOhC,IACA1N,OAAcjE,EAAS0R,GAAQ1R,EAAQ4T,GAAUjC,EAAM,GAAI,IACzEA,EAAOkC,GAAKlC,IAEd,IAAInE,EAAiB,MAAVxN,EAAiBA,EAASA,EAAO2R,GAC5C,OAAe,MAARnE,OAn9HPhK,EAm9HkCgK,EAAKuC,MAAM/P,EAAQ8P,GAUvD,SAAS1C,GAAYhK,GACnB,OAAgB,MAATA,GAAiB+U,GAASD,GAAU9U,IAW7C,SAASkK,GAAQlK,EAAOa,GAGtB,OADAA,EAAmB,MAAVA,EAxuGY,iBAwuGwBA,GAD7Cb,EAAyB,iBAATA,GAAqB5I,EAAS+jB,KAAKnb,IAAWA,GAAS,IAEvD,GAAKA,EAAQ,GAAK,GAAKA,EAAQa,EAYjD,SAASgU,GAAe7U,EAAOc,EAAOlE,GACpC,IAAKwL,GAASxL,GACZ,OAAO,EAET,IAAI2N,SAAczJ,EAClB,GAAY,UAARyJ,EACGP,GAAYpN,IAAWsN,GAAQpJ,EAAOlE,EAAOiE,QACrC,UAAR0J,GAAoBzJ,KAASlE,EAAS,CAC3C,IAAIqD,EAAQrD,EAAOkE,GACnB,OAAOd,GAAUA,EAASA,IAAUC,EAAUA,GAAUA,EAE1D,OAAO,EAWT,SAASoQ,GAAMrQ,EAAOpD,GACpB,IAAI2N,SAAcvK,EAClB,SAAa,UAARuK,GAAoB7T,EAAcykB,KAAKnb,IAAmB,UAARuK,KAGnD5D,GAAQ3G,MAGEvJ,EAAa0kB,KAAKnb,IACJ,MAAVpD,GAAkBoD,KAASyO,GAAS7R,IAUxD,SAASma,GAAW3M,GAClB,IAAIyM,EAAWD,GAAYxM,GAC3B,KAAMyM,KAAYjQ,GAAY/C,WAC5B,OAAO,EAET,IAAI5D,EAAQyG,GAAOmQ,GACnB,GAAIzM,IAASnK,EACX,OAAO,EAET,IAAI6H,EAAOgP,GAAQ7W,GACnB,QAAS6H,GAAQsC,IAAStC,EAAK,GAYjC,SAASiN,GAAS/U,GAChB,MAAuB,iBAATA,GAAqBA,GAAS,GAAKA,EAAQ,GAAK,GAAKA,GArzG9C,iBAg0GvB,SAASsQ,GAAmBtQ,GAC1B,OAAOA,GAAUA,IAAUoI,GAASpI,GA8FtC,SAASob,GAAYxe,EAAQ4M,GAC3B5M,EAAS6R,GAAS7R,GAMlB,IAJA,IAAIkE,GAAS,EACTD,EAAS2I,EAAM3I,OACf6B,EAAS,KAEJ5B,EAAQD,GAAQ,CACvB,IAAIwI,EAAMG,EAAM1I,GACZuI,KAAOzM,IACT8F,EAAO2G,GAAOzM,EAAOyM,IAGzB,OAAO3G,EAYT,SAAS2Y,GAAeze,EAAQ+D,GAC9B,IAAI+B,EAAS,GAMb,OALAwL,GAAUtR,GAAQ,SAASoD,EAAOqJ,EAAKzM,GACjC+D,EAAUX,EAAOqJ,EAAKzM,KACxB8F,EAAO2G,GAAOrJ,MAGX0C,EAaT,SAASyW,GAAQzY,EAAOkQ,GAKtB,IAJA,IAAIuJ,EAAYzZ,EAAMG,OAClBA,EAASkF,GAAU6K,EAAQ/P,OAAQsZ,GACnCmB,EAAWhT,GAAU5H,GAElBG,KAAU,CACf,IAAIC,EAAQ8P,EAAQ/P,GACpBH,EAAMG,GAAUqJ,GAAQpJ,EAAOqZ,GAAamB,EAASxa,QAttIvDV,EAwtIA,OAAOM,EAgBT,IACM6a,GACAC,GAFFvC,IACEsC,GAAQ,EACRC,GAAa,EAEV,SAASnS,EAAKrJ,GACnB,IAAIyb,EAAQC,KACRC,EAxtIK,IAwtImBF,EAAQD,IAGpC,GADAA,GAAaC,EACTE,EAAY,GACd,KAAMJ,IA7tIE,IA8tIN,OAAOlS,OAGTkS,GAAQ,EAEV,OAAOtK,GAAY5H,EAAKrJ,KAY5B,SAAS4b,GAAShf,GAWhB,IAVA,IAAI4M,EAAQ2E,GAAOvR,GACfqN,EAAcT,EAAM3I,OACpBA,EAASoJ,GAAerN,EAAOiE,OAE/Bgb,IAAiBhb,GAAUkU,GAASlU,KACrC8F,GAAQ/J,IAAWkR,GAAYlR,IAE9BkE,GAAS,EACT4B,EAAS,KAEJ5B,EAAQmJ,GAAa,CAC5B,IAAIZ,EAAMG,EAAM1I,IACX+a,GAAgB3R,GAAQb,EAAKxI,IAAYqD,GAAeK,KAAK3H,EAAQyM,KACxE3G,EAAOuF,KAAKoB,GAGhB,OAAO3G,EAUT,SAASwT,GAAWlW,GAClB,OAAa,MAATA,EACK,GAEJgK,GAAYhK,GAGVoI,GAASpI,GAASA,EAAQT,GAAOS,GAF/B6H,GAAO7H,GAYlB,SAASyO,GAASzO,GAChB,OAAOoI,GAASpI,GAASA,EAAQT,GAAOS,GAU1C,SAASuQ,GAAOvQ,GACd,GAAI2G,GAAQ3G,GACV,OAAOA,EAET,IAAI0C,EAAS,GAIb,OAHAvB,GAAanB,GAAOwE,QAAQ7N,GAAY,SAASmlB,EAAOnC,EAAQoC,EAAO1a,GACrEqB,EAAOuF,KAAK8T,EAAQ1a,EAAOmD,QAAQzN,EAAc,MAAS4iB,GAAUmC,MAE/DpZ,EAUT,SAASoE,GAAa2P,GACpB,OAAOA,aAAmB7P,GACtB6P,EAAQuF,QACR,IAAInV,GAAc4P,EAAQvP,YAAauP,EAAQrP,UAAWkB,GAAUmO,EAAQtP,cAuFlF,IAAI8U,GAAavH,IAAU,SAAShU,EAAOmH,GACzC,OAAQzF,GAAa1B,IAAUsJ,GAAYtJ,GACvCkM,GAAelM,EAAOkN,GAAY/F,GAAQ,GAAO,IACjD,MA2BN,SAASqU,GAAKxb,EAAOtC,EAAGwW,GAEtB,OADalU,EAAQA,EAAMG,OAAS,KAIhC+T,EAAQC,GAAenU,EAAOtC,EAAGwW,GAAc,MAALxW,KAC5CA,EAAI,GAECoS,GAAU9P,EAAOtC,EAAI,EAAI,EAAIA,IAL3B,GAgCX,SAAS+d,GAAUzb,EAAOtC,EAAGwW,GAC3B,IAAI/T,EAASH,EAAQA,EAAMG,OAAS,EACpC,OAAKA,IAGD+T,EAAQC,GAAenU,EAAOtC,EAAGwW,GAAc,MAALxW,KAC5CA,EAAI,GAGCoS,GAAU9P,EAAO,GADxBtC,EAAIyC,IAAWzC,GAAK,IACW,EAAI,EAAIA,IAN9B,GA+MX,IAAIge,GAAY/F,KAkDZgG,GAAgBhG,IAAgB,GAmBpC,SAASiG,GAAM5b,GACb,OAAOA,EAAQA,EAAM,QAhwJrBN,EA60JF,SAASmB,GAAQb,EAAOV,EAAOgB,GAC7B,IAAIH,EAASH,EAAQA,EAAMG,OAAS,EACpC,IAAKA,EACH,OAAQ,EAEV,GAAwB,iBAAbG,EACTA,EAAYA,EAAY,EAAI6E,GAAUhF,EAASG,EAAW,GAAKA,OAC1D,GAAIA,EAAW,CACpB,IAAIF,EAAQ8R,GAAYlS,EAAOV,GAC/B,OAAIc,EAAQD,IACPb,GAAUA,EAASA,IAAUU,EAAMI,GAAWJ,EAAMI,IAAWJ,EAAMI,IACjEA,GAED,EAEV,OAAOC,GAAYL,EAAOV,EAAOgB,GAAa,GAkChD,IAAIub,GAAe7H,IAAU,SAAS8H,GAQpC,IAPA,IAAIpC,EAAYoC,EAAO3b,OACnB4b,EAAWrC,EACXsC,EAASxZ,EAAMrC,GACfU,EAAUsL,KACVC,EAAWvL,GAAWR,GACtB2B,EAAS,GAEN+Z,KAAY,CACjB,IAAIzc,EAAQwc,EAAOC,GAAYzS,GAAYhK,EAAQwc,EAAOC,IAAazc,EAAQ,GAC/E0c,EAAOD,GAAa3P,GAAY9M,EAAMa,QAAU,IAAOkM,GAAY0P,GAAYzc,GAAS,KAE1F,IAAIU,EAAQ8b,EAAO,GACf1b,GAAS,EACTD,EAASH,EAAQA,EAAMG,OAAS,EAChCuR,EAAOsK,EAAO,GAElBzP,EACA,OAASnM,EAAQD,GAEf,GADAb,EAAQU,EAAMI,IACTsR,EAAOlK,GAAakK,EAAMpS,GAASuB,EAAQmB,EAAQ1C,EAAO,IAAM,EAAG,CAEtE,IADIyc,EAAWrC,IACNqC,GAAU,CACjB,IAAItU,EAAQuU,EAAOD,GACnB,IAAKtU,EAAQD,GAAaC,EAAOnI,GAASuB,EAAQib,EAAOC,GAAWzc,EAAO,IAAM,EAC/E,SAASiN,EAGTmF,GACFA,EAAKnK,KAAKjI,GAEZ0C,EAAOuF,KAAKjI,GAGhB,OAAO0C,KAgBT,SAAS+N,GAAK/P,GACZ,IAAIG,EAASH,EAAQA,EAAMG,OAAS,EACpC,OAAOA,EAASH,EAAMG,EAAS,QAl7J/BT,EA6iKF,IAAIuc,GAASjI,IAAU,SAAShU,EAAOkQ,GAGrC,IAAIlO,EAASkH,GAAOlJ,EAFpBkQ,EAAUhD,GAAYgD,IAItB,OADAD,GAAWjQ,EAAOkQ,EAAQW,KAAKxR,KACxB2C,KA6ET,SAASka,GAAKlc,GACZ,OAAOwb,GAAKxb,EAAO,GA6ErB,IAAImc,GAAchD,KAsBdiD,GAAkBjD,IAAkB,GAsMpCkD,GAAQrI,IAAU,SAAS8H,GAC7B,OAAOtK,GAAStE,GAAY4O,GAAQ,GAAO,OAoD7C,SAASQ,GAAKtc,EAAOuc,EAAUzU,EAAU6B,GAEvC,KADa3J,EAAQA,EAAMG,OAAS,GAElC,MAAO,GAEO,MAAZoc,GAAuC,kBAAZA,IAE7BzU,EAAWqM,GAAenU,EAAOuc,EADjC5S,EAAU7B,QAp+KZpI,EAq+KoE6c,EAClEA,GAAW,GAEb,IAAItL,EAAWC,KAIf,OAHkB,MAAZpJ,GAAoBmJ,IAAaxH,KACrC3B,EAAWmJ,EAASnJ,EAAU6B,EAAS,IAEjC4S,GAAYpQ,MAAgB9L,GAj6JxC,SAAoBL,EAAO8H,GAOzB,IANA,IAAI4J,EACAtR,GAAS,EACTD,EAASH,EAAMG,OACf4B,GAAY,EACZC,EAAS,KAEJ5B,EAAQD,GAAQ,CACvB,IAAIb,EAAQU,EAAMI,GACduR,EAAW7J,EAAWA,EAASxI,EAAOc,EAAOJ,GAASV,EAErDc,GAASsR,IAASC,IACrBD,EAAOC,EACP3P,IAASD,GAAYzC,GAGzB,OAAO0C,EAk5JDwa,CAAWxc,EAAO8H,GAClB0J,GAASxR,EAAO8H,GAqBtB,SAAS2U,GAAMzc,GACb,IAAMA,IAASA,EAAMG,OACnB,MAAO,GAET,IAAIC,GAAS,EACTD,EAAS,EAEbH,EAAQgI,GAAYhI,GAAO,SAAS0c,GAClC,GAAIpT,GAAYoT,GAEd,OADAvc,EAASgF,GAAUuX,EAAMvc,OAAQA,IAC1B,KAIX,IADA,IAAI6B,EAASQ,EAAMrC,KACVC,EAAQD,GACf6B,EAAO5B,GAAS6H,GAASjI,EAAOgQ,GAAa5P,IAE/C,OAAO4B,EAuBT,SAAS2a,GAAU3c,EAAO8H,EAAU6B,GAElC,KADa3J,EAAQA,EAAMG,OAAS,GAElC,MAAO,GAET,IAAI6B,EAASya,GAAMzc,GACnB,OAAgB,MAAZ8H,EACK9F,GAET8F,EAAWgC,GAAahC,EAAU6B,EAAS,GACpC1B,GAASjG,GAAQ,SAAS0a,GAC/B,OAAOtU,GAAYsU,EAAO5U,OAtjL5BpI,GAsjLiD,OAoBnD,IAAIkd,GAAU5I,IAAU,SAAShU,EAAOmH,GACtC,OAAOmC,GAAYtJ,GACfkM,GAAelM,EAAOmH,GACtB,MA+CF0V,GAAM7I,GAAUyI,IAuBpB,SAASK,GAAUhU,EAAO3B,GACxB,IAAI/G,GAAS,EACTD,EAAS2I,EAAQA,EAAM3I,OAAS,EAChC6B,EAAS,GAKb,KAHI7B,GAAWgH,GAAWlB,GAAQ6C,EAAM,MACtC3B,EAAS,MAEF/G,EAAQD,GAAQ,CACvB,IAAIwI,EAAMG,EAAM1I,GACZ+G,EACFnF,EAAO2G,GAAOxB,EAAO/G,GACZuI,IACT3G,EAAO2G,EAAI,IAAMA,EAAI,IAGzB,OAAO3G,EAoBT,IAAI+a,GAAU/I,IAAU,SAAS8H,GAC/B,IAAI3b,EAAS2b,EAAO3b,OAChB2H,EAAW3H,EAAS,EAAI2b,EAAO3b,EAAS,QAzrL5CT,EA0rLIiK,EAAUxJ,EAAS,EAAI2b,EAAO3b,EAAS,QA1rL3CT,EAmsLA,OAPIS,EAAS,GAAwB,mBAAZ2H,EACvB3H,GAAU,GAEV2H,EAAY3H,EAAS,GAAuB,mBAAXwJ,KAA4BxJ,EAAQwJ,QA/rLvEjK,EAgsLEiK,OAhsLFjK,GAksLAoc,EAAO3b,OAASA,EACTwc,GAAUb,EAAQhU,EAAU6B,MA+BrC,SAASqT,GAAM1d,GACb,IAAI0C,EAASgE,GAAO1G,GAEpB,OADA0C,EAAO0E,WAAY,EACZ1E,EAoDT,SAASiU,GAAK3W,EAAO2d,EAAatT,GAChC,OAAOsT,EAAYpZ,KAAK8F,EAASrK,GAiFnC,IAAI4d,GAAgBlJ,IAAU,SAAS7M,GAErC,OADAA,EAAS+F,GAAY/F,GACd/H,KAAK6W,MAAK,SAASjW,GACxB,OAnqJJ,SAAqBA,EAAOT,GAO1B,IANA,IAAIa,GAAS,EACTD,EAASH,EAAMG,OACf4b,GAAY,EACZrC,EAAYna,EAAMY,OAClB6B,EAASQ,EAAMrC,EAASuZ,KAEnBtZ,EAAQD,GACf6B,EAAO5B,GAASJ,EAAMI,GAExB,OAAS2b,EAAWrC,GAClB1X,EAAO5B,KAAWb,EAAMwc,GAE1B,OAAO/Z,EAspJEmb,CAAYlX,GAAQjG,GAASA,EAAQ,CAAC+N,GAAS/N,IAASmH,SA0I/DiW,GAAKpJ,IAAU,SAAS7K,EAAYL,GACtC,OAAOI,GAAOC,EAAY+D,GAAYpE,OA4CpCuU,GAAU1J,IAAiB,SAAS3R,EAAQ1C,EAAOqJ,GACrDnF,GAAeK,KAAK7B,EAAQ2G,KAAS3G,EAAO2G,GAAQ3G,EAAO2G,GAAO,KAmDpE,SAAS2U,GAAMnU,EAAYlJ,EAAW0J,GACpC,IAAID,EAAOzD,GAAQkD,GAAcpB,GAAa8E,GAO9C,OANIlD,GAAWwK,GAAehL,EAAYlJ,EAAW0J,KACnD1J,OA5lMFP,GA8lMwB,mBAAbO,QA9lMXP,IA8lMsCiK,IACpC1J,EAAYiR,GAAYjR,EAAW0J,EAAS,IAEvCD,EAAKP,EAAYlJ,GAoD1B,SAASsd,GAAOpU,EAAYlJ,EAAW0J,GAGrC,OAFW1D,GAAQkD,GAAcnB,GAAc8E,IAEnC3D,EADZlJ,EAAYiR,GAAYjR,EAAW0J,EAAS,IAsD9C,IAAI6T,GAAO9H,GAAWjJ,IAqBlBgR,GAAW/H,GAAW/I,IAAe,GAiErC+Q,GAAUnH,GAAc1O,GAAW4E,IAqBnCkR,GAAepH,IA5iKnB,SAAwBvW,EAAO8H,GAG7B,IAFA,IAAI3H,EAASH,EAAMG,OAEZA,MAC0C,IAA3C2H,EAAS9H,EAAMG,GAASA,EAAQH,KAItC,OAAOA,IAoiKwC2M,IA4C7CiR,GAAUjK,IAAiB,SAAS3R,EAAQ1C,EAAOqJ,GACjDnF,GAAeK,KAAK7B,EAAQ2G,GAC9B3G,EAAO2G,GAAKpB,KAAKjI,GAEjB0C,EAAO2G,GAAO,CAACrJ,MAiCnB,SAASue,GAAS1U,EAAYkR,EAAQ/Z,EAAW4T,GAC/C,IAAI/T,EAASgJ,EAAaiL,GAAUjL,GAAc,EAUlD,OATKkL,GAASlU,KAEZA,GADAgJ,EAAahC,GAAOgC,IACAhJ,QAGpBG,EADsB,iBAAbA,GAA0B4T,GAASC,GAAekG,EAAQ/Z,EAAW4T,GAClE,EAEA5T,EAAY,EAAI6E,GAAUhF,EAASG,EAAW,GAAMA,GAAa,EAElD,iBAAd6I,IAA2BlD,GAAQkD,IAAe2U,GAAS3U,GACrE7I,GAAaH,GAAUgJ,EAAWtI,QAAQwZ,EAAQ/Z,IAAc,IAC9DH,GAAUgM,GAAWhD,EAAYkR,EAAQ/Z,IAAc,EAiDhE,IAAIyd,GAAUpK,IAAiB,SAAS3R,EAAQ1C,EAAOqJ,GACrD3G,EAAO2G,GAAOrJ,KAyBZ0e,GAAShK,IAAU,SAAS7K,EAAY0E,EAAM7B,GAChD,IAAI5L,GAAS,EACTuK,EAAwB,mBAARkD,EAChBoQ,EAAStO,GAAM9B,GACf7L,EAASsH,GAAYH,GAAc3G,EAAM2G,EAAWhJ,QAAU,GAMlE,OAJAsM,GAAStD,GAAY,SAAS7J,GAC5B,IAAIoK,EAAOiB,EAASkD,EAASoQ,GAAmB,MAAT3e,EAAiBA,EAAMuO,QAx+MhEnO,EAy+MEsC,IAAS5B,GAASsJ,EAAOA,EAAKuC,MAAM3M,EAAO0M,GAAQwO,GAAWlb,EAAOuO,EAAM7B,MAEtEhK,KA2DT,SAASkc,GAAI/U,EAAYrB,EAAU6B,GAGjC,OAFW1D,GAAQkD,GAAclB,GAAWwH,IAEhCtG,EADZrB,EAAWoJ,GAAYpJ,EAAU6B,EAAS,IA+D5C,IAAIwU,GAAYxK,IAAiB,SAAS3R,EAAQ1C,EAAOqJ,GACvD3G,EAAO2G,EAAM,EAAI,GAAGpB,KAAKjI,MACxB,WAAa,MAAO,CAAC,GAAI,OAkExB8e,GAASlH,GAAa9O,GAAaqE,IAwBnC4R,GAAcnH,IArxKlB,SAA0BlX,EAAO8H,EAAUO,EAAaC,GACtD,IAAInI,EAASH,EAAMG,OAInB,IAHImI,GAAiBnI,IACnBkI,EAAcrI,IAAQG,IAEjBA,KACLkI,EAAcP,EAASO,EAAarI,EAAMG,GAASA,EAAQH,GAE7D,OAAOqI,IA6wKwCsE,IAgEjD,SAAS2R,GAAOnV,EAAYzL,EAAGwW,GAC7B,GAAIA,EAAQC,GAAehL,EAAYzL,EAAGwW,GAAc,MAALxW,EAGjD,OADIyC,GADJgJ,EAAaqM,GAAWrM,IACAhJ,QACR,EAAIgJ,EAAWiH,GAAW,EAAGjQ,EAAS,SAvwNxDT,EAywNA,IAEIS,EAFAC,GAAS,EACT4B,EAASuc,GAAQpV,GAEjB8B,GADA9K,EAAS6B,EAAO7B,QACK,EAGzB,IADAzC,EAAI2H,GAAU3H,EAAI,EAAI,GAAMA,GAAK,EAAIyC,KAC5BC,EAAQ1C,GAAG,CAClB,IAAI8gB,EAAOpO,GAAWhQ,EAAO6K,GACzB3L,EAAQ0C,EAAOwc,GAEnBxc,EAAOwc,GAAQxc,EAAO5B,GACtB4B,EAAO5B,GAASd,EAGlB,OADA0C,EAAO7B,OAASzC,EACTsE,EA+FT,SAASyc,GAAKtV,EAAYlJ,EAAW0J,GACnC,IAAID,EAAOzD,GAAQkD,GAAcZ,GAAYmI,GAO7C,OANI/G,GAAWwK,GAAehL,EAAYlJ,EAAW0J,KACnD1J,OAz3NFP,GA23NwB,mBAAbO,QA33NXP,IA23NsCiK,IACpC1J,EAAYiR,GAAYjR,EAAW0J,EAAS,IAEvCD,EAAKP,EAAYlJ,GAsG1B,IAAIye,GAAY1K,IAAU,SAAS7K,EAAY4H,GAC7C,GAAkB,MAAd5H,EACF,MAAO,GAET,IAAI+K,EAAQnD,EAAU,GAItB,OAHImD,GAASC,GAAepD,EAAU,GAAIA,EAAU,GAAImD,KACtDnD,EAAU5Q,OAAS,GAEd2Q,GAAgB3H,EAAY+D,GAAY6D,GAAY,OAsGzDiK,GAAMzV,IAAa,WACrB,OAAO,IAAI5C,GAAOgc,WAsFpB,SAASC,GAAOlhB,EAAGgM,GACjB,IAAI1H,EACJ,GAAmB,mBAAR0H,EAAoB,CAC7B,GAAgB,mBAALhM,EAKT,MAAM,IAAIuF,GAAUlP,GAJpB,IAAI8qB,EAAOnhB,EACXA,EAAIgM,EACJA,EAAOmV,EAKX,OAAO,WAOL,QANMnhB,EAAI,IACRsE,EAAS0H,EAAKuC,MAAM7M,KAAMyT,YAExBnV,GAAK,IACPgM,OAzrOJhK,GA2rOSsC,GAuCX,IAAI8c,GAAO9K,IAAU,SAAStK,EAAMC,EAASqJ,GAC3C,IAAIoE,EA7tOQ,EA8tOZ,GAAIpE,EAAS7S,OAAQ,CACnB,IAAI8S,EAAUpR,GAAemR,EAAU8L,GAAKhd,aAC5CsV,GA3tOa,GA6tOf,OAAOnC,GAAcvL,EAAM0N,EAASzN,EAASqJ,EAAUC,MA+BrD8L,GAAU/K,IAAU,SAAS9X,EAAQ8iB,GAMvC,IAHA,IAAI5e,GAAS,EACTD,GAHJ6e,EAAcA,EAAY7e,OAAS+M,GAAY8R,GAAeC,GAAU/iB,IAG/CiE,SAEhBC,EAAQD,GAAQ,CACvB,IAAIwI,EAAMqW,EAAY5e,GACtBlE,EAAOyM,GAAOsM,GAAc/Y,EAAOyM,GAzwOzB,EAywO0CzM,GAEtD,OAAOA,KA+CLgjB,GAAUlL,IAAU,SAAS9X,EAAQyM,EAAKqK,GAC5C,IAAIoE,EAAU+H,EACd,GAAInM,EAAS7S,OAAQ,CACnB,IAAI8S,EAAUpR,GAAemR,EAAUkM,GAAQpd,aAC/CsV,GAzzOa,GA2zOf,OAAOnC,GAActM,EAAKyO,EAASlb,EAAQ8W,EAAUC,MA2CnDmM,GAAQvK,GAx2OG,GA+4OXwK,GAAaxK,GA94OI,IA+8OrB,SAASyK,GAAS5V,EAAMqC,EAAMwT,GAC5B,IAAIvT,EACAwT,EACAxd,EACA+Y,EACApR,EACA8V,EACAC,EACA5E,EAAa,EACb6E,GAAU,EACVC,GAAW,EAEf,GAAmB,mBAARlW,EACT,MAAM,IAAIzG,GAAUlP,GAGtB,GADAgY,EAAOA,EAAO,EAAI,GAAMA,GAAQ,GAChB,IAAZwT,EAAkB,CACpB,IAAIM,GAAU,EACdD,GAAW,OACFlY,GAAS6X,KAClBM,IAAYN,EAAQM,QACpBF,EAAU,YAAaJ,GAAWpa,IAAWoa,EAAQI,SAAW,EAAG5T,GACnE6T,EAAW,aAAcL,IAAYA,EAAQK,SAAWA,GAc1D,SAASE,EAASC,EAAUC,GACtBA,GACFhc,GAAagc,GAEfR,EAAeC,EAAYC,OAjgP7BhgB,EAkgPMqgB,IACFjF,EAAaE,KACbhZ,EAAS0H,EAAKuC,MAAMtC,EAASqC,GACxByT,GAAcD,IACjBxT,EAAOrC,OAtgPbjK,IA2gPA,SAASugB,IACP,IAAIhF,EAAYlP,GAAQiP,KAAQD,GAC5BE,GAAa,GAAKA,EAAYlP,EAChC+T,EAASJ,EAAcF,GAEvBC,EAAYnb,GAAW2b,EAAShF,GAIpC,SAASiF,IACPJ,EAASF,EAAUH,GAGrB,SAASU,IAMP,GALAnU,EAAO6G,UACPkI,EAAQC,KACRrR,EAAUvK,KACVsgB,EAAeE,IAAaH,IAAcI,IAE1B,IAAZF,EACF,IAAIS,EAAcP,IAAYJ,MACzB,CACAD,GAAiBK,IACpB/E,EAAaC,GAEf,IAAIE,EAAY0E,GAAW5E,EAAQD,GAC/BiF,EAAW9E,GAAa,GAAKA,EAAY0E,EAEzCI,GACEP,IACFA,EAAexb,GAAawb,IAE9B1E,EAAaC,EACb/Y,EAAS0H,EAAKuC,MAAMtC,EAASqC,IAErBwT,IACRA,EAAelb,GAAW4b,EAAYjF,IAgB1C,OAbI8E,GAAYN,EACdA,EAAYzb,GAAayb,GAEjBA,GAAa1T,IAAS4T,IAC9BF,EAAYnb,GAAW2b,EAASlU,IAE9BqU,IACFL,GAAW,EACX/d,EAAS0H,EAAKuC,MAAMtC,EAASqC,KAE3B+T,GAAaN,GAAcD,IAC7BxT,EAAOrC,OA7jPXjK,GA+jPSsC,EAGT,OADAme,EAAUE,OA/EV,WACMZ,GACFzb,GAAayb,GAEXD,GACFxb,GAAawb,GAEf1E,EAAa,EACb0E,EAAeC,EAAYC,OA1/O7BhgB,GAkkPOygB,EAoBT,IAAIG,GAAQtM,IAAU,SAAStK,EAAMsC,GACnC,OAAOF,GAAUpC,EAAM,EAAGsC,MAqBxBuU,GAAQvM,IAAU,SAAStK,EAAMqC,EAAMC,GACzC,OAAOF,GAAUpC,EAAMqC,EAAMC,MAuB3BwU,GAAO1K,KAsBP2K,GAAY3K,IAAW,GAqD3B,SAAS4K,GAAQhX,EAAMiX,GACrB,GAAmB,mBAARjX,GAAuBiX,GAA+B,mBAAZA,EACnD,MAAM,IAAI1d,GAAUlP,GAEtB,IAAI6sB,EAAW,WACb,IAAI5U,EAAO6G,UACPlK,EAAMgY,EAAWA,EAAS1U,MAAM7M,KAAM4M,GAAQA,EAAK,GACnDvE,EAAQmZ,EAASnZ,MAErB,GAAIA,EAAME,IAAIgB,GACZ,OAAOlB,EAAMyS,IAAIvR,GAEnB,IAAI3G,EAAS0H,EAAKuC,MAAM7M,KAAM4M,GAE9B,OADA4U,EAASnZ,MAAQA,EAAMH,IAAIqB,EAAK3G,GACzBA,GAGT,OADA4e,EAASnZ,MAAQ,IAAIiZ,GAAQG,MACtBD,EAkCT,IAAIE,GAAU9M,IAAU,SAAStK,EAAMqX,GAErC,GADAA,EAAa7T,GAAY6T,GACN,mBAARrX,IAAuB3B,GAAWgZ,EAAYvgB,IACvD,MAAM,IAAIyC,GAAUlP,GAEtB,IAAIoM,EAAS4gB,EAAW5gB,OACxB,OAAO6T,IAAU,SAAShI,GAExB,IADA,IAAI5L,EAAQiF,GAAU2G,EAAK7L,OAAQA,GAC5BC,KACL4L,EAAK5L,GAAS2gB,EAAW3gB,GAAO4L,EAAK5L,IAEvC,OAAOsJ,EAAKuC,MAAM7M,KAAM4M,SAqFxBgV,GAAUhK,GAv1PG,IAw3PbiK,GAAejK,GAv3PI,IAq5PnBkK,GAAQlN,IAAU,SAAStK,EAAMwG,GACnC,OAAO+E,GAAcvL,EAp5PR,SAdbhK,OAAAA,OAAAA,EAk6PwEwN,GAAYgD,OAyBtF,SAAS8D,GAAUtK,EAAM8G,GACvB,GAAmB,mBAAR9G,EACT,MAAM,IAAIzG,GAAUlP,GAGtB,OADAyc,EAAQrL,QA/7PRzF,IA+7PkB8Q,EAAuB9G,EAAKvJ,OAAS,GAAOqQ,GAAS,EAAI,GACpE,WAML,IALA,IAAIxE,EAAO6G,UACPzS,GAAS,EACTD,EAASgF,GAAU6G,EAAK7L,OAASqQ,EAAO,GACxC0L,EAAO1Z,EAAMrC,KAERC,EAAQD,GACf+b,EAAK9b,GAAS4L,EAAKwE,EAAQpQ,GAE7B,OAAQoQ,GACN,KAAK,EAAG,OAAO9G,EAAK7F,KAAKzE,KAAM8c,GAC/B,KAAK,EAAG,OAAOxS,EAAK7F,KAAKzE,KAAM4M,EAAK,GAAIkQ,GACxC,KAAK,EAAG,OAAOxS,EAAK7F,KAAKzE,KAAM4M,EAAK,GAAIA,EAAK,GAAIkQ,GAEnD,IAAIiF,EAAY3e,EAAMgO,EAAQ,GAE9B,IADApQ,GAAS,IACAA,EAAQoQ,GACf2Q,EAAU/gB,GAAS4L,EAAK5L,GAG1B,OADA+gB,EAAU3Q,GAAS0L,EACZxS,EAAKuC,MAAM7M,KAAM+hB,IAuQ5B,SAASC,GAAG9hB,EAAOC,GACjB,OAAOD,EAAQC,EA2CjB,SAAS6N,GAAY9N,GACnB,OAAOoC,GAAapC,IAAUgK,GAAYhK,IACxCkE,GAAeK,KAAKvE,EAAO,YAAc6E,GAAqBN,KAAKvE,EAAO,UAmB9E,IAAI2G,GAAUlB,IAAiB,SAASzF,GACtC,OAAOoC,GAAapC,IAAU+U,GAAS/U,EAAMa,SAAWuD,GAAYG,KAAKvE,IAAUpL,GAiJrF,SAASmtB,GAAQ/hB,EAAOC,EAAOsJ,EAAYc,GAEzC,IAAI3H,GADJ6G,EAAkC,mBAAdA,EAA2BiB,GAAajB,EAAYc,EAAS,QA/6QjFjK,GAg7Q0BmJ,EAAWvJ,EAAOC,QAh7Q5CG,EAi7QA,YAj7QAA,IAi7QQsC,EAAuBgM,GAAY1O,EAAOC,EAAOsJ,KAAgB7G,EAoB3E,SAASsf,GAAQhiB,GACf,OAAOoC,GAAapC,IAAkC,iBAAjBA,EAAMsP,SAAuBlL,GAAYG,KAAKvE,IAAUjL,EAkD/F,SAASsZ,GAAWrO,GAIlB,OAAOoI,GAASpI,IAAUoE,GAAYG,KAAKvE,IAAUhL,EAuBvD,SAASoT,GAASpI,GAGhB,IAAIuK,SAAcvK,EAClB,QAASA,IAAkB,UAARuK,GAA4B,YAARA,GA8FzC,SAAS0Q,GAASjb,GAChB,OAAa,MAATA,IAGAqO,GAAWrO,GACNsE,GAAW6W,KAAKnX,GAAWO,KAAKvE,IAElCoC,GAAapC,IAAU7I,EAAagkB,KAAKnb,IA6ClD,SAASiiB,GAASjiB,GAChB,MAAuB,iBAATA,GAAsBoC,GAAapC,IAAUoE,GAAYG,KAAKvE,IAAU/K,EAiCxF,SAASitB,GAAcliB,GACrB,IAAIsL,EAUA5I,EAPJ,SAAMN,GAAapC,IAAUoE,GAAYG,KAAKvE,IAAU9K,GAAc4Y,GAAY9N,MAC5EkE,GAAeK,KAAKvE,EAAO,gBAA4D,mBAAzCsL,EAAOtL,EAAMiL,cAA4CK,aAAgBA,MAU7H4C,GAAUlO,GAAO,SAAS+L,EAAU1C,GAClC3G,EAAS2G,UA3tRXjJ,IA6tROsC,GAAwBwB,GAAeK,KAAKvE,EAAO0C,IAmB5D,SAASyf,GAASniB,GAChB,OAAOoI,GAASpI,IAAUoE,GAAYG,KAAKvE,IAAU7K,EAmBvD,SAASqpB,GAASxe,GAChB,MAAuB,iBAATA,GAAsBoC,GAAapC,IAAUoE,GAAYG,KAAKvE,IAAU5K,EAmBxF,SAAS6Z,GAAajP,GACpB,OAAOoC,GAAapC,IAAU+U,GAAS/U,EAAMa,WAAalJ,EAAeyM,GAAYG,KAAKvE,IA2C5F,SAASoiB,GAAGpiB,EAAOC,GACjB,OAAOD,EAAQC,EA0CjB,SAASgf,GAAQjf,GACf,IAAIa,EAASb,EAAQ8U,GAAU9U,GAAS,EACxC,OAAK+U,GAASlU,GAGTA,EAGEyH,GAAUtI,GAFR,GAHA6H,GAAO7H,GA+BlB,SAASqiB,GAAcriB,GACrB,OAAO2J,GAAS3J,EAAOmO,GAAOnO,IAqDhC,IAAIsiB,GAAQ9N,IArqNZ,SAAS+N,EAAU3lB,EAAQxG,EAAQmT,EAAYwB,EAAQC,GACrD,IAAK5C,GAASxL,GACZ,OAAOA,EAET,IAAI4lB,EAAWxY,GAAY5T,KAAYuQ,GAAQvQ,IAAW6Y,GAAa7Y,IACnEoT,EAAQgZ,OAvyEZpiB,EAuyEmCqJ,GAAKrT,GA0BxC,OAxBAmS,GAAUiB,GAASpT,GAAQ,SAAS8Z,EAAU7G,GAK5C,GAJIG,IAEF0G,EAAW9Z,EADXiT,EAAM6G,IAGJ9N,GAAa8N,GACfnF,IAAWA,EAAS,IACpBC,IAAWA,EAAS,IAmC1B,SAAuBpO,EAAQxG,EAAQiT,EAAKoZ,EAAWlZ,EAAYwB,EAAQC,GACzE,IAAInK,EAASkK,EAAOlK,OAChBqP,EAAW9Z,EAAOiT,GAEtB,KAAOxI,KACL,GAAIkK,EAAOlK,IAAWqP,EAEpB,YADAtT,EAAOyM,GAAO2B,EAAOnK,IAIzB,IAAIb,EAAQpD,EAAOyM,GACf3G,EAAS6G,EAAaA,EAAWvJ,EAAOkQ,EAAU7G,EAAKzM,EAAQxG,QA91EnEgK,EA+1EI0M,OA/1EJ1M,IA+1EesC,EAEXoK,IACFpK,EAASwN,EACLlG,GAAYkG,KAAcvJ,GAAQuJ,IAAajB,GAAaiB,IAC9DxN,EAASiE,GAAQ3G,GACbA,EACCgK,GAAYhK,GAASsI,GAAUtI,GAAS,GAEtCkiB,GAAchS,IAAapC,GAAYoC,GAC9CxN,EAASoL,GAAY9N,GACjBqiB,GAAcriB,GACbkiB,GAAcliB,GAASA,EAAQ,GAGpC8M,GAAW,GAKf/B,EAAO9C,KAAKiI,GACZlF,EAAO/C,KAAKvF,GAERoK,EAEFlQ,EAAOyM,GAAOoZ,EAAU/f,EAAQwN,EAAU3G,EAAYwB,EAAQC,IACrDtI,GAAWA,EAAUA,IAAW1C,EAAUA,GAAUA,KAC7DpD,EAAOyM,GAAO3G,GAzEZggB,CAAc9lB,EAAQxG,EAAQiT,EAAKkZ,EAAWhZ,EAAYwB,EAAQC,OAE/D,CACH,IAAIhL,EAAQpD,EAAOyM,GACf3G,EAAS6G,EAAaA,EAAWvJ,EAAOkQ,EAAU7G,EAAKzM,EAAQxG,QArzEvEgK,EAszEQ0M,OAtzER1M,IAszEmBsC,EAEXoK,IACFpK,EAASwN,QAzzEf9P,IA2zESsC,KAAyB8f,GAAcnZ,KAAOzM,KAC9CkQ,IAAapK,GAAWA,EAAUA,IAAW1C,EAAUA,GAAUA,KACpEpD,EAAOyM,GAAO3G,OAIb9F,KAwqNL+lB,GAASnO,IAAe,SAAS5X,EAAQxG,EAAQmT,GACnD,OAAOA,EACHD,GAAW1M,EAAQxG,EAAQmT,GAC3BG,GAAW9M,EAAQxG,MA+DrB+M,GAAWyS,GAAe+M,IAjkP9B,SAAwBxZ,EAAaC,GACnC,YA3+CAhJ,IA2+CO+I,EAA4BC,EAAcD,KAolP/CyZ,GAAehN,GAAe0M,IA16JlC,SAASO,EAAc1Z,EAAaC,GAClC,YAtpIAhJ,IAspIO+I,EAA4BC,EAAckZ,GAAMnZ,EAAaC,EAAayZ,MA29J/EC,GAAUxM,GAAcxK,IAkDxBiX,GAAczM,GAAchJ,IA6B5B0V,GAAQ7L,GAAYpJ,IA2BpBkV,GAAa9L,GAAYlJ,IA6BzBiV,GAAS9L,GAAatL,IA2BtBqX,GAAc/L,GAAa9J,IAiB/B,SAASqS,GAAU/iB,GACjB,OAAOwR,GAAcxR,EAAQuR,GAAOvR,IAqJtC,IAAI6M,GAAQ7D,GAAwB,SAAShJ,GAC3C,IAAI0O,EAAiB,MAAV1O,OA37SXwD,EA27SwCxD,EAAOqO,YAC/C,MAAoB,mBAARK,GAAsBA,EAAKzH,YAAcjH,GAC/B,mBAAVA,GAAwBoN,GAAYpN,GACvCgf,GAAShf,GAEXwL,GAASxL,GAAUgJ,GAAWhJ,GAAU,IANxBgf,GA+BzB,SAASzN,GAAOvR,GACd,GAAc,MAAVA,EACF,MAAO,GAEJwL,GAASxL,KACZA,EAAS2C,GAAO3C,IAElB,IAAIiE,EAASjE,EAAOiE,OACpBA,EAAUA,GAAUkU,GAASlU,KAC1B8F,GAAQ/J,IAAWkR,GAAYlR,KAAYiE,GAAW,EAQzD,IANA,IAAIyK,EAAO1O,EAAOqO,YACdnK,GAAS,EACTsiB,EAAyB,mBAAR9X,GAAsBA,EAAKzH,YAAcjH,EAC1D8F,EAASQ,EAAMrC,GACfwiB,EAAcxiB,EAAS,IAElBC,EAAQD,GACf6B,EAAO5B,GAAUA,EAAQ,GAE3B,IAAK,IAAIuI,KAAOzM,EACRymB,GAAenZ,GAAQb,EAAKxI,IACrB,eAAPwI,IAAyB+Z,IAAYlf,GAAeK,KAAK3H,EAAQyM,KACrE3G,EAAOuF,KAAKoB,GAGhB,OAAO3G,EAuBT,IAAI4gB,GAAUjM,IAAmB,GA2C7BkM,GAAYlM,KAyBZmM,GAAO9O,IAAU,SAAS9X,EAAQ4M,GACpC,GAAc,MAAV5M,EACF,MAAO,GAET,GAAuB,mBAAZ4M,EAAM,GAAkB,CAC7BA,EAAQb,GAASiF,GAAYpE,GAAQ9F,IACzC,OAAO0X,GAAYxe,EAAQgQ,GAAeuB,GAAOvR,GAAS4M,IAE5D,IAAI7I,EAAY6J,GAAahB,EAAM,GAAIA,EAAM,GAAI,GACjD,OAAO6R,GAAeze,GAAQ,SAASoD,EAAOqJ,EAAKzM,GACjD,OAAQ+D,EAAUX,EAAOqJ,EAAKzM,SAkBlC,SAASoe,GAAMpe,GACbA,EAAS6R,GAAS7R,GAOlB,IALA,IAAIkE,GAAS,EACT0I,EAAQC,GAAK7M,GACbiE,EAAS2I,EAAM3I,OACf6B,EAASQ,EAAMrC,KAEVC,EAAQD,GAAQ,CACvB,IAAIwI,EAAMG,EAAM1I,GAChB4B,EAAO5B,GAAS,CAACuI,EAAKzM,EAAOyM,IAE/B,OAAO3G,EA6BT,IAAIU,GAAOsR,IAAU,SAAS9X,EAAQ4M,GACpC,OAAc,MAAV5M,EACK,GAEiB,mBAAZ4M,EAAM,GAChB6R,GAAeze,EAAQ4N,GAAahB,EAAM,GAAIA,EAAM,GAAI,IACxD4R,GAAYxe,EAAQgR,GAAYpE,OAyKtC,SAAS3B,GAAOjL,GACd,OAAO2V,GAAW3V,EAAQ6M,GAAK7M,IA6JjC,IAAI6mB,GAAYvO,IAAiB,SAASxS,EAAQghB,EAAM5iB,GAEtD,OADA4iB,EAAOA,EAAKC,cACLjhB,GAAU5B,EAAS4iB,EAAKliB,OAAO,GAAGoiB,cAAgBF,EAAKnK,MAAM,GAAMmK,MAmC5E,SAAStO,GAAO/T,GAEd,OADAA,EAASF,GAAaE,KACLA,EAAOmD,QAAQnN,EAAUuK,IAAc4C,QAAQ1N,EAAa,IAqH/E,IAAI+sB,GAAY3O,IAAiB,SAASxS,EAAQghB,EAAM5iB,GACtD,OAAO4B,GAAU5B,EAAQ,IAAM,IAAM4iB,EAAKC,iBA+DxCG,GAAUtM,KAwBVuM,GAAWvM,IAAa,GA0D5B,SAAS8B,GAAOjY,EAAQjD,GACtB,IAAIsE,EAAS,GAGb,GAFArB,EAASF,GAAaE,IACtBjD,GAAKA,GACG,IAAMiD,IAAWqE,GAAetH,GACtC,OAAOsE,EAIT,GACMtE,EAAI,IACNsE,GAAUrB,GAEZjD,EAAImH,GAAYnH,EAAI,GACpBiD,GAAUA,QACHjD,GAET,OAAOsE,EAsBT,IAAIshB,GAAY9O,IAAiB,SAASxS,EAAQghB,EAAM5iB,GACtD,OAAO4B,GAAU5B,EAAQ,IAAM,IAAM4iB,EAAKC,iBAsBxCM,GAAY/O,IAAiB,SAASxS,EAAQghB,EAAM5iB,GACtD,OAAO4B,GAAU5B,EAAQ,IAAM,KAAO4iB,EAAKliB,OAAO,GAAGoiB,cAAgBF,EAAKnK,MAAM,OAgQlF,SAAS2K,GAAK7iB,EAAQC,EAAOsT,GAC3B,IAAI5U,EAAQqB,EAEZ,OADAA,EAASF,GAAaE,KAIlBuT,EAAQC,GAAe7U,EAAOsB,EAAOsT,GAAkB,MAATtT,GACzCD,EAAOkY,MAAM5W,GAAiBtB,GAASwB,GAAkBxB,GAAU,IAE5EC,GAAiB,GACVD,EAAOkY,MAAMnY,GAAeC,EAAQC,GAAQG,GAAgBJ,EAAQC,GAAS,IAN3ED,EA4MX,SAAS8T,GAAM9T,EAAQ8iB,EAASvP,GAK9B,OAJIA,GAASC,GAAexT,EAAQ8iB,EAASvP,KAC3CuP,OA/xVF/jB,IAiyVAiB,EAASF,GAAaE,IACRya,MAAMqI,GAAW3sB,IAAY,GAyB7C,IAAI4sB,GAAU1P,IAAU,SAAStK,EAAMsC,GACrC,IACE,OAAOtC,EAAKuC,WA7zVdvM,EA6zV+BsM,GAC7B,MAAMxO,GACN,OAAO8jB,GAAQ9jB,GAAKA,EAAI,IAAIoF,GAAMpF,OA0CtC,SAASyT,GAASvH,EAAMC,EAASuK,GAI/B,OAHIA,GAASC,GAAezK,EAAMC,EAASuK,KACzCvK,OA32VFjK,GA62VOgC,GAAagI,GAChBia,GAAQja,GACRD,GAAaC,EAAMC,GAwCzB,SAASI,GAASzK,GAChB,OAAOA,EA4BT,SAASqkB,GAAQjuB,GACf,OAAOsU,GAAYG,GAAUzU,GAAQ,IAsDvC,IAAIkuB,GAAS5P,IAAU,SAASnG,EAAM7B,GACpC,OAAO,SAAS9P,GACd,OAAOse,GAAWte,EAAQ2R,EAAM7B,OA0BhC6X,GAAW7P,IAAU,SAAS9X,EAAQ8P,GACxC,OAAO,SAAS6B,GACd,OAAO2M,GAAWte,EAAQ2R,EAAM7B,OAwCpC,SAAS8X,GAAM5nB,EAAQxG,EAAQ6pB,GAC7B,GAAe,MAAXA,EAAiB,CACnB,IAAIwE,EAAQrc,GAAShS,GACjBoT,EAAQib,EAAQhb,GAAKrT,QApjW3BgK,EAqjWMsf,EAAelW,GAASA,EAAM3I,OAAUuN,GAAchY,EAAQoT,QArjWpEpJ,GAujWQsf,EAAcA,EAAY7e,OAAS4jB,KACvC/E,GAAc,EACdO,EAAU7pB,EACVA,EAASwG,EACTA,EAASkD,MAGR4f,IACHA,EAActR,GAAchY,EAAQqT,GAAKrT,KAE3C,IAAIsnB,GAAQ,EACR5c,GAAS,EACTuK,EAASgD,GAAWzR,GACpBiE,EAAS6e,EAAY7e,QAET,IAAZof,EACFvC,GAAQ,EACCtV,GAAS6X,IAAY,UAAWA,IACzCvC,EAAQuC,EAAQvC,OAElB,OAAS5c,EAAQD,GAAQ,CACvB,IAAI6Y,EAAagG,EAAY5e,GACzBsJ,EAAOhU,EAAOsjB,GAElB9c,EAAO8c,GAActP,EACjBiB,IACFzO,EAAOiH,UAAU6V,GAAe,SAAStP,GACvC,OAAO,WACL,IAAIpD,EAAWlH,KAAKsH,UACpB,GAAIsW,GAAS1W,EAAU,CACrB,IAAItE,EAAS9F,EAAOkD,KAAKoH,aACrBD,EAAUvE,EAAOyE,YAAcmB,GAAUxI,KAAKqH,aAIlD,OAFAF,EAAQgB,KAAK,CAAEmC,KAAQA,EAAMsC,KAAQ6G,UAAWlJ,QAAWzN,IAC3D8F,EAAO0E,UAAYJ,EACZtE,EAET,OAAO0H,EAAKuC,MAAM/P,EAAQgM,GAAU,CAAC9I,KAAKE,SAAUuT,aAXzB,CAa7BnJ,IAGN,OAAOxN,EAkCT,SAASie,MA0BT,SAASlQ,GAAS4D,GAChB,OAAO8B,GAAM9B,GAAQmC,GAAanC,GA5wRpC,SAA0BA,GACxB,IAAIC,EAAWD,EAAO,GAEtB,OADAA,EAAOgC,GAAOhC,GACP,SAAS3R,GACd,OAAO0R,GAAQ1R,EAAQ2R,EAAMC,IAwwRWkW,CAAiBnW,GAsM7D,IAybMnY,GAzbFiP,GAAOoU,GAAY,QAsBnBjU,GAAQiU,GAAY,SAiDpB3T,GAAM+P,GAAeiM,GAAIxb,IAiDzBN,GAAM6P,GAAeuM,GAAI7b,IAsBzBoe,GAAQlL,GAAY,SA2hBxB,OA5eA/S,GAAO7C,UAAYkD,GAAWlD,UAE9BgD,GAAchD,UAAY0I,GAAWxF,GAAWlD,WAChDgD,GAAchD,UAAUoH,YAAcpE,GAEtCD,GAAY/C,UAAY0I,GAAWxF,GAAWlD,WAC9C+C,GAAY/C,UAAUoH,YAAcrE,GAGpCc,GAAS7D,UAAkB,OA38U3B,SAAmBwF,GACjB,OAAOvJ,KAAKuI,IAAIgB,WAAevJ,KAAK6H,SAAS0B,IA28U/C3B,GAAS7D,UAAU+W,IA/7UnB,SAAgBvR,GACd,MAAc,aAAPA,OA7mCPjJ,EA6mCwCN,KAAK6H,SAAS0B,IA+7UxD3B,GAAS7D,UAAUwE,IAn7UnB,SAAgBgB,GACd,MAAc,aAAPA,GAAsBnF,GAAeK,KAAKzE,KAAK6H,SAAU0B,IAm7UlE3B,GAAS7D,UAAUmE,IAt6UnB,SAAgBqB,EAAKrJ,GAInB,MAHW,aAAPqJ,IACFvJ,KAAK6H,SAAS0B,GAAOrJ,GAEhBF,MAq6UT8H,GAAS/D,UAAUoE,KAx3UnB,SAAmBjI,GACjB,IAAI8H,EAAOhI,KAAKgI,KACI,iBAAT9H,GAAqBoI,GAASpI,GACvC8H,EAAKE,IAAI4c,IAAI5kB,GAEb8H,EAAKC,KAAK/H,IAAS,GAs3UvBohB,GAAQG,MAAQ7Z,GAGhBhB,GAAOme,MAv8IP,SAAezmB,EAAGgM,GAChB,GAAmB,mBAARA,EAAoB,CAC7B,GAAgB,mBAALhM,EAKT,MAAM,IAAIuF,GAAUlP,GAJpB,IAAI8qB,EAAOnhB,EACXA,EAAIgM,EACJA,EAAOmV,EAMX,OADAnhB,EAAIsH,GAAetH,GAAKA,GAAKA,EAAI,EAC1B,WACL,KAAMA,EAAI,EACR,OAAOgM,EAAKuC,MAAM7M,KAAMyT,aA27I9B7M,GAAOwR,IAt6IP,SAAa9N,EAAMhM,EAAGwW,GAKpB,OAJIA,GAASC,GAAezK,EAAMhM,EAAGwW,KACnCxW,OAnpOFgC,GAspOOuV,GAAcvL,EAzoOV,SAbXhK,OAAAA,OAAAA,OAAAA,EAqpOAhC,EAAKgM,GAAa,MAALhM,EAAagM,EAAKvJ,OAASgF,IAAWzH,GAAK,EAAG,KAm6I7DsI,GAAOic,OAASA,GAChBjc,GAAOoX,GAAKA,GACZpX,GAAO4Y,OAASA,GAChB5Y,GAAO8Y,KAAOA,GACd9Y,GAAO+Y,QAAUA,GACjB/Y,GAAOkZ,QAAUA,GACjBlZ,GAAOiL,SAAWA,GAClBjL,GAAOgX,MAAQA,GACfhX,GAAOoe,MAvtOP,SAAepkB,EAAOqkB,EAAMnQ,GAExBmQ,GADEnQ,EAAQC,GAAenU,EAAOqkB,EAAMnQ,GAAiB,MAARmQ,GACxC,EAEAlf,GAAUN,GAAYwf,IAAS,EAAG,GAO3C,IALA,IAAIjkB,EAAQ,EACRD,EAASH,EAAQA,EAAMG,OAAS,EAChC4B,GAAY,EACZC,EAASQ,EAAMkC,GAAWvE,EAASkkB,IAEhCjkB,EAAQD,GACb6B,IAASD,GAAY+N,GAAU9P,EAAOI,EAAQA,GAASikB,GAEzD,OAAOriB,GA0sOTgE,GAAOse,QAzrOP,SAAiBtkB,GAMf,IALA,IAAII,GAAS,EACTD,EAASH,EAAQA,EAAMG,OAAS,EAChC4B,GAAY,EACZC,EAAS,KAEJ5B,EAAQD,GAAQ,CACvB,IAAIb,EAAQU,EAAMI,GACdd,IACF0C,IAASD,GAAYzC,GAGzB,OAAO0C,GA8qOTgE,GAAOue,SAhsBP,SAAkBjlB,GAChB,OAAO,WACL,OAAOA,IA+rBX0G,GAAOqX,QAAUA,GACjBrX,GAAOwe,OAnjFP,SAAgBrhB,EAAWshB,EAAYvQ,GACrC,IAAIlS,EAAS6J,GAAW1I,GAIxB,OAHI+Q,GAASC,GAAehR,EAAWshB,EAAYvQ,KACjDuQ,OAphSF/kB,GAshSO+kB,EAAazb,GAAWhH,EAAQyiB,GAAcziB,GA+iFvDgE,GAAOoZ,MAAQA,GACfpZ,GAAOqZ,WAAaA,GACpBrZ,GAAOsZ,SAAWA,GAClBtZ,GAAOvD,SAAWA,GAClBuD,GAAOkc,aAAeA,GACtBlc,GAAOsa,MAAQA,GACfta,GAAOua,MAAQA,GACfva,GAAOuV,WAAaA,GACpBvV,GAAOwV,KAAOA,GACdxV,GAAOyV,UAAYA,GACnBzV,GAAO0e,eA1iOP,SAAwB1kB,EAAOC,EAAW0J,GACxC,OAAQ3J,GAASA,EAAMG,OACnB2R,GAAU9R,EAAOkR,GAAYjR,EAAW0J,EAAS,IAAI,GAAM,GAC3D,IAwiON3D,GAAO2e,UAp/NP,SAAmB3kB,EAAOC,EAAW0J,GACnC,OAAQ3J,GAASA,EAAMG,OACnB2R,GAAU9R,EAAOkR,GAAYjR,EAAW0J,EAAS,IAAI,GACrD,IAk/NN3D,GAAO4e,KAn9NP,SAAc5kB,EAAOV,EAAOkR,EAAOC,GACjC,IAAItQ,EAASH,EAAQA,EAAMG,OAAS,EACpC,OAAKA,GAGDqQ,GAAyB,iBAATA,GAAqB2D,GAAenU,EAAOV,EAAOkR,KACpEA,EAAQ,EACRC,EAAMtQ,GAtyFV,SAAkBH,EAAOV,EAAOkR,EAAOC,GACrC,IAAItQ,EAASH,EAAMG,OAanB,KAXAqQ,EAAiB,MAATA,EAAgB,GAAMA,GAAS,GAC3B,IACVA,GAASA,EAAQrQ,EAAS,EAAKA,EAASqQ,IAE1CC,OAt2DA/Q,IAs2DO+Q,GAAqBA,EAAMtQ,EAAUA,GAAWsQ,GAAO,GACpD,IACRA,GAAOtQ,GAETA,EAASqQ,EAAQC,EAAM,EAAKA,IAAQ,EACpCD,KAAW,EAEJA,EAAQrQ,GACbH,EAAMwQ,KAAWlR,EAEnB,OAAOU,EAuxFA6kB,CAAS7kB,EAAOV,EAAOkR,EAAOC,IAN5B,IAi9NXzK,GAAOuX,OAASA,GAChBvX,GAAO8e,QA5zNP,SAAiB9kB,EAAOoK,EAAQ8J,GAC9B,IAAI/T,EAASH,EAAQA,EAAMG,OAAS,EAIpC,OAHI+T,GAASC,GAAenU,EAAOoK,EAAQ8J,KACzC9J,GAAS,GAEJjK,EAAS+M,GAAYlN,EAAOoK,GAAU,IAwzN/CpE,GAAO+e,YAxyNP,SAAqB/kB,GAEnB,OADaA,EAAQA,EAAMG,OAAS,GACpB+M,GAAYlN,GAAO,GAAQ,IAuyN7CgG,GAAOwa,KAAOA,GACdxa,GAAOya,UAAYA,GACnBza,GAAO0X,QAAUA,GACjB1X,GAAO2X,aAAeA,GACtB3X,GAAOsc,MAAQA,GACftc,GAAOuc,WAAaA,GACpBvc,GAAOwc,OAASA,GAChBxc,GAAOyc,YAAcA,GACrBzc,GAAOiZ,UAAYA,GACnBjZ,GAAO4X,QAAUA,GACjB5X,GAAO+X,QAAUA,GACjB/X,GAAOgf,QApvNP,SAAiBhlB,GACf,OAAOyb,GAAUzb,EAAO,IAovN1BgG,GAAO6V,aAAeA,GACtB7V,GAAOif,OA9tEP,SAAgB/oB,EAAQgpB,EAAYhR,GAC9BA,GAASC,GAAejY,EAAQgpB,EAAYhR,KAC9CgR,OAt4SFxlB,GA64SA,IALA,IAAIU,GAAS,EACT0I,EAAQC,GAAK7M,GACbiE,EAAS2I,EAAM3I,OACf6B,EAAS,KAEJ5B,EAAQD,GAAQ,CACvB,IAAIwI,EAAMG,EAAM1I,GACZd,EAAQpD,EAAOyM,GAEfuc,EACE1hB,GAAeK,KAAK7B,EAAQ1C,GAC9B0C,EAAO1C,GAAOiI,KAAKoB,GAEnB3G,EAAO1C,GAAS,CAACqJ,GAInB3G,EAAO1C,GAASqJ,EAGpB,OAAO3G,GAusETgE,GAAOgY,OAASA,GAChBhY,GAAO+C,KAAOA,GACd/C,GAAOyH,OAASA,GAChBzH,GAAOkY,IAAMA,GACblY,GAAO4c,QAAUA,GACjB5c,GAAO6c,UAAYA,GACnB7c,GAAO2d,QAAUA,GACjB3d,GAAOmf,gBA1pBP,SAAyBtX,EAAM2B,GAC7B,OAAOtF,GAAoB2D,EAAM1D,GAAUqF,GAAU,KA0pBvDxJ,GAAO0a,QAAUA,GACjB1a,GAAO4b,MAAQA,GACf5b,GAAO4d,OAASA,GAChB5d,GAAO6d,SAAWA,GAClB7d,GAAO8d,MAAQA,GACf9d,GAAO8a,QAAUA,GACjB9a,GAAOof,OA70HP,SAAgBnlB,GACd,GAAwB,mBAAbA,EACT,MAAM,IAAIgD,GAAUlP,GAEtB,OAAO,WACL,OAAQkM,EAAUgM,MAAM7M,KAAMyT,aAy0HlC7M,GAAO8c,KAAOA,GACd9c,GAAOqf,KArzHP,SAAc3b,GACZ,OAAOkV,GAAO,EAAGlV,IAqzHnB1D,GAAOsU,MAAQA,GACftU,GAAOgb,QAAUA,GACjBhb,GAAOib,aAAeA,GACtBjb,GAAOmY,UAAYA,GACnBnY,GAAOtD,KAAOA,GACdsD,GAAOsf,MAv/JP,SAAenc,EAAY0E,GACzB,OAAOqQ,GAAI/U,EAAYc,GAAS4D,KAu/JlC7H,GAAOiE,SAAWA,GAClBjE,GAAOuf,WAtcP,SAAoBrpB,GAClB,OAAO,SAAS2R,GACd,OAAOD,GAAQ1R,EAAQ2T,GAAOhC,GAAOA,EAAO,MAqchD7H,GAAOwf,KA9nNP,WACE,IAAIxZ,EAAO6G,UACP7S,EAAQgM,EAAK,GAEjB,IAAMhM,IAASA,EAAMG,OACnB,OAAOH,EAMT,IAJA,IAAII,EAAQ,EACRS,EAAUsL,KACVhM,EAAS6L,EAAK7L,SAETC,EAAQD,GAIf,IAHA,IAAIG,EAAY,EACZhB,EAAQ0M,EAAK5L,IAETE,EAAYO,EAAQb,EAAOV,EAAOgB,KAAe,GACvDiE,GAAOV,KAAK7D,EAAOM,EAAW,GAGlC,OAAON,GA4mNTgG,GAAOiW,OAASA,GAChBjW,GAAOyf,MAlaP,SAAejV,EAAOC,EAAKiV,GACrBA,GAAQvR,GAAe3D,EAAOC,EAAKiV,KACrCjV,EAAMiV,OA9tWRhmB,GAguWA8Q,GAASA,GAAS,EAGP,MAAPC,GACFA,EAAMD,EACNA,EAAQ,GAERC,GAAOA,GAAO,EAQhB,IAJA,IAAIrQ,GAAS,EACTD,EAASgF,GAAUT,IAAY+L,EAAMD,KAXzCkV,EAAe,MAARA,EAAe,GAAMA,GAAQ,IAWuB,IAAK,GAC5D1jB,EAASQ,EAAMrC,KAEVC,EAAQD,GACf6B,EAAO5B,GAASoQ,EAChBA,GAASkV,EAEX,OAAO1jB,GA4YTgE,GAAOkb,MAAQA,GACflb,GAAO2f,OAv5JP,SAAgBxc,EAAYlJ,EAAW0J,GACrC,IAAID,EAAOzD,GAAQkD,GAAcnB,GAAc8E,GAE/C,OADA7M,EAAYiR,GAAYjR,EAAW0J,EAAS,GACrCD,EAAKP,GAAY,SAAS7J,EAAOc,EAAO+I,GAC7C,OAAQlJ,EAAUX,EAAOc,EAAO+I,OAo5JpCnD,GAAO4f,OAriNP,SAAgB5lB,EAAOC,EAAW0J,GAChC,IAAI3H,EAAS,GACb,IAAMhC,IAASA,EAAMG,OACnB,OAAO6B,EAET,IAAI5B,GAAS,EACT8P,EAAU,GACV/P,EAASH,EAAMG,OAGnB,IADAF,EAAYiR,GAAYjR,EAAW0J,EAAS,KACnCvJ,EAAQD,GAAQ,CACvB,IAAIb,EAAQU,EAAMI,GACdH,EAAUX,EAAOc,EAAOJ,KAC1BgC,EAAOuF,KAAKjI,GACZ4Q,EAAQ3I,KAAKnH,IAIjB,OADA6P,GAAWjQ,EAAOkQ,GACXlO,GAohNTgE,GAAOkW,KAAOA,GACdlW,GAAOgO,UAAYA,GACnBhO,GAAOsB,IAx6DP,SAAapL,EAAQ2R,EAAMvO,GACzB,GAAc,MAAVpD,EACF,OAAOA,EAUT,IARA,IAAI4R,EAAWD,EAAO,GAGlBzN,GAAS,EACTD,GAHJ0N,EAA2B,MAAnB3R,EAAO4R,IAAoB6B,GAAM9B,EAAM3R,GAAW,CAAC4R,GAAW+B,GAAOhC,IAG3D1N,OACd8K,EAAY9K,EAAS,EACrB0lB,EAAS3pB,EAEI,MAAV2pB,KAAoBzlB,EAAQD,GAAQ,CACzC,IAAIwI,EAAMkF,EAAKzN,GACXsH,GAASme,KACPzlB,GAAS6K,EACX4a,EAAOld,GAAOrJ,EACU,MAAfumB,EAAOld,KAChBkd,EAAOld,GAAOa,GAAQqE,EAAKzN,EAAQ,IAAM,GAAK,KAGlDylB,EAASA,EAAOld,GAElB,OAAOzM,GAk5DT8J,GAAO8f,QA71JP,SAAiB3c,GACf,OAAOmV,GAAOnV,EAAYtD,KA61J5BG,GAAO6S,MAr/MP,SAAe7Y,EAAOwQ,EAAOC,GAC3B,IAAItQ,EAASH,EAAQA,EAAMG,OAAS,EACpC,OAAKA,GAGDsQ,GAAqB,iBAAPA,GAAmB0D,GAAenU,EAAOwQ,EAAOC,KAChED,EAAQ,EACRC,EAAMtQ,GAED2P,GAAU9P,EAAOwQ,EAAOC,IANtB,IAm/MXzK,GAAO+f,OAttJP,SAAgB5c,EAAYrB,EAAU6B,GACpC,GAAkB,MAAdR,EACF,MAAO,GAELQ,GAAWwK,GAAehL,EAAYrB,EAAU6B,KAClD7B,OAt7NFpI,GAw7NA,IAAIU,GAAS,EAMb,OALA0H,EAAWoJ,GAAYpJ,EAAU6B,EAAS,GAKnCgH,GAHMlB,GAAQtG,GAAY,SAAS7J,EAAOqJ,EAAKQ,GACpD,MAAO,CAAElI,SAAY6G,EAASxI,EAAOqJ,EAAKQ,GAAa/I,QAAWA,EAAOd,MAASA,MAE1D0B,KA0sJ5BgF,GAAO0Y,UAAYA,GACnB1Y,GAAOggB,YAxnJP,SAAqB7c,EAAY4H,EAAWC,EAAQkD,GAClD,OAAkB,MAAd/K,EACK,IAEL+K,GAASC,GAAepD,EAAWC,EAAQkD,KAC7ClD,OAthOFtR,GAwhOKuG,GAAQ8K,KACXA,EAAyB,MAAbA,EAAoB,GAAK,CAACA,IAEnC9K,GAAQ+K,KACXA,EAAmB,MAAVA,EAAiB,GAAK,CAACA,IAE3BF,GAAgB3H,EAAY4H,EAAWC,KA4mJhDhL,GAAOigB,OAnpHP,SAAgBvc,GACd,GAAmB,mBAARA,EACT,MAAM,IAAIzG,GAAUlP,GAEtB,OAAO,SAASiM,GACd,OAAO0J,EAAKuC,MAAM7M,KAAMY,KA+oH5BgG,GAAOkgB,KA94MP,SAAclmB,EAAOtC,EAAGwW,GAEtB,OADalU,EAAQA,EAAMG,OAAS,KAIhC+T,EAAQC,GAAenU,EAAOtC,EAAGwW,GAAc,MAALxW,KAC5CA,EAAI,GAECoS,GAAU9P,EAAO,EAAGtC,EAAI,EAAI,EAAIA,IAL9B,IA44MXsI,GAAOmgB,UA52MP,SAAmBnmB,EAAOtC,EAAGwW,GAC3B,IAAI/T,EAASH,EAAQA,EAAMG,OAAS,EACpC,OAAKA,IAGD+T,EAAQC,GAAenU,EAAOtC,EAAGwW,GAAc,MAALxW,KAC5CA,EAAI,GAGCoS,GAAU9P,GADjBtC,EAAIyC,IAAWzC,GAAK,IACQ,EAAI,EAAIA,IAN3B,IA02MXsI,GAAOogB,eAhzMP,SAAwBpmB,EAAOC,EAAW0J,GACxC,OAAQ3J,GAASA,EAAMG,OACnB2R,GAAU9R,EAAOkR,GAAYjR,EAAW0J,EAAS,IAAI,GAAO,GAC5D,IA8yMN3D,GAAOqgB,UA1vMP,SAAmBrmB,EAAOC,EAAW0J,GACnC,OAAQ3J,GAASA,EAAMG,OACnB2R,GAAU9R,EAAOkR,GAAYjR,EAAW0J,EAAS,IACjD,IAwvMN3D,GAAOsgB,IAh5LP,SAAahnB,EAAO2d,EAAatT,GAE/B,OADAsT,EAAYpZ,KAAK8F,EAASrK,GACnBA,GA+4LT0G,GAAOugB,SAzmHP,SAAkB7c,EAAMqC,EAAMwT,GAC5B,IAAIM,GAAU,EACVD,GAAW,EAEf,GAAmB,mBAARlW,EACT,MAAM,IAAIzG,GAAUlP,GAQtB,OANgB,IAAZwrB,EACFM,GAAU,EACDnY,GAAS6X,KAClBM,EAAU,YAAaN,IAAYA,EAAQM,QAAUA,EACrDD,EAAW,aAAcL,IAAYA,EAAQK,SAAWA,GAEnDN,GAAS5V,EAAMqC,EAAM,CAAE8T,QAAWA,EAASF,SAAY5T,EAAM6T,SAAYA,KA6lHlF5Z,GAAOiQ,KAAOA,GACdjQ,GAAOwgB,MAjYP,SAAe9oB,EAAGoK,EAAU6B,GAK1B,IAJAjM,EAAImH,GAAYnH,IAIR,IAAMsH,GAAetH,GAC3B,MAAO,GAET,IAAI0C,GAAS,EACT4B,EAASQ,EAAM6C,GAAU3H,EA/hVR,aAkiVrB,IADAoK,EAAWgC,GAAahC,EAAU6B,EAAS,KAClCvJ,EAAQ1C,GACX0C,EAniVe,WAoiVjB4B,EAAO5B,GAAS0H,EAAS1H,GAEzB0H,EAAS1H,GAGb,OAAO4B,GA+WTgE,GAAOuY,QAAUA,GACjBvY,GAAO2b,cAAgBA,GACvB3b,GAAOygB,UAl4DP,SAAmBvqB,EAAQ4L,EAAUO,EAAasB,GAChD,IAAIN,EAAQpD,GAAQ/J,IAAWqS,GAAarS,GAG5C,GAFA4L,EAAWoJ,GAAYpJ,EAAU6B,EAAS,GAEvB,MAAftB,EACF,GAAIgB,GAAS3B,GAASxL,GAAS,CAC7B,IAAI0O,EAAO1O,EAAOqO,YAEhBlC,EADEgB,EACYpD,GAAQ/J,GAAU,IAAI0O,EAAO,GAE7BiB,GAAW8B,GAAW/C,GAAQA,EAAKzH,eA7xTvDzD,QAgyTI2I,EAAc,GAMlB,OAHCgB,EAAQxB,GAAYuD,IAAYlP,GAAQ,SAASoD,EAAOc,EAAOlE,GAC9D,OAAO4L,EAASO,EAAa/I,EAAOc,EAAOlE,MAEtCmM,GAg3DTrC,GAAOqW,MAAQA,GACfrW,GAAOsW,KAAOA,GACdtW,GAAOyW,MAAQA,GACfzW,GAAO2W,UAAYA,GACnB3W,GAAOmB,OAASA,GAChBnB,GAAO0gB,SA9zDP,SAAkBxqB,GAChB,OAAO2V,GAAW3V,EAAQuR,GAAOvR,KA8zDnC8J,GAAO2gB,MA9lJP,SAAexd,EAAYzT,GACzB,OAAO6nB,GAAOpU,EAAYa,GAAYtU,KA8lJxCsQ,GAAO4W,QAAUA,GACjB5W,GAAO4gB,KAllHP,SAActnB,EAAOyW,GAEnB,OAAOd,GADPc,EAAqB,MAAXA,EAAkBhM,GAAWgM,EAlkQxB,QAXfrW,EA8kQuD,CAACJ,GAAQ,KAilHlE0G,GAAO6gB,IAjkMP,WAIE,IAHA,IAAIzmB,GAAS,EACTD,EAAS0S,UAAU1S,SAEdC,EAAQD,GAAQ,CACvB,IAAIH,EAAQ6S,UAAUzS,GACtB,GAAIkJ,GAAYtJ,GACd,IAAIgC,EAASA,EACTkG,GAAUgE,GAAelK,EAAQhC,GAAQkM,GAAelM,EAAOgC,IAC/DhC,EAGR,OAAOgC,EAASwP,GAASxP,GAAU,IAsjMrCgE,GAAO6W,IAAMA,GACb7W,GAAO8W,UAAYA,GACnB9W,GAAO+W,QAAUA,GAGjB/W,GAAO8gB,SAAWrG,GAClBza,GAAO+gB,QAAU7I,GACjBlY,GAAOghB,QAAUvG,GACjBza,GAAOihB,KAAOvJ,GACd1X,GAAOkhB,UAAYvJ,GACnB3X,GAAOmhB,OAASlF,GAChBjc,GAAO8B,SAAWmJ,GAClBjL,GAAOohB,QAAUnI,GACjBjZ,GAAO9J,OAAS4gB,GAChB9W,GAAOqhB,OAAS9J,GAChBvX,GAAOshB,KAAOpL,GACdlW,GAAOuhB,OAASjL,GAGhBwH,GAAM9d,GAAQA,IAKdA,GAAOke,IA5WP,SAAasD,EAAQC,GACnB,QAASD,GAAU,KAAOC,GAAU,IA4WtCzhB,GAAO0d,QAAUA,GACjB1d,GAAO+c,UAAYA,GACnB/c,GAAO0hB,WAzsDP,SAAoB/mB,GAElB,OADAA,EAASF,GAAaE,KACJA,EAAOG,OAAO,GAAGoiB,cAAgBviB,EAAOkY,MAAM,IAwsDlE7S,GAAOrB,KAAOA,GACdqB,GAAOsV,MAvjHP,SAAehc,EAAO8K,EAAQvB,EAAYc,GASxC,OARIS,GAA2B,kBAAVA,GAAuB+J,GAAe7U,EAAO8K,EAAQvB,GACxEuB,GAAS,EAEe,mBAAVA,IACdT,EAAUd,EACVA,EAAauB,EACbA,GAAS,GAEiB,mBAAdvB,EACVsB,GAAU7K,EAAO8K,EAAQN,GAAajB,EAAYc,EAAS,IAC3DQ,GAAU7K,EAAO8K,IA6iHvBpE,GAAO2hB,UA7/GP,SAAmBroB,EAAOuJ,EAAYc,GACpC,MAA4B,mBAAdd,EACVsB,GAAU7K,GAAO,EAAMwK,GAAajB,EAAYc,EAAS,IACzDQ,GAAU7K,GAAO,IA2/GvB0G,GAAO0O,OAASA,GAChB1O,GAAO4hB,SAjqDP,SAAkBjnB,EAAQ0Z,EAAQwN,GAEhCxN,GAAmB,GAEnB,IAAIla,GAHJQ,EAASF,GAAaE,IAGFR,OAMpB,OALA0nB,OApiUAnoB,IAoiUWmoB,EACP1nB,EACAkF,GAAUwiB,EAAW,EAAI,GAAMA,GAAY,EAAI1nB,IAEnD0nB,GAAYxN,EAAOla,SACA,GAAKQ,EAAOE,QAAQwZ,EAAQwN,IAAaA,GAwpD9D7hB,GAAOwF,OArnDP,SAAgB7K,GAGd,OADAA,EAASF,GAAaE,KACJhL,EAAmB8kB,KAAK9Z,GACtCA,EAAOmD,QAAQvO,EAAiB6L,IAChCT,GAinDNqF,GAAO8hB,aAhmDP,SAAsBnnB,GAEpB,OADAA,EAASF,GAAaE,KACJxK,EAAiBskB,KAAK9Z,GACpCA,EAAOmD,QAAQ5N,EAAeoL,IAC7BX,GAAU,QA6lDjBqF,GAAOsX,MAAQA,GACftX,GAAOwX,KAAOA,GACdxX,GAAO0V,UAAYA,GACnB1V,GAAOoc,QAAUA,GACjBpc,GAAOyX,SAAWA,GAClBzX,GAAO2V,cAAgBA,GACvB3V,GAAOqc,YAAcA,GACrBrc,GAAO+hB,UAz8KP,SAAmB5e,EAAYzT,GAC7B,OAAO8nB,GAAKrU,EAAYa,GAAYtU,KAy8KtCsQ,GAAO4V,MAAQA,GACf5V,GAAOlB,MAAQA,GACfkB,GAAOkU,IA74EP,SAAahe,EAAQ2R,EAAMma,GACzB,IAAIhmB,EAAmB,MAAV9F,OAj0SbwD,EAi0S0CkO,GAAQ1R,EAAQ2T,GAAOhC,GAAOA,EAAO,IAC/E,YAl0SAnO,IAk0SOsC,EAAuBgmB,EAAehmB,GA44E/CgE,GAAOob,GAAKA,GACZpb,GAAOiiB,IA59GP,SAAa3oB,EAAOC,GAClB,OAAOD,GAASC,GA49GlByG,GAAO2B,IAr3EP,SAAazL,EAAQ2R,GACnB,GAAc,MAAV3R,EACF,OAAO,EAET,IAAI8F,EAASwB,GAAeK,KAAK3H,EAAQ2R,GACzC,IAAK7L,IAAW2N,GAAM9B,GAAO,CAG3B,GAAc,OADd3R,EAAwB,IADxB2R,EAAOgC,GAAOhC,IACA1N,OAAcjE,EAAS0R,GAAQ1R,EAAQ4T,GAAUjC,EAAM,GAAI,KAEvE,OAAO,EAETA,EAAOkC,GAAKlC,GACZ7L,EAASwB,GAAeK,KAAK3H,EAAQ2R,GAEvC,OAAO7L,GAAWqS,GAASnY,EAAOiE,SAAWqJ,GAAQqE,EAAM3R,EAAOiE,UAC/D8F,GAAQ/J,IAAWkR,GAAYlR,KAu2EpC8J,GAAO+D,SAAWA,GAClB/D,GAAO6X,SAAWA,GAClB7X,GAAOnF,QAAUA,GACjBmF,GAAOkiB,QAl1DP,SAAiB5oB,EAAOkR,EAAOC,GAQ7B,OAPAD,GAASA,GAAS,OAn4TlB9Q,IAo4TI+Q,GACFA,EAAMD,EACNA,EAAQ,GAERC,GAAOA,GAAO,EAETnR,GAAS+F,GAAUmL,EAAOC,IAAQnR,EAAQ6F,GAAUqL,EAAOC,IA20DpEzK,GAAOoH,YAAcA,GACrBpH,GAAOC,QAAUA,GACjBD,GAAOmiB,UAv6GP,SAAmB7oB,GACjB,OAAiB,IAAVA,IAA4B,IAAVA,GAAoBoC,GAAapC,IAAUoE,GAAYG,KAAKvE,IAAUnL,GAu6GjG6R,GAAOoiB,OAp5GP,SAAgB9oB,GACd,OAAOoC,GAAapC,IAAUoE,GAAYG,KAAKvE,IAAUlL,GAo5G3D4R,GAAOqiB,UAj4GP,SAAmB/oB,GACjB,QAASA,GAA4B,IAAnBA,EAAMd,UAAkBkD,GAAapC,KAAWkiB,GAAcliB,IAi4GlF0G,GAAOsiB,QAn2GP,SAAiBhpB,GACf,OAAa,MAATA,IAGAgK,GAAYhK,KAAW2G,GAAQ3G,IAAUwe,GAASxe,IAAU8N,GAAY9N,IACvEoC,GAAapC,IAAUqO,GAAWrO,EAAMiF,UACnCjF,EAAMa,QAER4I,GAAKzJ,GAAOa,SA41GtB6F,GAAOqb,QAAUA,GACjBrb,GAAOsb,QAAUA,GACjBtb,GAAOf,SAzvGP,SAAkB3F,GAChB,MAAuB,iBAATA,GAAqB0F,GAAe1F,IAyvGpD0G,GAAO2H,WAAaA,GACpB3H,GAAOuiB,QA9pGP,SAAiBrsB,EAAQxG,EAAQmT,EAAYc,GAE3C,OADAd,EAAkC,mBAAdA,EAA2BiB,GAAajB,EAAYc,EAAS,QAlkRjFjK,EAmkRO0P,GAAYlT,EAAQwT,GAAaha,GAASmT,IA6pGnD7C,GAAOwiB,MAjoGP,SAAelpB,GAGb,OAAOiiB,GAASjiB,IAAUA,IAAUA,GA+nGtC0G,GAAOuU,SAAWA,GAClBvU,GAAOyiB,OAnlGP,SAAgBnpB,GACd,OAAiB,OAAVA,GAmlGT0G,GAAOub,SAAWA,GAClBvb,GAAO0B,SAAWA,GAClB1B,GAAOwb,cAAgBA,GACvBxb,GAAOyb,SAAWA,GAClBzb,GAAO8X,SAAWA,GAClB9X,GAAOuI,aAAeA,GACtBvI,GAAO0iB,YA77FP,SAAqBppB,GACnB,YA7yRAI,IA6yROJ,GA67FT0G,GAAOmd,UAAYA,GACnBnd,GAAO+J,KAAOA,GACd/J,GAAO2iB,YA9xNP,SAAqB3oB,EAAOV,EAAOgB,GACjC,IAAIH,EAASH,EAAQA,EAAMG,OAAS,EACpC,IAAKA,EACH,OAAQ,EAEV,IAAIC,EAAQD,EACZ,GAAwB,iBAAbG,EACTF,GAASE,EAAY,EAAI6E,GAAUhF,EAASG,EAAW,GAAK+E,GAAU/E,GAAa,EAAGH,EAAS,IAAM,OAChG,GAAIG,EAAW,CAEpB,IAAIf,EAAQS,EADZI,EAAQ8R,GAAYlS,EAAOV,GAAO,GAAQ,GAE1C,OAAIA,GAAUA,EAASA,IAAUC,EAAUA,GAAUA,GAC5Ca,GAED,EAEV,GAAId,GAAUA,EACZ,OAAOiB,GAAWP,EAAOI,GAAO,GAElC,KAAOA,KACL,GAAIJ,EAAMI,KAAWd,EACnB,OAAOc,EAGX,OAAQ,GAuwNV4F,GAAO0b,GAAKA,GACZ1b,GAAO4iB,IAl5FP,SAAatpB,EAAOC,GAClB,OAAOD,GAASC,GAk5FlByG,GAAOZ,IAAMA,GACbY,GAAOV,IAAMA,GACbU,GAAO6iB,WAjoBP,WAEE,OADA1pB,GAAKkD,EAAIsB,GACFvE,MAgoBT4G,GAAOmU,KAAOA,GACdnU,GAAOgV,IAAMA,GACbhV,GAAO8iB,IA9lDP,SAAanoB,EAAQR,EAAQS,GAE3BT,GAAUA,EAEV,IAAIuY,GAHJ/X,EAASF,GAAaE,IAGCR,OACvB,GAAIuY,GAAavY,IAAW6E,GAAe7E,GACzC,OAAOQ,EAET,IAAI4R,GAAOpS,EAASuY,GAAa,EAC7BpF,EAAazO,GAAY0N,GAI7B,OADA3R,EAAQmW,GAAc,GAFJrS,GAAW6N,GAEU3R,IAC1BiY,MAAM,EAAGvF,GAAc3S,EAASC,GAklD/CoF,GAAOod,QAAUA,GACjBpd,GAAOqd,SAAWA,GAClBrd,GAAOP,SA1gDP,SAAkB9E,EAAQooB,EAAO7U,GAU/B,OANIA,EAAQC,GAAexT,EAAQooB,EAAO7U,GAAkB,MAAT6U,GACjDA,EAAQ,EACCA,IACTA,GAASA,GAEXpoB,EAAS6iB,GAAK7iB,GACP6E,GAAe7E,EAAQooB,IAAUvyB,EAAeikB,KAAK9Z,GAAU,GAAK,MAigD7EqF,GAAOL,OAh1DP,SAAgBL,EAAKF,EAAK4jB,GACpBA,GAAY7U,GAAe7O,EAAKF,EAAK4jB,KACvC5jB,EAAM4jB,OA16TRtpB,GA46TA,IAAIupB,EAAe,MAAP3jB,EACR4jB,EAAe,MAAP9jB,EAuBZ,GArBgB,MAAZ4jB,IACEE,GAAuB,kBAAP5jB,GAClB0jB,EAAW1jB,EACXA,EAAM,GAEe,kBAAPF,IACd4jB,EAAW5jB,EACX8jB,GAAQ,IAGRD,GAASC,IACX9jB,EAAM,EACN8jB,GAAQ,GAEV5jB,GAAOA,GAAO,EACV4jB,GACF9jB,EAAME,EACNA,EAAM,GAENF,GAAOA,GAAO,EAEZ4jB,GAAY1jB,EAAM,GAAKF,EAAM,EAAG,CAClC,IAAIoZ,EAAO9Y,KACX,OAAOL,GAAUC,EAAOkZ,GAAQpZ,EAAME,EAAMrB,GAAW,QAAUua,EAAO,IAAIre,OAAS,KAAOiF,GAE9F,OAAOgL,GAAW9K,EAAKF,IAizDzBY,GAAOoY,OAASA,GAChBpY,GAAOqY,YAAcA,GACrBrY,GAAO4S,OAASA,GAChB5S,GAAOhE,OApkEP,SAAgB9F,EAAQ2R,EAAMma,GAC5B,IAAIhmB,EAAmB,MAAV9F,OAzrTbwD,EAyrT0CxD,EAAO2R,GASjD,YAlsTAnO,IA0rTIsC,IACY,MAAV9F,GAAmByT,GAAM9B,EAAM3R,KAGjC8F,EAAmB,OADnB9F,EAAwB,IADxB2R,EAAOgC,GAAOhC,IACA1N,OAAcjE,EAAS0R,GAAQ1R,EAAQ4T,GAAUjC,EAAM,GAAI,UA7rT7EnO,EA8rT0CxD,EAAO6T,GAAKlC,KAEpD7L,OAhsTFtC,IAgsTWsC,EAAuBgmB,EAAehmB,GAE1C2L,GAAW3L,GAAUA,EAAO6B,KAAK3H,GAAU8F,GA2jEpDgE,GAAOie,MAAQA,GACfje,GAAO1D,aAAeA,EACtB0D,GAAOqe,KA/7JP,SAAclb,GACZ,IAAIhJ,EAASgJ,EAAaiL,GAAUjL,GAAc,EAClD,OAAOkL,GAASlU,GAAUA,EAAS4I,GAAKI,GAAYhJ,QA87JtD6F,GAAOsd,UAAYA,GACnBtd,GAAOyY,KAAOA,GACdzY,GAAOmW,YAAcA,GACrBnW,GAAOoW,gBAAkBA,GACzBpW,GAAOud,UAAYA,GACnBvd,GAAOmjB,WAh6CP,SAAoBxoB,EAAQ0Z,EAAQwN,GAMlC,OALAlnB,EAASF,GAAaE,GACtBknB,EAAuB,MAAZA,EACP,EACAxiB,GAAUwiB,EAAW,EAAI,GAAMA,GAAY,EAAIlnB,EAAOR,QAEnDQ,EAAOgoB,YAAYtO,EAAQwN,IAAaA,GA25CjD7hB,GAAOojB,IAlPP,SAAajgB,EAAYrB,EAAU6B,GAKjC,OAJIA,GAAWwK,GAAehL,EAAYrB,EAAU6B,KAClD7B,OAthXFpI,GAyhX0B,IAD1BoI,EAAWoJ,GAAYpJ,EAAU6B,EAAS,IAC1BxJ,OAjkUlB,SAAkBH,EAAO8H,GAIvB,IAHA,IAAI3H,EAASH,EAAMG,OACf6B,EAAS,EAEN7B,KACL6B,IAAW8F,EAAS9H,EAAMG,KAAY,EAExC,OAAO6B,EA2jUHqnB,CAASpjB,GAAQkD,GAAcA,EAAaqM,GAAWrM,GAAarB,GAj9R1E,SAAiBqB,EAAYrB,GAC3B,IAAI9F,EAAS,EAIb,OAHAyK,GAAStD,GAAY,SAAS7J,EAAOc,EAAO+I,GAC1CnH,IAAW8F,EAASxI,EAAOc,EAAO+I,IAAe,KAE5CnH,EA68RHsnB,CAAQngB,EAAYrB,IA4O1B9B,GAAOujB,SAzzCP,SAAkB5oB,EAAQ4e,EAASiK,GAGjC,IAAIC,EAAWzjB,GAAOuF,iBAElBie,GAAgBrV,GAAexT,EAAQ4e,EAASiK,KAClDjK,EAAUiK,OAp9UZ9pB,GAs9UAiB,EAASF,GAAaE,GACtB4e,EAAU3W,GAAWI,GAAW,GAAIwgB,GAAgBjK,GAAUkK,EAAUjhB,IAExE,IAIIkhB,EACAC,EALA/d,EAAUhD,GAAWI,GAAW,GAAIuW,EAAQ3T,SAAU6d,EAAS7d,QAASpD,IACxEohB,EAAc7gB,GAAK6C,GACnBie,EAAgBhY,GAAWjG,EAASge,GAIpCxpB,EAAQ,EACRsL,EAAc6T,EAAQ7T,aAAe9U,EACrClB,EAAS,WAGTo0B,EAAer0B,IAChB8pB,EAAQ/T,QAAU5U,GAAWlB,OAAS,IACvCgW,EAAYhW,OAAS,KACpBgW,IAAgB5V,EAAgBQ,EAAeM,GAAWlB,OAAS,KACnE6pB,EAAQ9T,UAAY7U,GAAWlB,OAAS,KACzC,KAGEq0B,EAAY,kBACb,cAAexK,EACZA,EAAQwK,UACP,6BAA+B/yB,EAAmB,KACnD,KAEN2J,EAAOmD,QAAQgmB,GAAc,SAAS1O,EAAO4O,EAAaC,EAAkBC,EAAiBC,EAAehiB,GAsB1G,OArBA8hB,IAAqBA,EAAmBC,GAGxCx0B,GAAUiL,EAAOkY,MAAMzY,EAAO+H,GAAQrE,QAAQjN,EAAmB4K,IAG7DuoB,IACFN,GAAa,EACbh0B,GAAU,YAAcs0B,EAAc,UAEpCG,IACFR,GAAe,EACfj0B,GAAU,OAASy0B,EAAgB,eAEjCF,IACFv0B,GAAU,iBAAmBu0B,EAAmB,+BAElD7pB,EAAQ+H,EAASiT,EAAMjb,OAIhBib,KAGT1lB,GAAU,OAIV,IAAIiW,EAAW4T,EAAQ5T,SAClBA,IACHjW,EAAS,iBAAmBA,EAAS,SAGvCA,GAAUi0B,EAAej0B,EAAOoO,QAAQ3O,EAAsB,IAAMO,GACjEoO,QAAQ1O,EAAqB,MAC7B0O,QAAQzO,EAAuB,OAGlCK,EAAS,aAAeiW,GAAY,OAAS,SAC1CA,EACG,GACA,wBAEJ,qBACC+d,EACI,mBACA,KAEJC,EACG,uFAEA,OAEJj0B,EACA,gBAEF,IAAIsM,EAAS0hB,IAAQ,WACnB,OAAO7gB,GAAS+mB,EAAaG,EAAY,UAAYr0B,GAAQuW,WA5iV/DvM,EA4iVgFmqB,MAMhF,GADA7nB,EAAOtM,OAASA,EACZ4rB,GAAQtf,GACV,MAAMA,EAER,OAAOA,GAmtCTgE,GAAOwd,KAAOA,GACdxd,GAAOokB,SA7pCP,SAAkBzpB,EAAQC,EAAOsT,GAC/B,IAAI5U,EAAQqB,EAEZ,OADAA,EAASF,GAAaE,KAIlBuT,EAAQC,GAAe7U,EAAOsB,EAAOsT,GAAkB,MAATtT,GACzCD,EAAOkY,MAAM5W,GAAiBtB,IAEhCA,EAAOkY,MAAMnY,GAAeC,EAASC,EAAQ,KAL3CD,GA0pCXqF,GAAOqkB,UAhoCP,SAAmB1pB,EAAQC,EAAOsT,GAChC,IAAI5U,EAAQqB,EAEZ,OADAA,EAASF,GAAaE,KAIlBuT,EAAQC,GAAe7U,EAAOsB,EAAOsT,GAAkB,MAATtT,GACzCD,EAAOkY,MAAM,EAAG1W,GAAkBxB,GAAU,GAE9CA,EAAOkY,MAAM,EAAG9X,GAAgBJ,EAASC,EAAQ,IAAO,GALtDD,GA6nCXqF,GAAOskB,MA7kCP,SAAe3pB,EAAQ4e,EAASrL,GAC1BA,GAASC,GAAexT,EAAQ4e,EAASrL,KAC3CqL,OAhsVF7f,GAksVA,IAAIS,EAjrVmB,GAkrVnBoqB,EAjrVqB,MAmrVzB,GAAe,MAAXhL,EACF,GAAI7X,GAAS6X,GAAU,CACrB,IAAIiL,EAAY,cAAejL,EAAUA,EAAQiL,UAAYA,EAC7DrqB,EAAS,WAAYof,GAAYA,EAAQpf,QAAU,EAAKA,EACxDoqB,EAAW,aAAchL,EAAU9e,GAAa8e,EAAQgL,UAAYA,OAEpEpqB,GAAUof,GAAW,EAIzB,GAAIpf,IADJQ,EAASF,GAAaE,IACDR,OACnB,OAAOQ,EAET,IAAI8P,EAAMtQ,EAASoqB,EAASpqB,OAC5B,GAAIsQ,EAAM,EACR,OAAO8Z,EAET,IAAIvoB,EAASrB,EAAOkY,MAAM,EAAGpI,GAC7B,GAAiB,MAAb+Z,EACF,OAAOxoB,EAASuoB,EAElB,GAAI9I,GAAS+I,IACX,GAAI7pB,EAAOkY,MAAMpI,GAAKga,OAAOD,GAAY,CACvC,IAAIpP,EACAsP,EACAC,EAAYhqB,EAAOkY,MAAM,EAAGpI,GAMhC,IAJK+Z,EAAU5rB,SACb4rB,EAAY/0B,GAAO+0B,EAAU90B,QAASa,EAAQyU,KAAKwf,IAAc,IAAM,MAEzEA,EAAUvf,UAAY,EACdmQ,EAAQoP,EAAUxf,KAAK2f,IAC7BD,EAAStP,EAAMhb,MAEjB4B,EAASA,EAAO6W,MAAM,EAAa,MAAV6R,EAAiBja,EAAMia,SAE7C,GAAI/pB,EAAOE,QAAQ2pB,EAAW/Z,IAAQA,EAAK,CAChD,IAAIrQ,EAAQ4B,EAAO2mB,YAAY6B,GAC3BpqB,GAAS,IACX4B,EAASA,EAAO6W,MAAM,EAAGzY,IAG7B,OAAO4B,EAASuoB,GA6hClBvkB,GAAO4kB,SAxgCP,SAAkBjqB,GAEhB,OADAA,EAASF,GAAaE,KACJnL,EAAiBilB,KAAK9Z,GACpCA,EAAOmD,QAAQxO,EAAe8M,IAC9BzB,GAqgCNqF,GAAO6kB,SAtdP,SAAkBC,GAChB,IAAI9K,IAAOvc,GACX,OAAOhD,GAAaqqB,GAAU9K,GAqdhCha,GAAOyO,MAAQA,GAGfzO,GAAO+kB,IAAMzN,GACbtX,GAAOglB,IAAMvM,GACbzY,GAAOilB,SAAWpN,GAClB7X,GAAOklB,GAAK7J,GACZrb,GAAOmlB,OAAS3N,GAChBxX,GAAOolB,MAAQhN,GACfpY,GAAOqlB,MAAQhN,GACfrY,GAAOslB,KAAO1P,GACd5V,GAAOulB,QAAU1N,GACjB7X,GAAOwlB,OAASpN,GAEhB0F,GAAM9d,IACAtQ,GAAS,GACb0V,GAAWpF,IAAQ,SAAS0D,EAAMsP,GAC3BhT,GAAO7C,UAAU6V,KACpBtjB,GAAOsjB,GAActP,MAGlBhU,KACH,GAKNsQ,GAAOsY,OAASA,GAEhBtY,GAAO7C,UAAUmb,OAAS,SAAS5gB,GACjC,OAAK0B,KAAKsH,WAAkB,MAALhJ,EAGhB0B,KAAK6W,MAAK,SAAS3W,GACxB,OAAOgf,GAAOhf,EAAO5B,MAHd4gB,GAAOlf,KAAKE,UAgBvB0G,GAAOylB,QA1zXK,SA6zXZ5jB,GAAU,CAAC,OAAQ,UAAW,QAAS,aAAc,UAAW,iBAAiB,SAASmR,GACxFhT,GAAOgT,GAAYlX,YAAckE,MAInC6B,GAAU,CAAC,OAAQ,SAAS,SAASmR,EAAY5Y,GAC/C8F,GAAY/C,UAAU6V,GAAc,SAAStb,GAC3C,IAAIguB,EAAWtsB,KAAKwH,aACpB,GAAI8kB,IAAatrB,EACf,OAAO,IAAI8F,GAAY9G,MAEzB1B,EAAS,MAALA,EAAY,EAAIyH,GAAUN,GAAYnH,IAAM,EAAG,GAEnD,IAAIsE,EAAS5C,KAAKkc,QAMlB,OALIoQ,EACF1pB,EAAO8E,cAAgBzB,GAAUrD,EAAO8E,cAAepJ,GAEvDsE,EAAO+E,UAAUQ,KAAK,CAAE8c,KAAQ3mB,EAAGmM,KAAQmP,GAAchX,EAAO2E,QAAU,EAAI,QAAU,MAEnF3E,GAGTkE,GAAY/C,UAAU6V,EAAa,SAAW,SAAStb,GACrD,OAAO0B,KAAKusB,UAAU3S,GAAYtb,GAAGiuB,cAKzC9jB,GAAU,CAAC,SAAU,MAAO,cAAc,SAASmR,EAAY5Y,GAC7D,IAAIyJ,EAAOzJ,EAAQ,EACfwrB,EAj0XY,GAi0XD/hB,EAEf3D,GAAY/C,UAAU6V,GAAc,SAASlR,EAAU6B,GACrD,IAAI3H,EAAS5C,KAAKkc,QAGlB,OAFAtZ,EAAO6E,cAAcU,KAAK,CAAEO,SAAYoJ,GAAYpJ,EAAU6B,EAAS,GAAIE,KAAQA,IACnF7H,EAAO4E,aAAe5E,EAAO4E,cAAgBglB,EACtC5pB,MAKX6F,GAAU,CAAC,QAAS,SAAS,SAASmR,EAAY5Y,GAChD,IAAIyrB,EAAW,QAAUzrB,EAAQ,QAAU,IAE3C8F,GAAY/C,UAAU6V,GAAc,WAClC,OAAO5Z,KAAKysB,GAAU,GAAGvsB,QAAQ,OAKrCuI,GAAU,CAAC,UAAW,SAAS,SAASmR,EAAY5Y,GAClD,IAAI0rB,EAAW,QAAU1rB,EAAQ,GAAK,SAEtC8F,GAAY/C,UAAU6V,GAAc,WAClC,OAAO5Z,KAAKwH,aAAe,IAAIV,GAAY9G,MAAQA,KAAK0sB,GAAU,OAKtEjkB,GAAU,CAAC,QAAS,UAAU,SAASmR,EAAY5Y,GACjD,IAAI2rB,EAAgB3rB,EAAQ,SAAW,MACnC4rB,EAAiB5rB,EAAQ4J,GAAcC,GAE3C/D,GAAY/C,UAAU6V,GAAc,SAAS1Z,GAC3C,OAAOF,KAAK2sB,GAAeC,EAAe1sB,QAI9C4G,GAAY/C,UAAUmhB,QAAU,WAC9B,OAAOllB,KAAKme,OAAOxT,KAGrB7D,GAAY/C,UAAUwiB,OAAS,SAAS1lB,EAAW0J,GAEjD,OADA1J,EAAYiR,GAAYjR,EAAW0J,EAAS,GACrCvK,KAAKme,QAAO,SAASje,GAC1B,OAAQW,EAAUX,OAItB4G,GAAY/C,UAAU0V,MAAQ,SAASrI,EAAOC,GAC5CD,EAAiB,MAATA,EAAgB,GAAMA,GAAS,EAEvC,IAAIxO,EAAS5C,KACb,OAAI4C,EAAO4E,eAAiB4J,EAAQ,GAAKC,EAAM,GACtC,IAAIvK,GAAYlE,IAErBwO,EAAQ,EACVxO,EAASA,EAAOmkB,WAAW3V,GAClBA,IACTxO,EAASA,EAAOwZ,KAAKhL,SAz5XvB9Q,IA25XI+Q,IAEFzO,GADAyO,GAAQA,GAAO,GACA,EAAIzO,EAAOyZ,WAAWhL,GAAOzO,EAAOkkB,KAAKzV,EAAMD,IAEzDxO,IAGTkE,GAAY/C,UAAUijB,eAAiB,SAASnmB,EAAW0J,GACzD,OAAOvK,KAAKusB,UAAUtF,UAAUpmB,EAAW0J,GAASgiB,WAGtDzlB,GAAY/C,UAAUob,QAAU,WAC9B,OAAOnf,KAAK8mB,KAAKrgB,KAInBuF,GAAWlF,GAAY/C,WAAW,SAASuG,EAAMsP,GAC/C,IAAIiT,EAAgB,gCAAgCxR,KAAKzB,GACrDkT,EAAe,mBAAmBzR,KAAKzB,GACvCmT,EAAanmB,GAAOkmB,EAAgB,QAAwB,QAAdlT,EAAuB,QAAU,IAAOA,GAErFmT,IAGLnmB,GAAO7C,UAAU6V,GAAc,WAC7B,IAAIhN,EAAOkgB,EAAe,CAAC,GAAKrZ,UAC5BvM,EAAWlH,KAAKsH,UAChBpH,EAAQF,KAAKoH,YACb4lB,IAAahtB,KAAKqH,YAAYtG,OAC9BksB,EAAS/sB,aAAiB4G,GAC1B4B,EAAWkE,EAAK,GAChBsgB,EAAUD,GAAUpmB,GAAQ3G,GAE5BgtB,GAAWL,GAAoC,mBAAZnkB,GAA6C,GAAnBA,EAAS3H,SAExEksB,EAASC,GAAU,GAErB,IAAIrP,EAAc,SAAS3d,GACzB,OAAQ4sB,GAAgB5lB,EACpB6lB,EAAW7sB,EAAO,GAAG,GACrB6sB,EAAWlgB,WAn8XnBvM,EAm8XoCwI,GAAU,CAAC5I,GAAQ0M,KAGjDiG,EAAS,CAAEvI,KAAQuM,GAAMjK,KAAQ,CAACiR,GAActT,aAt8XtDjK,GAu8XM6sB,EAAWF,IAAWD,EAE1B,GAAIF,IAAiB5lB,EACnB,OAAIimB,IACFjtB,EAAQA,EAAMgc,SACR7U,YAAYc,KAAK0K,GAChBvI,EAAK7F,KAAKvE,IAEZ6sB,EAAWtoB,UA/8XtBnE,EA+8XsCN,KAAKE,SAAS,GAElD,IAAK4sB,GAAgBI,EAAS,CAC5BhtB,EAAQitB,EAAWjtB,EAAQ,IAAI4G,GAAY9G,MAC3C,IAAI4C,EAAS0H,EAAKuC,MAAM3M,EAAO0M,GAE/B,OADAhK,EAAOyE,YAAYc,KAAK0K,GACjB,IAAI9L,GAAcnE,EAAQsE,GAEnC,OAAOlH,KAAK6W,KAAKgH,QAKrBpV,GAAU,CAAC,OAAQ,MAAO,OAAQ,UAAW,QAAS,OAAQ,SAAU,QAAS,YAAY,SAASmR,GACpG,IAAItP,GAAQ,sBAAsB+Q,KAAKzB,GAAc3V,GAAcH,IAAY8V,GAC3EwT,EAAY,0BAA0B/R,KAAKzB,GAAc,MAAQ,OACjEkT,EAAe,+BAA+BzR,KAAKzB,GAEvDhT,GAAO7C,UAAU6V,GAAc,WAC7B,IAAIhN,EAAO6G,UACX,OAAIqZ,IAAiB9sB,KAAKsH,UACjBgD,EAAKuC,MAAM7M,KAAKE,QAAS0M,GAE3B5M,KAAKotB,IAAW,SAASltB,GAC9B,OAAOoK,EAAKuC,MAAM3M,EAAO0M,UAM/BZ,GAAWlF,GAAY/C,WAAW,SAASuG,EAAMsP,GAC/C,IAAImT,EAAanmB,GAAOgT,GACxB,GAAImT,EAAY,CACd,IAAIxjB,EAAMwjB,EAAWxd,MACT5I,GAAU4C,KAAS5C,GAAU4C,GAAO,KAE1CpB,KAAK,CAAEoH,KAAQqK,EAAYtP,KAAQyiB,QAI7CpmB,GAAUoR,QAv/XRzX,EAOgB,GAg/XsCiP,MAAQ,CAAC,CAAEA,KAAQ,UAAWjF,UAv/XpFhK,IA0/XFwG,GAAY/C,UAAUmY,MA1gWtB,WACE,IAAItZ,EAAS,IAAIkE,GAAY9G,KAAKoH,aAOlC,OANAxE,EAAOyE,YAAcmB,GAAUxI,KAAKqH,aACpCzE,EAAO2E,QAAUvH,KAAKuH,QACtB3E,EAAO4E,aAAexH,KAAKwH,aAC3B5E,EAAO6E,cAAgBe,GAAUxI,KAAKyH,eACtC7E,EAAO8E,cAAgB1H,KAAK0H,cAC5B9E,EAAO+E,UAAYa,GAAUxI,KAAK2H,WAC3B/E,GAmgWTkE,GAAY/C,UAAUwoB,QAx/VtB,WACE,GAAIvsB,KAAKwH,aAAc,CACrB,IAAI5E,EAAS,IAAIkE,GAAY9G,MAC7B4C,EAAO2E,SAAW,EAClB3E,EAAO4E,cAAe,OAEtB5E,EAAS5C,KAAKkc,SACP3U,UAAY,EAErB,OAAO3E,GAg/VTkE,GAAY/C,UAAU7D,MAr+VtB,WACE,IAAIU,EAAQZ,KAAKoH,YAAYlH,QACzBmtB,EAAMrtB,KAAKuH,QACX0C,EAAQpD,GAAQjG,GAChB0sB,EAAUD,EAAM,EAChBhT,EAAYpQ,EAAQrJ,EAAMG,OAAS,EACnCwsB,EA20FN,SAAiBnc,EAAOC,EAAKsQ,GAC3B,IAAI3gB,GAAS,EACTD,EAAS4gB,EAAW5gB,OAExB,OAASC,EAAQD,GAAQ,CACvB,IAAIiH,EAAO2Z,EAAW3gB,GAClBikB,EAAOjd,EAAKid,KAEhB,OAAQjd,EAAKyC,MACX,IAAK,OAAa2G,GAAS6T,EAAM,MACjC,IAAK,YAAa5T,GAAO4T,EAAM,MAC/B,IAAK,OAAa5T,EAAMpL,GAAUoL,EAAKD,EAAQ6T,GAAO,MACtD,IAAK,YAAa7T,EAAQrL,GAAUqL,EAAOC,EAAM4T,IAGrD,MAAO,CAAE7T,MAASA,EAAOC,IAAOA,GA11FrBmc,CAAQ,EAAGnT,EAAWra,KAAK2H,WAClCyJ,EAAQmc,EAAKnc,MACbC,EAAMkc,EAAKlc,IACXtQ,EAASsQ,EAAMD,EACfpQ,EAAQssB,EAAUjc,EAAOD,EAAQ,EACjCO,EAAY3R,KAAKyH,cACjBgmB,EAAa9b,EAAU5Q,OACvB4B,EAAW,EACX+qB,EAAYznB,GAAUlF,EAAQf,KAAK0H,eAEvC,IAAKuC,GAASoQ,EA9gCK,KA8gC4BA,GAAatZ,GAAU2sB,GAAa3sB,EACjF,OAAO6R,GAAkB0a,GAAWrjB,EAASrJ,EAAM2rB,UAAY3rB,EAAOZ,KAAKqH,aAE7E,IAAIzE,EAAS,GAEbuK,EACA,KAAOpM,KAAY4B,EAAW+qB,GAAW,CAMvC,IAHA,IAAIC,GAAa,EACbztB,EAAQU,EAHZI,GAASqsB,KAKAM,EAAYF,GAAY,CAC/B,IAAIzlB,EAAO2J,EAAUgc,GACjBjlB,EAAWV,EAAKU,SAChB+B,EAAOzC,EAAKyC,KACZ8H,EAAW7J,EAASxI,GAExB,GA5hCY,GA4hCRuK,EACFvK,EAAQqS,OACH,IAAKA,EAAU,CACpB,GAhiCa,GAgiCT9H,EACF,SAAS0C,EAET,MAAMA,GAIZvK,EAAOD,KAAczC,EAEvB,OAAO0C,GA07VTgE,GAAO7C,UAAU6Z,MAzsMjB,WACE,OAAOA,GAAM5d,OAysMf4G,GAAO7C,UAAU6pB,OA7qMjB,WACE,OAAO,IAAI7mB,GAAc/G,KAAKE,QAASF,KAAKsH,YA6qM9CV,GAAO7C,UAAU8pB,OAAS/P,GAC1BlX,GAAO7C,UAAUmT,MAznMjB,SAAsBhX,GAIpB,IAHA,IAAI0C,EACAkrB,EAAS9tB,KAEN8tB,aAAkB7mB,IAAY,CACnC,IAAIiV,EAAQlV,GAAa8mB,GACrBlrB,EACFmO,EAAS3J,YAAc8U,EAEvBtZ,EAASsZ,EAEX,IAAInL,EAAWmL,EACf4R,EAASA,EAAO1mB,YAGlB,OADA2J,EAAS3J,YAAclH,EAChB0C,GA2mMTgE,GAAO7C,UAAUwoB,QAplMjB,WACE,IAAIrsB,EAAQF,KAAKoH,YAEbyW,EAAc,SAAS3d,GACzB,OAAQ6tB,GAAWA,EAAQxmB,QAAU,EAAKrH,EAAQA,EAAMqsB,WAE1D,GAAIrsB,aAAiB4G,GAAa,CAChC,IAAIinB,EAAU7tB,EAMd,OALIF,KAAKqH,YAAYtG,SACnBgtB,EAAU,IAAIjnB,GAAY9G,QAE5B+tB,EAAUA,EAAQxB,WACVllB,YAAYc,KAAK,CAAEmC,KAAQuM,GAAMjK,KAAQ,CAACiR,GAActT,aA37LlEjK,IA47LS,IAAIyG,GAAcgnB,EAAS/tB,KAAKsH,WAEzC,OAAOtH,KAAK6W,KAAKgH,IAskMnBjX,GAAO7C,UAAUI,SAvjMjB,WACE,OAAQnE,KAAKE,QAAU,IAujMzB0G,GAAO7C,UAAUiqB,IAAMpnB,GAAO7C,UAAUkqB,OAASrnB,GAAO7C,UAAUmqB,QAAUtnB,GAAO7C,UAAU7D,MAviM7F,WACE,OAAO0S,GAAiB5S,KAAKoH,YAAapH,KAAKqH,cAyiMjDT,GAAO7C,UAAU4jB,QAAU/gB,GAAO7C,UAAU+a,IAC5ClY,GAAO7C,UAAUmoB,KAAOtlB,GAAO7C,UAAUyY,MACzC5V,GAAO7C,UAAUkkB,OAASrhB,GAAO7C,UAAUoa,OAC3CvX,GAAO7C,UAAUmkB,KAAOthB,GAAO7C,UAAU+Y,KAElClW,GAMD1D,GAGa,mBAAVirB,QAA6C,iBAAdA,OAAOC,KAAmBD,OAAOC,KAKzEruB,GAAKkD,EAAIA,GAITkrB,QAAO,WACL,OAAOlrB,OAIF/D,IAAeG,GAElBS,IACDT,GAAWF,QAAU8D,IAAGA,EAAIA,GAI7B/D,GAAY+D,EAAIA,GAKlBlD,GAAKkD,EAAIA,KAEXwB,KAAKzE","file":"lodash.min.js","sourcesContent":["/**\n * @license\n * lodash 3.10.1 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern -d -o ./index.js`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '3.10.1';\n\n  /** Used to compose bitmasks for wrapper metadata. */\n  var BIND_FLAG = 1,\n      BIND_KEY_FLAG = 2,\n      CURRY_BOUND_FLAG = 4,\n      CURRY_FLAG = 8,\n      CURRY_RIGHT_FLAG = 16,\n      PARTIAL_FLAG = 32,\n      PARTIAL_RIGHT_FLAG = 64,\n      ARY_FLAG = 128,\n      REARG_FLAG = 256;\n\n  /** Used as default options for `_.trunc`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect when a function becomes hot. */\n  var HOT_COUNT = 150,\n      HOT_SPAN = 16;\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2;\n\n  /** Used as the `TypeError` message for \"Functions\" methods. */\n  var FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      objectTag = '[object Object]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      weakMapTag = '[object WeakMap]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39|#96);/g,\n      reUnescapedHtml = /[&<>\"'`]/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\n\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\n\\\\]|\\\\.)*?)\\2)\\]/g;\n\n  /**\n   * Used to match `RegExp` [syntax characters](http://ecma-international.org/ecma-262/6.0/#sec-patterns)\n   * and those outlined by [`EscapeRegExpPattern`](http://ecma-international.org/ecma-262/6.0/#sec-escaperegexppattern).\n   */\n  var reRegExpChars = /^[:!,]|[\\\\^$.*+?()[\\]{}|\\/]|(^[0-9a-fA-Fnrtuvx])|([\\n\\r\\u2028\\u2029])/g,\n      reHasRegExpChars = RegExp(reRegExpChars.source);\n\n  /** Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks). */\n  var reComboMark = /[\\u0300-\\u036f\\ufe20-\\ufe23]/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /** Used to match [ES template delimiters](http://ecma-international.org/ecma-262/6.0/#sec-template-literal-lexical-components). */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect hexadecimal string values. */\n  var reHasHexPrefix = /^0[xX]/;\n\n  /** Used to detect host constructors (Safari > 5). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^\\d+$/;\n\n  /** Used to match latin-1 supplementary letters (excluding mathematical operators). */\n  var reLatin1 = /[\\xc0-\\xd6\\xd8-\\xde\\xdf-\\xf6\\xf8-\\xff]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to match words to create compound words. */\n  var reWords = (function() {\n    var upper = '[A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde]',\n        lower = '[a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff]+';\n\n    return RegExp(upper + '+(?=' + upper + lower + ')|' + upper + '?' + lower + '|' + upper + '+|[0-9]+', 'g');\n  }());\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'ArrayBuffer', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Math', 'Number',\n    'Object', 'RegExp', 'Set', 'String', '_', 'clearTimeout', 'isFinite',\n    'parseFloat', 'parseInt', 'setTimeout', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dateTag] = typedArrayTags[errorTag] =\n  typedArrayTags[funcTag] = typedArrayTags[mapTag] =\n  typedArrayTags[numberTag] = typedArrayTags[objectTag] =\n  typedArrayTags[regexpTag] = typedArrayTags[setTag] =\n  typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\n  cloneableTags[dateTag] = cloneableTags[float32Tag] =\n  cloneableTags[float64Tag] = cloneableTags[int8Tag] =\n  cloneableTags[int16Tag] = cloneableTags[int32Tag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[stringTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[mapTag] = cloneableTags[setTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map latin-1 supplementary letters to basic latin letters. */\n  var deburredLetters = {\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcC': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xeC': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '`': '&#96;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\",\n    '&#96;': '`'\n  };\n\n  /** Used to determine if values are of the language type `Object`. */\n  var objectTypes = {\n    'function': true,\n    'object': true\n  };\n\n  /** Used to escape characters for inclusion in compiled regexes. */\n  var regexpEscapes = {\n    '0': 'x30', '1': 'x31', '2': 'x32', '3': 'x33', '4': 'x34',\n    '5': 'x35', '6': 'x36', '7': 'x37', '8': 'x38', '9': 'x39',\n    'A': 'x41', 'B': 'x42', 'C': 'x43', 'D': 'x44', 'E': 'x45', 'F': 'x46',\n    'a': 'x61', 'b': 'x62', 'c': 'x63', 'd': 'x64', 'e': 'x65', 'f': 'x66',\n    'n': 'x6e', 'r': 'x72', 't': 'x74', 'u': 'x75', 'v': 'x76', 'x': 'x78'\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Detect free variable `exports`. */\n  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = objectTypes[typeof self] && self && self.Object && self;\n\n  /** Detect free variable `window`. */\n  var freeWindow = objectTypes[typeof window] && window && window.Object && window;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\n\n  /**\n   * Used as a reference to the global object.\n   *\n   * The `this` value is used if it's the global object to avoid Greasemonkey's\n   * restricted `window` object, otherwise the `window` object is used.\n   */\n  var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * The base implementation of `compareAscending` which compares values and\n   * sorts them in ascending order without guaranteeing a stable sort.\n   *\n   * @private\n   * @param {*} value The value to compare.\n   * @param {*} other The other value to compare.\n   * @returns {number} Returns the sort order indicator for `value`.\n   */\n  function baseCompareAscending(value, other) {\n    if (value !== other) {\n      var valIsNull = value === null,\n          valIsUndef = value === undefined,\n          valIsReflexive = value === value;\n\n      var othIsNull = other === null,\n          othIsUndef = other === undefined,\n          othIsReflexive = other === other;\n\n      if ((value > other && !othIsNull) || !valIsReflexive ||\n          (valIsNull && !othIsUndef && othIsReflexive) ||\n          (valIsUndef && othIsReflexive)) {\n        return 1;\n      }\n      if ((value < other && !valIsNull) || !othIsReflexive ||\n          (othIsNull && !valIsUndef && valIsReflexive) ||\n          (othIsUndef && valIsReflexive)) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromRight) {\n    var length = array.length,\n        index = fromRight ? length : -1;\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without support for binary searches.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    if (value !== value) {\n      return indexOfNaN(array, fromIndex);\n    }\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isFunction` without support for environments\n   * with incorrect `typeof` results.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n   */\n  function baseIsFunction(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value == 'function' || false;\n  }\n\n  /**\n   * Converts `value` to a string if it's not one. An empty string is returned\n   * for `null` or `undefined` values.\n   *\n   * @private\n   * @param {*} value The value to process.\n   * @returns {string} Returns the string.\n   */\n  function baseToString(value) {\n    return value == null ? '' : (value + '');\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the first character not found in `chars`.\n   */\n  function charsLeftIndex(string, chars) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last character\n   * of `string` that is not found in `chars`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @param {string} chars The characters to find.\n   * @returns {number} Returns the index of the last character not found in `chars`.\n   */\n  function charsRightIndex(string, chars) {\n    var index = string.length;\n\n    while (index-- && chars.indexOf(string.charAt(index)) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.sortBy` to compare transformed elements of a collection and stable\n   * sort them in ascending order.\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareAscending(object, other) {\n    return baseCompareAscending(object.criteria, other.criteria) || (object.index - other.index);\n  }\n\n  /**\n   * Used by `_.sortByOrder` to compare multiple properties of a value to another\n   * and stable sort them.\n   *\n   * If `orders` is unspecified, all valuess are sorted in ascending order. Otherwise,\n   * a value is sorted in ascending order if its corresponding order is \"asc\", and\n   * descending if \"desc\".\n   *\n   * @private\n   * @param {Object} object The object to compare.\n   * @param {Object} other The other object to compare.\n   * @param {boolean[]} orders The order to sort by for each property.\n   * @returns {number} Returns the sort order indicator for `object`.\n   */\n  function compareMultiple(object, other, orders) {\n    var index = -1,\n        objCriteria = object.criteria,\n        othCriteria = other.criteria,\n        length = objCriteria.length,\n        ordersLength = orders.length;\n\n    while (++index < length) {\n      var result = baseCompareAscending(objCriteria[index], othCriteria[index]);\n      if (result) {\n        if (index >= ordersLength) {\n          return result;\n        }\n        var order = orders[index];\n        return result * ((order === 'asc' || order === true) ? 1 : -1);\n      }\n    }\n    // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n    // that causes it, under certain circumstances, to provide the same value for\n    // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n    // for more details.\n    //\n    // This also ensures a stable sort in V8 and other engines.\n    // See https://code.google.com/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  }\n\n  /**\n   * Used by `_.deburr` to convert latin-1 supplementary letters to basic latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  function deburrLetter(letter) {\n    return deburredLetters[letter];\n  }\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeHtmlChar(chr) {\n    return htmlEscapes[chr];\n  }\n\n  /**\n   * Used by `_.escapeRegExp` to escape characters for inclusion in compiled regexes.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @param {string} leadingChar The capture group for a leading character.\n   * @param {string} whitespaceChar The capture group for a whitespace character.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeRegExpChar(chr, leadingChar, whitespaceChar) {\n    if (leadingChar) {\n      chr = regexpEscapes[chr];\n    } else if (whitespaceChar) {\n      chr = stringEscapes[chr];\n    }\n    return '\\\\' + chr;\n  }\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the index at which the first occurrence of `NaN` is found in `array`.\n   *\n   * @private\n   * @param {Array} array The array to search.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched `NaN`, else `-1`.\n   */\n  function indexOfNaN(array, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 0 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      var other = array[index];\n      if (other !== other) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if `value` is object-like.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n   */\n  function isObjectLike(value) {\n    return !!value && typeof value == 'object';\n  }\n\n  /**\n   * Used by `trimmedLeftIndex` and `trimmedRightIndex` to determine if a\n   * character code is whitespace.\n   *\n   * @private\n   * @param {number} charCode The character code to inspect.\n   * @returns {boolean} Returns `true` if `charCode` is whitespace, else `false`.\n   */\n  function isSpace(charCode) {\n    return ((charCode <= 160 && (charCode >= 9 && charCode <= 13) || charCode == 32 || charCode == 160) || charCode == 5760 || charCode == 6158 ||\n      (charCode >= 8192 && (charCode <= 8202 || charCode == 8232 || charCode == 8233 || charCode == 8239 || charCode == 8287 || charCode == 12288 || charCode == 65279)));\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      if (array[index] === placeholder) {\n        array[index] = PLACEHOLDER;\n        result[++resIndex] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * An implementation of `_.uniq` optimized for sorted arrays without support\n   * for callback shorthands and `this` binding.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} [iteratee] The function invoked per iteration.\n   * @returns {Array} Returns the new duplicate-value-free array.\n   */\n  function sortedUniq(array, iteratee) {\n    var seen,\n        index = -1,\n        length = array.length,\n        resIndex = -1,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index],\n          computed = iteratee ? iteratee(value, index, array) : value;\n\n      if (!index || seen !== computed) {\n        seen = computed;\n        result[++resIndex] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimLeft` to get the index of the first non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the first non-whitespace character.\n   */\n  function trimmedLeftIndex(string) {\n    var index = -1,\n        length = string.length;\n\n    while (++index < length && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimRight` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedRightIndex(string) {\n    var index = string.length;\n\n    while (index-- && isSpace(string.charCodeAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  function unescapeHtmlChar(chr) {\n    return htmlUnescapes[chr];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the given `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @category Utility\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // using `context` to mock `Date#getTime` use in `_.now`\n   * var mock = _.runInContext({\n   *   'Date': function() {\n   *     return { 'getTime': getTimeMock };\n   *   }\n   * });\n   *\n   * // or creating a suped-up `defer` in Node.js\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  function runInContext(context) {\n    // Avoid issues with some ES3 environments that attempt to use values, named\n    // after built-in constructors like `Object`, for the creation of literals.\n    // ES5 clears this up by stating that literals must use built-in constructors.\n    // See https://es5.github.io/#x11.1.5 for more details.\n    context = context ? _.defaults(root.Object(), context, _.pick(root, contextProps)) : root;\n\n    /** Native constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Number = context.Number,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for native method references. */\n    var arrayProto = Array.prototype,\n        objectProto = Object.prototype,\n        stringProto = String.prototype;\n\n    /** Used to resolve the decompiled source of functions. */\n    var fnToString = Function.prototype.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /**\n     * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var objToString = objectProto.toString;\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      fnToString.call(hasOwnProperty).replace(/[\\\\^$.*+?()[\\]{}|]/g, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Native method references. */\n    var ArrayBuffer = context.ArrayBuffer,\n        clearTimeout = context.clearTimeout,\n        parseFloat = context.parseFloat,\n        pow = Math.pow,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        Set = getNative(context, 'Set'),\n        setTimeout = context.setTimeout,\n        splice = arrayProto.splice,\n        Uint8Array = context.Uint8Array,\n        WeakMap = getNative(context, 'WeakMap');\n\n    /* Native method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeCreate = getNative(Object, 'create'),\n        nativeFloor = Math.floor,\n        nativeIsArray = getNative(Array, 'isArray'),\n        nativeIsFinite = context.isFinite,\n        nativeKeys = getNative(Object, 'keys'),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = getNative(Date, 'now'),\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random;\n\n    /** Used as references for `-Infinity` and `Infinity`. */\n    var NEGATIVE_INFINITY = Number.NEGATIVE_INFINITY,\n        POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\n\n    /** Used as references for the maximum length and index of an array. */\n    var MAX_ARRAY_LENGTH = 4294967295,\n        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n    /**\n     * Used as the [maximum length](http://ecma-international.org/ecma-262/6.0/#sec-number.max_safe_integer)\n     * of an array-like value.\n     */\n    var MAX_SAFE_INTEGER = 9007199254740991;\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\n     * Methods that operate on and return arrays, collections, and functions can\n     * be chained together. Methods that retrieve a single value or may return a\n     * primitive value will automatically end the chain returning the unwrapped\n     * value. Explicit chaining may be enabled using `_.chain`. The execution of\n     * chained methods is lazy, that is, execution is deferred until `_#value`\n     * is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\n     * fusion is an optimization strategy which merge iteratee calls; this can help\n     * to avoid the creation of intermediate data structures and greatly reduce the\n     * number of iteratee executions.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\n     * `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\n     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\n     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\n     * and `where`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\n     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\n     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defaultsDeep`,\n     * `defer`, `delay`, `difference`, `drop`, `dropRight`, `dropRightWhile`,\n     * `dropWhile`, `fill`, `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`,\n     * `forEach`, `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`,\n     * `functions`, `groupBy`, `indexBy`, `initial`, `intersection`, `invert`,\n     * `invoke`, `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`,\n     * `matchesProperty`, `memoize`, `merge`, `method`, `methodOf`, `mixin`,\n     * `modArgs`, `negate`, `omit`, `once`, `pairs`, `partial`, `partialRight`,\n     * `partition`, `pick`, `plant`, `pluck`, `property`, `propertyOf`, `pull`,\n     * `pullAt`, `push`, `range`, `rearg`, `reject`, `remove`, `rest`, `restParam`,\n     * `reverse`, `set`, `shuffle`, `slice`, `sort`, `sortBy`, `sortByAll`,\n     * `sortByOrder`, `splice`, `spread`, `take`, `takeRight`, `takeRightWhile`,\n     * `takeWhile`, `tap`, `throttle`, `thru`, `times`, `toArray`, `toPlainObject`,\n     * `transform`, `union`, `uniq`, `unshift`, `unzip`, `unzipWith`, `values`,\n     * `valuesIn`, `where`, `without`, `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clone`, `cloneDeep`,\n     * `deburr`, `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`,\n     * `findKey`, `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`,\n     * `floor`, `get`, `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`,\n     * `inRange`, `isArguments`, `isArray`, `isBoolean`, `isDate`, `isElement`,\n     * `isEmpty`, `isEqual`, `isError`, `isFinite` `isFunction`, `isMatch`,\n     * `isNative`, `isNaN`, `isNull`, `isNumber`, `isObject`, `isPlainObject`,\n     * `isRegExp`, `isString`, `isUndefined`, `isTypedArray`, `join`, `kebabCase`,\n     * `last`, `lastIndexOf`, `lt`, `lte`, `max`, `min`, `noConflict`, `noop`,\n     * `now`, `pad`, `padLeft`, `padRight`, `parseInt`, `pop`, `random`, `reduce`,\n     * `reduceRight`, `repeat`, `result`, `round`, `runInContext`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedLastIndex`, `startCase`,\n     * `startsWith`, `sum`, `template`, `trim`, `trimLeft`, `trimRight`, `trunc`,\n     * `unescape`, `uniqueId`, `value`, and `words`\n     *\n     * The wrapper method `sample` will return a wrapped value when `n` is provided,\n     * otherwise an unwrapped value is returned.\n     *\n     * @name _\n     * @constructor\n     * @category Chain\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // returns an unwrapped value\n     * wrapped.reduce(function(total, n) {\n     *   return total + n;\n     * });\n     * // => 6\n     *\n     * // returns a wrapped value\n     * var squares = wrapped.map(function(n) {\n     *   return n * n;\n     * });\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__chain__') && hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The function whose prototype all chaining wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable chaining for all wrapper methods.\n     * @param {Array} [actions=[]] Actions to peform to resolve the unwrapped value.\n     */\n    function LodashWrapper(value, chainAll, actions) {\n      this.__wrapped__ = value;\n      this.__actions__ = actions || [];\n      this.__chain__ = !!chainAll;\n    }\n\n    /**\n     * An object environment feature flags.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    var support = lodash.support = {};\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB). Change the following template settings to use\n     * alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type Object\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type RegExp\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type string\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type Object\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type Function\n         */\n        '_': lodash\n      }\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = POSITIVE_INFINITY;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = arrayCopy(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = arrayCopy(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = arrayCopy(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || arrLength < LARGE_ARRAY_SIZE || (arrLength == length && takeCount == length)) {\n        return baseWrapperValue((isRight && isArr) ? array.reverse() : array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a cache object to store key/value pairs.\n     *\n     * @private\n     * @static\n     * @name Cache\n     * @memberOf _.memoize\n     */\n    function MapCache() {\n      this.__data__ = {};\n    }\n\n    /**\n     * Removes `key` and its value from the cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed successfully, else `false`.\n     */\n    function mapDelete(key) {\n      return this.has(key) && delete this.__data__[key];\n    }\n\n    /**\n     * Gets the cached value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the cached value.\n     */\n    function mapGet(key) {\n      return key == '__proto__' ? undefined : this.__data__[key];\n    }\n\n    /**\n     * Checks if a cached value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapHas(key) {\n      return key != '__proto__' && hasOwnProperty.call(this.__data__, key);\n    }\n\n    /**\n     * Sets `value` to `key` of the cache.\n     *\n     * @private\n     * @name set\n     * @memberOf _.memoize.Cache\n     * @param {string} key The key of the value to cache.\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache object.\n     */\n    function mapSet(key, value) {\n      if (key != '__proto__') {\n        this.__data__[key] = value;\n      }\n      return this;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates a cache object to store unique values.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var length = values ? values.length : 0;\n\n      this.data = { 'hash': nativeCreate(null), 'set': new Set };\n      while (length--) {\n        this.push(values[length]);\n      }\n    }\n\n    /**\n     * Checks if `value` is in `cache` mimicking the return signature of\n     * `_.indexOf` by returning `0` if the value is found, else `-1`.\n     *\n     * @private\n     * @param {Object} cache The cache to search.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `0` if `value` is found, else `-1`.\n     */\n    function cacheIndexOf(cache, value) {\n      var data = cache.data,\n          result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\n\n      return result ? 0 : -1;\n    }\n\n    /**\n     * Adds `value` to the cache.\n     *\n     * @private\n     * @name push\n     * @memberOf SetCache\n     * @param {*} value The value to cache.\n     */\n    function cachePush(value) {\n      var data = this.data;\n      if (typeof value == 'string' || isObject(value)) {\n        data.set.add(value);\n      } else {\n        data.hash[value] = true;\n      }\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a new array joining `array` with `other`.\n     *\n     * @private\n     * @param {Array} array The array to join.\n     * @param {Array} other The other array to join.\n     * @returns {Array} Returns the new concatenated array.\n     */\n    function arrayConcat(array, other) {\n      var index = -1,\n          length = array.length,\n          othIndex = -1,\n          othLength = other.length,\n          result = Array(length + othLength);\n\n      while (++index < length) {\n        result[index] = array[index];\n      }\n      while (++othIndex < othLength) {\n        result[index++] = other[othIndex];\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayCopy(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEach` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEach(array, iteratee) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (iteratee(array[index], index, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.forEachRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayEachRight(array, iteratee) {\n      var length = array.length;\n\n      while (length--) {\n        if (iteratee(array[length], length, array) === false) {\n          break;\n        }\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.every` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     */\n    function arrayEvery(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (!predicate(array[index], index, array)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseExtremum` for arrays which invokes `iteratee`\n     * with one argument: (value).\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function arrayExtremum(array, iteratee, comparator, exValue) {\n      var index = -1,\n          length = array.length,\n          computed = exValue,\n          result = computed;\n\n      while (++index < length) {\n        var value = array[index],\n            current = +iteratee(value);\n\n        if (comparator(current, computed)) {\n          computed = current;\n          result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.filter` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function arrayFilter(array, predicate) {\n      var index = -1,\n          length = array.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.map` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function arrayMap(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = iteratee(array[index], index, array);\n      }\n      return result;\n    }\n\n    /**\n     * Appends the elements of `values` to `array`.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to append.\n     * @returns {Array} Returns `array`.\n     */\n    function arrayPush(array, values) {\n      var index = -1,\n          length = values.length,\n          offset = array.length;\n\n      while (++index < length) {\n        array[offset + index] = values[index];\n      }\n      return array;\n    }\n\n    /**\n     * A specialized version of `_.reduce` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the first element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduce(array, iteratee, accumulator, initFromArray) {\n      var index = -1,\n          length = array.length;\n\n      if (initFromArray && length) {\n        accumulator = array[++index];\n      }\n      while (++index < length) {\n        accumulator = iteratee(accumulator, array[index], index, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.reduceRight` for arrays without support for\n     * callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {boolean} [initFromArray] Specify using the last element of `array`\n     *  as the initial value.\n     * @returns {*} Returns the accumulated value.\n     */\n    function arrayReduceRight(array, iteratee, accumulator, initFromArray) {\n      var length = array.length;\n      if (initFromArray && length) {\n        accumulator = array[--length];\n      }\n      while (length--) {\n        accumulator = iteratee(accumulator, array[length], length, array);\n      }\n      return accumulator;\n    }\n\n    /**\n     * A specialized version of `_.some` for arrays without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function arraySome(array, predicate) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        if (predicate(array[index], index, array)) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `_.sum` for arrays without support for callback\n     * shorthands and `this` binding..\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function arraySum(array, iteratee) {\n      var length = array.length,\n          result = 0;\n\n      while (length--) {\n        result += +iteratee(array[length]) || 0;\n      }\n      return result;\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assign` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : objectValue;\n    }\n\n    /**\n     * Used by `_.template` to customize its `_.assign` use.\n     *\n     * **Note:** This function is like `assignDefaults` except that it ignores\n     * inherited property values when checking if a property is `undefined`.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @param {string} key The key associated with the object and source values.\n     * @param {Object} object The destination object.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function assignOwnDefaults(objectValue, sourceValue, key, object) {\n      return (objectValue === undefined || !hasOwnProperty.call(object, key))\n        ? sourceValue\n        : objectValue;\n    }\n\n    /**\n     * A specialized version of `_.assign` for customizing assigned values without\n     * support for argument juggling, multiple sources, and `this` binding `customizer`\n     * functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     */\n    function assignWith(object, source, customizer) {\n      var index = -1,\n          props = keys(source),\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key],\n            result = customizer(value, source[key], key, object, source);\n\n        if ((result === result ? (result !== value) : (value === value)) ||\n            (value === undefined && !(key in object))) {\n          object[key] = result;\n        }\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for argument juggling,\n     * multiple sources, and `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return source == null\n        ? object\n        : baseCopy(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.at` without support for string collections\n     * and individual key arguments.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {number[]|string[]} props The property names or indexes of elements to pick.\n     * @returns {Array} Returns the new array of picked elements.\n     */\n    function baseAt(collection, props) {\n      var index = -1,\n          isNil = collection == null,\n          isArr = !isNil && isArrayLike(collection),\n          length = isArr ? collection.length : 0,\n          propsLength = props.length,\n          result = Array(propsLength);\n\n      while(++index < propsLength) {\n        var key = props[index];\n        if (isArr) {\n          result[index] = isIndex(key, length) ? collection[key] : undefined;\n        } else {\n          result[index] = isNil ? undefined : collection[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property names to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @returns {Object} Returns `object`.\n     */\n    function baseCopy(source, props, object) {\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n        object[key] = source[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `_.callback` which supports specifying the\n     * number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function baseCallback(func, thisArg, argCount) {\n      var type = typeof func;\n      if (type == 'function') {\n        return thisArg === undefined\n          ? func\n          : bindCallback(func, thisArg, argCount);\n      }\n      if (func == null) {\n        return identity;\n      }\n      if (type == 'object') {\n        return baseMatches(func);\n      }\n      return thisArg === undefined\n        ? property(func)\n        : baseMatchesProperty(func, thisArg);\n    }\n\n    /**\n     * The base implementation of `_.clone` without support for argument juggling\n     * and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The object `value` belongs to.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates clones with source counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\n      var result;\n      if (customizer) {\n        result = object ? customizer(value, key, object) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return arrayCopy(value, result);\n        }\n      } else {\n        var tag = objToString.call(value),\n            isFunc = tag == funcTag;\n\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = initCloneObject(isFunc ? {} : value);\n          if (!isDeep) {\n            return baseAssign(result, value);\n          }\n        } else {\n          return cloneableTags[tag]\n            ? initCloneByTag(value, tag, isDeep)\n            : (object ? value : {});\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == value) {\n          return stackB[length];\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate it with its clone.\n      stackA.push(value);\n      stackB.push(result);\n\n      // Recursively populate clone (susceptible to call stack limits).\n      (isArr ? arrayEach : baseForOwn)(value, function(subValue, key) {\n        result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} prototype The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(prototype) {\n        if (isObject(prototype)) {\n          object.prototype = prototype;\n          var result = new object;\n          object.prototype = undefined;\n        }\n        return result || {};\n      };\n    }());\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts an index\n     * of where to slice the arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Object} args The arguments provide to `func`.\n     * @returns {number} Returns the timer id.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of `_.difference` which accepts a single array\n     * of values to exclude.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values) {\n      var length = array ? array.length : 0,\n          result = [];\n\n      if (!length) {\n        return result;\n      }\n      var index = -1,\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          cache = (isCommon && values.length >= LARGE_ARRAY_SIZE) ? createCache(values) : null,\n          valuesLength = values.length;\n\n      if (cache) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n        values = cache;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index];\n\n        if (isCommon && value === value) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === value) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (indexOf(values, value, 0) < 0) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object|string} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * Gets the extremum value of `collection` invoking `iteratee` for each value\n     * in `collection` to generate the criterion by which the value is ranked.\n     * The `iteratee` is invoked with three arguments: (value, index|key, collection).\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(collection, iteratee, comparator, exValue) {\n      var computed = exValue,\n          result = computed;\n\n      baseEach(collection, function(value, index, collection) {\n        var current = +iteratee(value, index, collection);\n        if (comparator(current, computed) || (current === exValue && current === result)) {\n          computed = current;\n          result = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : (end >>> 0);\n      start >>>= 0;\n\n      while (start < length) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\n     * without support for callback shorthands and `this` binding, which iterates\n     * over `collection` using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @param {boolean} [retKey] Specify returning the key of the found element\n     *  instead of the element itself.\n     * @returns {*} Returns the found element or its key, else `undefined`.\n     */\n    function baseFind(collection, predicate, eachFunc, retKey) {\n      var result;\n      eachFunc(collection, function(value, key, collection) {\n        if (predicate(value, key, collection)) {\n          result = retKey ? key : value;\n          return false;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with added support for restricting\n     * flattening and specifying the start index.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, isDeep, isStrict, result) {\n      result || (result = []);\n\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index];\n        if (isObjectLike(value) && isArrayLike(value) &&\n            (isStrict || isArray(value) || isArguments(value))) {\n          if (isDeep) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, isDeep, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForIn` and `baseForOwn` which iterates\n     * over `object` properties returned by `keysFunc` invoking `iteratee` for\n     * each property. Iteratee functions may exit iteration early by explicitly\n     * returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forIn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForIn(object, iteratee) {\n      return baseFor(object, iteratee, keysIn);\n    }\n\n    /**\n     * The base implementation of `_.forOwn` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from those provided.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the new array of filtered property names.\n     */\n    function baseFunctions(object, props) {\n      var index = -1,\n          length = props.length,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var key = props[index];\n        if (isFunction(object[key])) {\n          result[++resIndex] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `get` without support for string paths\n     * and default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path of the property to get.\n     * @param {string} [pathKey] The key representation of path.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path, pathKey) {\n      if (object == null) {\n        return;\n      }\n      if (pathKey !== undefined && pathKey in toObject(object)) {\n        path = [pathKey];\n      }\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[path[index++]];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` without support for `this` binding\n     * `customizer` functions.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\n     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = arrayTag,\n          othTag = arrayTag;\n\n      if (!objIsArr) {\n        objTag = objToString.call(object);\n        if (objTag == argsTag) {\n          objTag = objectTag;\n        } else if (objTag != objectTag) {\n          objIsArr = isTypedArray(object);\n        }\n      }\n      if (!othIsArr) {\n        othTag = objToString.call(other);\n        if (othTag == argsTag) {\n          othTag = objectTag;\n        } else if (othTag != objectTag) {\n          othIsArr = isTypedArray(other);\n        }\n      }\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && !(objIsArr || objIsObj)) {\n        return equalByTag(object, other, objTag);\n      }\n      if (!isLoose) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      // For more information on detecting circular references see https://es5.github.io/#JO.\n      stackA || (stackA = []);\n      stackB || (stackB = []);\n\n      var length = stackA.length;\n      while (length--) {\n        if (stackA[length] == object) {\n          return stackB[length] == other;\n        }\n      }\n      // Add `object` and `other` to the stack of traversed objects.\n      stackA.push(object);\n      stackB.push(other);\n\n      var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\n\n      stackA.pop();\n      stackB.pop();\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for callback\n     * shorthands and `this` binding.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} matchData The propery names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparing objects.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = toObject(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var result = customizer ? customizer(objValue, srcValue, key) : undefined;\n          if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which does not clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        var key = matchData[0][0],\n            value = matchData[0][1];\n\n        return function(object) {\n          if (object == null) {\n            return false;\n          }\n          return object[key] === value && (value !== undefined || (key in toObject(object)));\n        };\n      }\n      return function(object) {\n        return baseIsMatch(object, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to compare.\n     * @returns {Function} Returns the new function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      var isArr = isArray(path),\n          isCommon = isKey(path) && isStrictComparable(srcValue),\n          pathKey = (path + '');\n\n      path = toPath(path);\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        var key = pathKey;\n        object = toObject(object);\n        if ((isArr || !isCommon) && !(key in object)) {\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          if (object == null) {\n            return false;\n          }\n          key = last(path);\n          object = toObject(object);\n        }\n        return object[key] === srcValue\n          ? (srcValue !== undefined || (key in object))\n          : baseIsEqual(srcValue, object[key], undefined, true);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for argument juggling,\n     * multiple sources, and `this` binding `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {Object} Returns `object`.\n     */\n    function baseMerge(object, source, customizer, stackA, stackB) {\n      if (!isObject(object)) {\n        return object;\n      }\n      var isSrcArr = isArrayLike(source) && (isArray(source) || isTypedArray(source)),\n          props = isSrcArr ? undefined : keys(source);\n\n      arrayEach(props || source, function(srcValue, key) {\n        if (props) {\n          key = srcValue;\n          srcValue = source[key];\n        }\n        if (isObjectLike(srcValue)) {\n          stackA || (stackA = []);\n          stackB || (stackB = []);\n          baseMergeDeep(object, source, key, baseMerge, customizer, stackA, stackB);\n        }\n        else {\n          var value = object[key],\n              result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n              isCommon = result === undefined;\n\n          if (isCommon) {\n            result = srcValue;\n          }\n          if ((result !== undefined || (isSrcArr && !(key in object))) &&\n              (isCommon || (result === result ? (result !== value) : (value === value)))) {\n            object[key] = result;\n          }\n        }\n      });\n      return object;\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Array} [stackA=[]] Tracks traversed source objects.\n     * @param {Array} [stackB=[]] Associates values with source counterparts.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseMergeDeep(object, source, key, mergeFunc, customizer, stackA, stackB) {\n      var length = stackA.length,\n          srcValue = source[key];\n\n      while (length--) {\n        if (stackA[length] == srcValue) {\n          object[key] = stackB[length];\n          return;\n        }\n      }\n      var value = object[key],\n          result = customizer ? customizer(value, srcValue, key, object, source) : undefined,\n          isCommon = result === undefined;\n\n      if (isCommon) {\n        result = srcValue;\n        if (isArrayLike(srcValue) && (isArray(srcValue) || isTypedArray(srcValue))) {\n          result = isArray(value)\n            ? value\n            : (isArrayLike(value) ? arrayCopy(value) : []);\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          result = isArguments(value)\n            ? toPlainObject(value)\n            : (isPlainObject(value) ? value : {});\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      // Add the source value to the stack of traversed objects and associate\n      // it with its merged value.\n      stackA.push(srcValue);\n      stackB.push(result);\n\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        object[key] = mergeFunc(result, srcValue, customizer, stackA, stackB);\n      } else if (result === result ? (result !== value) : (value === value)) {\n        object[key] = result;\n      }\n    }\n\n    /**\n     * The base implementation of `_.property` without support for deep paths.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function baseProperty(key) {\n      return function(object) {\n        return object == null ? undefined : object[key];\n      };\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     */\n    function basePropertyDeep(path) {\n      var pathKey = (path + '');\n      path = toPath(path);\n      return function(object) {\n        return baseGet(object, path, pathKey);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * index arguments and capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0;\n      while (length--) {\n        var index = indexes[length];\n        if (index != previous && isIndex(index)) {\n          var previous = index;\n          splice.call(array, index, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for argument juggling\n     * and returning floating-point numbers.\n     *\n     * @private\n     * @param {number} min The minimum possible value.\n     * @param {number} max The maximum possible value.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(min, max) {\n      return min + nativeFloor(nativeRandom() * (max - min + 1));\n    }\n\n    /**\n     * The base implementation of `_.reduce` and `_.reduceRight` without support\n     * for callback shorthands and `this` binding, which iterates over `collection`\n     * using the provided `eachFunc`.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {*} accumulator The initial value.\n     * @param {boolean} initFromCollection Specify using the first or last element\n     *  of `collection` as the initial value.\n     * @param {Function} eachFunc The function to iterate over `collection`.\n     * @returns {*} Returns the accumulated value.\n     */\n    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\n      eachFunc(collection, function(value, index, collection) {\n        accumulator = initFromCollection\n          ? (initFromCollection = false, value)\n          : iteratee(accumulator, value, index, collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop detection.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      start = start == null ? 0 : (+start || 0);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : (+end || 0);\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortBy` which uses `comparer` to define\n     * the sort order of `array` and replaces criteria objects with their\n     * corresponding values.\n     *\n     * @private\n     * @param {Array} array The array to sort.\n     * @param {Function} comparer The function to define sort order.\n     * @returns {Array} Returns `array`.\n     */\n    function baseSortBy(array, comparer) {\n      var length = array.length;\n\n      array.sort(comparer);\n      while (length--) {\n        array[length] = array[length].value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.sortByOrder` without param guards.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseSortByOrder(collection, iteratees, orders) {\n      var callback = getCallback(),\n          index = -1;\n\n      iteratees = arrayMap(iteratees, function(iteratee) { return callback(iteratee); });\n\n      var result = baseMap(collection, function(value) {\n        var criteria = arrayMap(iteratees, function(iteratee) { return iteratee(value); });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.sum` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {number} Returns the sum.\n     */\n    function baseSum(collection, iteratee) {\n      var result = 0;\n      baseEach(collection, function(value, index, collection) {\n        result += +iteratee(value, index, collection) || 0;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.uniq` without support for callback shorthands\n     * and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The function invoked per iteration.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     */\n    function baseUniq(array, iteratee) {\n      var index = -1,\n          indexOf = getIndexOf(),\n          length = array.length,\n          isCommon = indexOf == baseIndexOf,\n          isLarge = isCommon && length >= LARGE_ARRAY_SIZE,\n          seen = isLarge ? createCache() : null,\n          result = [];\n\n      if (seen) {\n        indexOf = cacheIndexOf;\n        isCommon = false;\n      } else {\n        isLarge = false;\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value, index, array) : value;\n\n        if (isCommon && value === value) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (indexOf(seen, computed, 0) < 0) {\n          if (iteratee || isLarge) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.values` and `_.valuesIn` which creates an\n     * array of `object` property values corresponding to the property names\n     * of `props`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} props The property names to get values for.\n     * @returns {Object} Returns the array of property values.\n     */\n    function baseValues(object, props) {\n      var index = -1,\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = object[props[index]];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.dropRightWhile`, `_.dropWhile`, `_.takeRightWhile`,\n     * and `_.takeWhile` without support for callback shorthands and `this` binding.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) && predicate(array[index], index, array)) {}\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to peform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      var index = -1,\n          length = actions.length;\n\n      while (++index < length) {\n        var action = actions[index];\n        result = action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }\n      return result;\n    }\n\n    /**\n     * Performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndex(array, value, retHighest) {\n      var low = 0,\n          high = array ? array.length : low;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return binaryIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * This function is like `binaryIndex` except that it invokes `iteratee` for\n     * `value` and each element of `array` to compute their sort ranking. The\n     * iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function binaryIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array ? array.length : 0,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsUndef = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            isDef = computed !== undefined,\n            isReflexive = computed === computed;\n\n        if (valIsNaN) {\n          var setLow = isReflexive || retHighest;\n        } else if (valIsNull) {\n          setLow = isReflexive && isDef && (retHighest || computed != null);\n        } else if (valIsUndef) {\n          setLow = isReflexive && (retHighest || isDef);\n        } else if (computed == null) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * A specialized version of `baseCallback` which only supports `this` binding\n     * and specifying the number of arguments to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {number} [argCount] The number of arguments to provide to `func`.\n     * @returns {Function} Returns the callback.\n     */\n    function bindCallback(func, thisArg, argCount) {\n      if (typeof func != 'function') {\n        return identity;\n      }\n      if (thisArg === undefined) {\n        return func;\n      }\n      switch (argCount) {\n        case 1: return function(value) {\n          return func.call(thisArg, value);\n        };\n        case 3: return function(value, index, collection) {\n          return func.call(thisArg, value, index, collection);\n        };\n        case 4: return function(accumulator, value, index, collection) {\n          return func.call(thisArg, accumulator, value, index, collection);\n        };\n        case 5: return function(value, other, key, object, source) {\n          return func.call(thisArg, value, other, key, object, source);\n        };\n      }\n      return function() {\n        return func.apply(thisArg, arguments);\n      };\n    }\n\n    /**\n     * Creates a clone of the given array buffer.\n     *\n     * @private\n     * @param {ArrayBuffer} buffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function bufferClone(buffer) {\n      var result = new ArrayBuffer(buffer.byteLength),\n          view = new Uint8Array(result);\n\n      view.set(new Uint8Array(buffer));\n      return result;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders) {\n      var holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          leftIndex = -1,\n          leftLength = partials.length,\n          result = Array(leftLength + argsLength);\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        result[holders[argsIndex]] = args[argsIndex];\n      }\n      while (argsLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array|Object} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders) {\n      var holdersIndex = -1,\n          holdersLength = holders.length,\n          argsIndex = -1,\n          argsLength = nativeMax(args.length - holdersLength, 0),\n          rightIndex = -1,\n          rightLength = partials.length,\n          result = Array(argsLength + rightLength);\n\n      while (++argsIndex < argsLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        result[offset + holders[holdersIndex]] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * Creates a `_.countBy`, `_.groupBy`, `_.indexBy`, or `_.partition` function.\n     *\n     * @private\n     * @param {Function} setter The function to set keys and values of the accumulator object.\n     * @param {Function} [initializer] The function to initialize the accumulator object.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee, thisArg) {\n        var result = initializer ? initializer() : {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        if (isArray(collection)) {\n          var index = -1,\n              length = collection.length;\n\n          while (++index < length) {\n            var value = collection[index];\n            setter(result, value, iteratee(value, index, collection), collection);\n          }\n        } else {\n          baseEach(collection, function(value, key, collection) {\n            setter(result, value, iteratee(value, key, collection), collection);\n          });\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a `_.assign`, `_.defaults`, or `_.merge` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return restParam(function(object, sources) {\n        var index = -1,\n            length = object == null ? 0 : sources.length,\n            customizer = length > 2 ? sources[length - 2] : undefined,\n            guard = length > 2 ? sources[2] : undefined,\n            thisArg = length > 1 ? sources[length - 1] : undefined;\n\n        if (typeof customizer == 'function') {\n          customizer = bindCallback(customizer, thisArg, 5);\n          length -= 2;\n        } else {\n          customizer = typeof thisArg == 'function' ? thisArg : undefined;\n          length -= (customizer ? 1 : 0);\n        }\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        var length = collection ? getLength(collection) : 0;\n        if (!isLength(length)) {\n          return eachFunc(collection, iteratee);\n        }\n        var index = fromRight ? length : -1,\n            iterable = toObject(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var iterable = toObject(object),\n            props = keysFunc(object),\n            length = props.length,\n            index = fromRight ? length : -1;\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var key = props[index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to bind.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createBindWrapper(func, thisArg) {\n      var Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(thisArg, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `Set` cache object to optimize linear searches of large arrays.\n     *\n     * @private\n     * @param {Array} [values] The values to cache.\n     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\n     */\n    function createCache(values) {\n      return (nativeCreate && Set) ? new SetCache(values) : null;\n    }\n\n    /**\n     * Creates a function that produces compound words out of the words in a\n     * given string.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        var index = -1,\n            array = words(deburr(string)),\n            length = array.length,\n            result = '';\n\n        while (++index < length) {\n          result = callback(result, array[index], index);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtorWrapper(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors.\n        // See http://ecma-international.org/ecma-262/6.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a `_.curry` or `_.curryRight` function.\n     *\n     * @private\n     * @param {boolean} flag The curry bit flag.\n     * @returns {Function} Returns the new curry function.\n     */\n    function createCurry(flag) {\n      function curryFunc(func, arity, guard) {\n        if (guard && isIterateeCall(func, arity, guard)) {\n          arity = undefined;\n        }\n        var result = createWrapper(func, flag, undefined, undefined, undefined, undefined, undefined, arity);\n        result.placeholder = curryFunc.placeholder;\n        return result;\n      }\n      return curryFunc;\n    }\n\n    /**\n     * Creates a `_.defaults` or `_.defaultsDeep` function.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Function} Returns the new defaults function.\n     */\n    function createDefaults(assigner, customizer) {\n      return restParam(function(args) {\n        var object = args[0];\n        if (object == null) {\n          return object;\n        }\n        args.push(customizer);\n        return assigner.apply(undefined, args);\n      });\n    }\n\n    /**\n     * Creates a `_.max` or `_.min` function.\n     *\n     * @private\n     * @param {Function} comparator The function used to compare values.\n     * @param {*} exValue The initial extremum value.\n     * @returns {Function} Returns the new extremum function.\n     */\n    function createExtremum(comparator, exValue) {\n      return function(collection, iteratee, thisArg) {\n        if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n          iteratee = undefined;\n        }\n        iteratee = getCallback(iteratee, thisArg, 3);\n        if (iteratee.length == 1) {\n          collection = isArray(collection) ? collection : toIterable(collection);\n          var result = arrayExtremum(collection, iteratee, comparator, exValue);\n          if (!(collection.length && result === exValue)) {\n            return result;\n          }\n        }\n        return baseExtremum(collection, iteratee, comparator, exValue);\n      };\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(eachFunc, fromRight) {\n      return function(collection, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        if (isArray(collection)) {\n          var index = baseFindIndex(collection, predicate, fromRight);\n          return index > -1 ? collection[index] : undefined;\n        }\n        return baseFind(collection, predicate, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a `_.findIndex` or `_.findLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindIndex(fromRight) {\n      return function(array, predicate, thisArg) {\n        if (!(array && array.length)) {\n          return -1;\n        }\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFindIndex(array, predicate, fromRight);\n      };\n    }\n\n    /**\n     * Creates a `_.findKey` or `_.findLastKey` function.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFindKey(objectFunc) {\n      return function(object, predicate, thisArg) {\n        predicate = getCallback(predicate, thisArg, 3);\n        return baseFind(object, predicate, objectFunc, true);\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return function() {\n        var wrapper,\n            length = arguments.length,\n            index = fromRight ? length : -1,\n            leftIndex = 0,\n            funcs = Array(length);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          var func = funcs[leftIndex++] = arguments[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (!wrapper && LodashWrapper.prototype.thru && getFuncName(func) == 'wrapper') {\n            wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? -1 : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) && data[1] == (ARY_FLAG | CURRY_FLAG | PARTIAL_FLAG | REARG_FLAG) && !data[4].length && data[9] == 1) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func)) ? wrapper[funcName]() : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value) && value.length >= LARGE_ARRAY_SIZE) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      };\n    }\n\n    /**\n     * Creates a function for `_.forEach` or `_.forEachRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForEach(arrayFunc, eachFunc) {\n      return function(collection, iteratee, thisArg) {\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee)\n          : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\n      };\n    }\n\n    /**\n     * Creates a function for `_.forIn` or `_.forInRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForIn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee, keysIn);\n      };\n    }\n\n    /**\n     * Creates a function for `_.forOwn` or `_.forOwnRight`.\n     *\n     * @private\n     * @param {Function} objectFunc The function to iterate over an object.\n     * @returns {Function} Returns the new each function.\n     */\n    function createForOwn(objectFunc) {\n      return function(object, iteratee, thisArg) {\n        if (typeof iteratee != 'function' || thisArg !== undefined) {\n          iteratee = bindCallback(iteratee, thisArg, 3);\n        }\n        return objectFunc(object, iteratee);\n      };\n    }\n\n    /**\n     * Creates a function for `_.mapKeys` or `_.mapValues`.\n     *\n     * @private\n     * @param {boolean} [isMapKeys] Specify mapping keys instead of values.\n     * @returns {Function} Returns the new map function.\n     */\n    function createObjectMapper(isMapKeys) {\n      return function(object, iteratee, thisArg) {\n        var result = {};\n        iteratee = getCallback(iteratee, thisArg, 3);\n\n        baseForOwn(object, function(value, key, object) {\n          var mapped = iteratee(value, key, object);\n          key = isMapKeys ? mapped : key;\n          value = isMapKeys ? value : mapped;\n          result[key] = value;\n        });\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function for `_.padLeft` or `_.padRight`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify padding from the right.\n     * @returns {Function} Returns the new pad function.\n     */\n    function createPadDir(fromRight) {\n      return function(string, length, chars) {\n        string = baseToString(string);\n        return (fromRight ? string : '') + createPadding(string, length, chars) + (fromRight ? '' : string);\n      };\n    }\n\n    /**\n     * Creates a `_.partial` or `_.partialRight` function.\n     *\n     * @private\n     * @param {boolean} flag The partial bit flag.\n     * @returns {Function} Returns the new partial function.\n     */\n    function createPartial(flag) {\n      var partialFunc = restParam(function(func, partials) {\n        var holders = replaceHolders(partials, partialFunc.placeholder);\n        return createWrapper(func, flag, undefined, partials, holders);\n      });\n      return partialFunc;\n    }\n\n    /**\n     * Creates a function for `_.reduce` or `_.reduceRight`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over an array.\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @returns {Function} Returns the new each function.\n     */\n    function createReduce(arrayFunc, eachFunc) {\n      return function(collection, iteratee, accumulator, thisArg) {\n        var initFromArray = arguments.length < 3;\n        return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\n          ? arrayFunc(collection, iteratee, accumulator, initFromArray)\n          : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with optional `this`\n     * binding of, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & ARY_FLAG,\n          isBind = bitmask & BIND_FLAG,\n          isBindKey = bitmask & BIND_KEY_FLAG,\n          isCurry = bitmask & CURRY_FLAG,\n          isCurryBound = bitmask & CURRY_BOUND_FLAG,\n          isCurryRight = bitmask & CURRY_RIGHT_FLAG,\n          Ctor = isBindKey ? undefined : createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it to other functions.\n        var length = arguments.length,\n            index = length,\n            args = Array(length);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight);\n        }\n        if (isCurry || isCurryRight) {\n          var placeholder = wrapper.placeholder,\n              argsHolders = replaceHolders(args, placeholder);\n\n          length -= argsHolders.length;\n          if (length < arity) {\n            var newArgPos = argPos ? arrayCopy(argPos) : undefined,\n                newArity = nativeMax(arity - length, 0),\n                newsHolders = isCurry ? argsHolders : undefined,\n                newHoldersRight = isCurry ? undefined : argsHolders,\n                newPartials = isCurry ? args : undefined,\n                newPartialsRight = isCurry ? undefined : args;\n\n            bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\n            bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\n\n            if (!isCurryBound) {\n              bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\n            }\n            var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\n                result = createHybridWrapper.apply(undefined, newData);\n\n            if (isLaziable(func)) {\n              setData(result, newData);\n            }\n            result.placeholder = placeholder;\n            return result;\n          }\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        if (argPos) {\n          args = reorder(args, argPos);\n        }\n        if (isAry && ary < args.length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtorWrapper(func);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates the padding required for `string` based on the given `length`.\n     * The `chars` string is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {string} string The string to create padding for.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the pad for `string`.\n     */\n    function createPadding(string, length, chars) {\n      var strLength = string.length;\n      length = +length;\n\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return '';\n      }\n      var padLength = length - strLength;\n      chars = chars == null ? ' ' : (chars + '');\n      return repeat(chars, nativeCeil(padLength / chars.length)).slice(0, padLength);\n    }\n\n    /**\n     * Creates a function that wraps `func` and invokes it with the optional `this`\n     * binding of `thisArg` and the `partials` prepended to those provided to\n     * the wrapper.\n     *\n     * @private\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to the new function.\n     * @returns {Function} Returns the new bound function.\n     */\n    function createPartialWrapper(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & BIND_FLAG,\n          Ctor = createCtorWrapper(func);\n\n      function wrapper() {\n        // Avoid `arguments` object use disqualifying optimizations by\n        // converting it to an array before providing it `func`.\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength);\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.ceil`, `_.floor`, or `_.round` function.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        precision = precision === undefined ? 0 : (+precision || 0);\n        if (precision) {\n          precision = pow(10, precision);\n          return func(number * precision) / precision;\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a `_.sortedIndex` or `_.sortedLastIndex` function.\n     *\n     * @private\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {Function} Returns the new index function.\n     */\n    function createSortedIndex(retHighest) {\n      return function(array, value, iteratee, thisArg) {\n        var callback = getCallback(iteratee);\n        return (iteratee == null && callback === baseCallback)\n          ? binaryIndex(array, value, retHighest)\n          : binaryIndexBy(array, value, callback(iteratee, thisArg, 1), retHighest);\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to reference.\n     * @param {number} bitmask The bitmask of flags.\n     *  The bitmask may be composed of the following flags:\n     *     1 - `_.bind`\n     *     2 - `_.bindKey`\n     *     4 - `_.curry` or `_.curryRight` of a bound function\n     *     8 - `_.curry`\n     *    16 - `_.curryRight`\n     *    32 - `_.partial`\n     *    64 - `_.partialRight`\n     *   128 - `_.rearg`\n     *   256 - `_.ary`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      length -= (holders ? holders.length : 0);\n      if (bitmask & PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func),\n          newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\n\n      if (data) {\n        mergeData(newData, data);\n        bitmask = newData[1];\n        arity = newData[9];\n      }\n      newData[9] = arity == null\n        ? (isBindKey ? 0 : func.length)\n        : (nativeMax(arity - length, 0) || 0);\n\n      if (bitmask == BIND_FLAG) {\n        var result = createBindWrapper(newData[0], newData[2]);\n      } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\n        result = createPartialWrapper.apply(undefined, newData);\n      } else {\n        result = createHybridWrapper.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setter(result, newData);\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing arrays.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var index = -1,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\n        return false;\n      }\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index],\n            result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\n\n        if (result !== undefined) {\n          if (result) {\n            continue;\n          }\n          return false;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (isLoose) {\n          if (!arraySome(other, function(othValue) {\n                return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\n              })) {\n            return false;\n          }\n        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag) {\n      switch (tag) {\n        case boolTag:\n        case dateTag:\n          // Coerce dates and booleans to numbers, dates to milliseconds and booleans\n          // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\n          return +object == +other;\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case numberTag:\n          // Treat `NaN` vs. `NaN` as equal.\n          return (object != +object)\n            ? other != +other\n            : object == +other;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings primitives and string\n          // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\n          return object == (other + '');\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Function} [customizer] The function to customize comparing values.\n     * @param {boolean} [isLoose] Specify performing partial comparisons.\n     * @param {Array} [stackA] Tracks traversed `value` objects.\n     * @param {Array} [stackB] Tracks traversed `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\n      var objProps = keys(object),\n          objLength = objProps.length,\n          othProps = keys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isLoose) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      var skipCtor = isLoose;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key],\n            result = customizer ? customizer(isLoose ? othValue : objValue, isLoose? objValue : othValue, key) : undefined;\n\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\n          return false;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (!skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Gets the appropriate \"callback\" function. If the `_.callback` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseCallback` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getCallback(func, thisArg, argCount) {\n      var result = lodash.callback || callback;\n      result = result === callback ? baseCallback : result;\n      return argCount ? result(func, thisArg, argCount) : result;\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = func.name,\n          array = realNames[result],\n          length = array ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the appropriate \"indexOf\" function. If the `_.indexOf` method is\n     * customized this function returns the custom method, otherwise it returns\n     * the `baseIndexOf` function. If arguments are provided the chosen function\n     * is invoked with them and its result is returned.\n     *\n     * @private\n     * @returns {Function|number} Returns the chosen function or its result.\n     */\n    function getIndexOf(collection, target, fromIndex) {\n      var result = lodash.indexOf || indexOf;\n      result = result === indexOf ? baseIndexOf : result;\n      return collection ? result(collection, target, fromIndex) : result;\n    }\n\n    /**\n     * Gets the \"length\" property value of `object`.\n     *\n     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\n     * that affects Safari on at least iOS 8.1-8.3 ARM64.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {*} Returns the \"length\" value.\n     */\n    var getLength = baseProperty('length');\n\n    /**\n     * Gets the propery names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = pairs(object),\n          length = result.length;\n\n      while (length--) {\n        result[length][2] = isStrictComparable(result[length][1]);\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = object == null ? undefined : object[key];\n      return isNative(value) ? value : undefined;\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add array properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      var Ctor = object.constructor;\n      if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\n        Ctor = Object;\n      }\n      return new Ctor;\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return bufferClone(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          var buffer = object.buffer;\n          return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          var result = new Ctor(object.source, reFlags.exec(object));\n          result.lastIndex = object.lastIndex;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the method at `path` on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function invokePath(object, path, args) {\n      if (object != null && !isKey(path, object)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        path = last(path);\n      }\n      var func = object == null ? object : object[path];\n      return func == null ? undefined : func.apply(object, args);\n    }\n\n    /**\n     * Checks if `value` is array-like.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(getLength(value));\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return value > -1 && value % 1 == 0 && value < length;\n    }\n\n    /**\n     * Checks if the provided arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n          ? (isArrayLike(object) && isIndex(index, object.length))\n          : (type == 'string' && index in object)) {\n        var other = object[index];\n        return value === value ? (value === other) : (other !== other);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      var type = typeof value;\n      if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\n        return true;\n      }\n      if (isArray(value)) {\n        return false;\n      }\n      var result = !reIsDeepProp.test(value);\n      return result || (object != null && value in toObject(object));\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func);\n      if (!(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      var other = lodash[funcName];\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This function is based on [`ToLength`](http://ecma-international.org/ecma-262/6.0/#sec-tolength).\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     */\n    function isLength(value) {\n      return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers required to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\n     * augment function arguments, making the order in which they are executed important,\n     * preventing the merging of metadata. However, we make an exception for a safe\n     * common case where curried functions have `_.ary` and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < ARY_FLAG;\n\n      var isCombo =\n        (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\n        (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\n        (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = arrayCopy(value);\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use.\n     *\n     * @private\n     * @param {*} objectValue The destination object property value.\n     * @param {*} sourceValue The source object property value.\n     * @returns {*} Returns the value to assign to the destination object.\n     */\n    function mergeDefaults(objectValue, sourceValue) {\n      return objectValue === undefined ? sourceValue : merge(objectValue, sourceValue, mergeDefaults);\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties specified\n     * by `props`.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} props The property names to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByArray(object, props) {\n      object = toObject(object);\n\n      var index = -1,\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index];\n        if (key in object) {\n          result[key] = object[key];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.pick` which picks `object` properties `predicate`\n     * returns truthy for.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Object} Returns the new object.\n     */\n    function pickByCallback(object, predicate) {\n      var result = {};\n      baseForIn(object, function(value, key, object) {\n        if (predicate(value, key, object)) {\n          result[key] = value;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = arrayCopy(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity function\n     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = (function() {\n      var count = 0,\n          lastCalled = 0;\n\n      return function(key, value) {\n        var stamp = now(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return key;\n          }\n        } else {\n          count = 0;\n        }\n        return baseSetData(key, value);\n      };\n    }());\n\n    /**\n     * A fallback implementation of `Object.keys` which creates an array of the\n     * own enumerable property names of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function shimKeys(object) {\n      var props = keysIn(object),\n          propsLength = props.length,\n          length = propsLength && object.length;\n\n      var allowIndexes = !!length && isLength(length) &&\n        (isArray(object) || isArguments(object));\n\n      var index = -1,\n          result = [];\n\n      while (++index < propsLength) {\n        var key = props[index];\n        if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to an array-like object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array|Object} Returns the array-like object.\n     */\n    function toIterable(value) {\n      if (value == null) {\n        return [];\n      }\n      if (!isArrayLike(value)) {\n        return values(value);\n      }\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to an object if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Object} Returns the object.\n     */\n    function toObject(value) {\n      return isObject(value) ? value : Object(value);\n    }\n\n    /**\n     * Converts `value` to property path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {Array} Returns the property path array.\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return value;\n      }\n      var result = [];\n      baseToString(value).replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      return wrapper instanceof LazyWrapper\n        ? wrapper.clone()\n        : new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__, arrayCopy(wrapper.__actions__));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `collection` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new array containing chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if (guard ? isIterateeCall(array, size, guard) : size == null) {\n        size = 1;\n      } else {\n        size = nativeMax(nativeFloor(size) || 1, 1);\n      }\n      var index = 0,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[++resIndex] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array ? array.length : 0,\n          resIndex = -1,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[++resIndex] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of unique `array` values not included in the other\n     * provided arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The arrays of values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.difference([1, 2, 3], [4, 2]);\n     * // => [1, 3]\n     */\n    var difference = restParam(function(array, values) {\n      return (isObjectLike(array) && isArrayLike(array))\n        ? baseDifference(array, baseFlatten(values, false, true))\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that match the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [1]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active', false), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropRightWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.dropWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active', false), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.dropWhile(users, 'active'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8], '*', 1, 2);\n     * // => [4, '*', 8]\n     */\n    function fill(array, value, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(chr) {\n     *   return chr.user == 'barney';\n     * });\n     * // => 0\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findIndex(users, 'active', false);\n     * // => 0\n     *\n     * // using the `_.property` callback shorthand\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    var findIndex = createFindIndex();\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(chr) {\n     *   return chr.user == 'pebbles';\n     * });\n     * // => 2\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastIndex(users, 'active', false);\n     * // => 2\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    var findLastIndex = createFindIndex(true);\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias head\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.first([1, 2, 3]);\n     * // => 1\n     *\n     * _.first([]);\n     * // => undefined\n     */\n    function first(array) {\n      return array ? array[0] : undefined;\n    }\n\n    /**\n     * Flattens a nested array. If `isDeep` is `true` the array is recursively\n     * flattened, otherwise it is only flattened a single level.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {boolean} [isDeep] Specify a deep flatten.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, [4]]\n     *\n     * // using `isDeep`\n     * _.flatten([1, [2, 3, [4]]], true);\n     * // => [1, 2, 3, 4]\n     */\n    function flatten(array, isDeep, guard) {\n      var length = array ? array.length : 0;\n      if (guard && isIterateeCall(array, isDeep, guard)) {\n        isDeep = false;\n      }\n      return length ? baseFlatten(array, isDeep) : [];\n    }\n\n    /**\n     * Recursively flattens a nested array.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to recursively flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, 3, [4]]]);\n     * // => [1, 2, 3, 4]\n     */\n    function flattenDeep(array) {\n      var length = array ? array.length : 0;\n      return length ? baseFlatten(array, true) : [];\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\n     * performs a faster binary search.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\n     *  to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // using `fromIndex`\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     *\n     * // performing a binary search\n     * _.indexOf([1, 1, 2, 2], 2, true);\n     * // => 2\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      if (typeof fromIndex == 'number') {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\n      } else if (fromIndex) {\n        var index = binaryIndex(array, value);\n        if (index < length &&\n            (value === value ? (value === array[index]) : (array[index] !== array[index]))) {\n          return index;\n        }\n        return -1;\n      }\n      return baseIndexOf(array, value, fromIndex || 0);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      return dropRight(array, 1);\n    }\n\n    /**\n     * Creates an array of unique values that are included in all of the provided\n     * arrays using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of shared values.\n     * @example\n     * _.intersection([1, 2], [4, 2], [2, 1]);\n     * // => [2]\n     */\n    var intersection = restParam(function(arrays) {\n      var othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(length),\n          indexOf = getIndexOf(),\n          isCommon = indexOf == baseIndexOf,\n          result = [];\n\n      while (othIndex--) {\n        var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\n        caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\n      }\n      var array = arrays[0],\n          index = -1,\n          length = array ? array.length : 0,\n          seen = caches[0];\n\n      outer:\n      while (++index < length) {\n        value = array[index];\n        if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\n          var othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(value);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    });\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array ? array.length : 0;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to search.\n     * @param {*} value The value to search for.\n     * @param {boolean|number} [fromIndex=array.length-1] The index to search from\n     *  or `true` to perform a binary search on a sorted array.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // using `fromIndex`\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     *\n     * // performing a binary search\n     * _.lastIndexOf([1, 1, 2, 2], 2, true);\n     * // => 3\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (typeof fromIndex == 'number') {\n        index = (fromIndex < 0 ? nativeMax(length + fromIndex, 0) : nativeMin(fromIndex || 0, length - 1)) + 1;\n      } else if (fromIndex) {\n        index = binaryIndex(array, value, true) - 1;\n        var other = array[index];\n        if (value === value ? (value === other) : (other !== other)) {\n          return index;\n        }\n        return -1;\n      }\n      if (value !== value) {\n        return indexOfNaN(array, index, true);\n      }\n      while (index--) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Removes all provided values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3, 1, 2, 3];\n     *\n     * _.pull(array, 2, 3);\n     * console.log(array);\n     * // => [1, 1]\n     */\n    function pull() {\n      var args = arguments,\n          array = args[0];\n\n      if (!(array && array.length)) {\n        return array;\n      }\n      var index = 0,\n          indexOf = getIndexOf(),\n          length = args.length;\n\n      while (++index < length) {\n        var fromIndex = 0,\n            value = args[index];\n\n        while ((fromIndex = indexOf(array, value, fromIndex)) > -1) {\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to the given indexes and returns\n     * an array of the removed elements. Indexes may be specified as an array of\n     * indexes or as individual arguments.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [5, 10, 15, 20];\n     * var evens = _.pullAt(array, 1, 3);\n     *\n     * console.log(array);\n     * // => [5, 15]\n     *\n     * console.log(evens);\n     * // => [10, 20]\n     */\n    var pullAt = restParam(function(array, indexes) {\n      indexes = baseFlatten(indexes);\n\n      var result = baseAt(array, indexes);\n      basePullAt(array, indexes.sort(baseCompareAscending));\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate, thisArg) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getCallback(predicate, thisArg, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @alias tail\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.rest([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function rest(array) {\n      return drop(array, 1);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of `Array#slice` to support node\n     * lists in IE < 9 and to ensure dense arrays are returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value` should\n     * be inserted into `array` in order to maintain its sort order. If an iteratee\n     * function is provided it is invoked for `value` and each element of `array`\n     * to compute their sort ranking. The iteratee is bound to `thisArg` and\n     * invoked with one argument; (value).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     *\n     * _.sortedIndex([4, 4, 5, 5], 5);\n     * // => 2\n     *\n     * var dict = { 'data': { 'thirty': 30, 'forty': 40, 'fifty': 50 } };\n     *\n     * // using an iteratee function\n     * _.sortedIndex(['thirty', 'fifty'], 'forty', function(word) {\n     *   return this.data[word];\n     * }, dict);\n     * // => 1\n     *\n     * // using the `_.property` callback shorthand\n     * _.sortedIndex([{ 'x': 30 }, { 'x': 50 }], { 'x': 40 }, 'x');\n     * // => 1\n     */\n    var sortedIndex = createSortedIndex();\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 4, 5, 5], 5);\n     * // => 4\n     */\n    var sortedLastIndex = createSortedIndex(true);\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (guard ? isIterateeCall(array, n, guard) : n == null) {\n        n = 1;\n      }\n      n = length - (+n || 0);\n      return baseSlice(array, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is bound to `thisArg`\n     * and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRightWhile([1, 2, 3], function(n) {\n     *   return n > 1;\n     * });\n     * // => [2, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeRightWhile(users, { 'user': 'pebbles', 'active': false }), 'user');\n     * // => ['pebbles']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active', false), 'user');\n     * // => ['fred', 'pebbles']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeRightWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeRightWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is bound to\n     * `thisArg` and invoked with three arguments: (value, index, array).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeWhile([1, 2, 3], function(n) {\n     *   return n < 3;\n     * });\n     * // => [1, 2]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false},\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.takeWhile(users, { 'user': 'barney', 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active', false), 'user');\n     * // => ['barney', 'fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.takeWhile(users, 'active'), 'user');\n     * // => []\n     */\n    function takeWhile(array, predicate, thisArg) {\n      return (array && array.length)\n        ? baseWhile(array, getCallback(predicate, thisArg, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all of the provided arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([1, 2], [4, 2], [2, 1]);\n     * // => [1, 2, 4]\n     */\n    var union = restParam(function(arrays) {\n      return baseUniq(baseFlatten(arrays, false, true));\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurence of each element\n     * is kept. Providing `true` for `isSorted` performs a faster search algorithm\n     * for sorted arrays. If an iteratee function is provided it is invoked for\n     * each element in the array to generate the criterion by which uniqueness\n     * is computed. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, array).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias unique\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {boolean} [isSorted] Specify the array is sorted.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new duplicate-value-free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     *\n     * // using `isSorted`\n     * _.uniq([1, 1, 2], true);\n     * // => [1, 2]\n     *\n     * // using an iteratee function\n     * _.uniq([1, 2.5, 1.5, 2], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => [1, 2.5]\n     *\n     * // using the `_.property` callback shorthand\n     * _.uniq([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniq(array, isSorted, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      if (isSorted != null && typeof isSorted != 'boolean') {\n        thisArg = iteratee;\n        iteratee = isIterateeCall(array, isSorted, thisArg) ? undefined : isSorted;\n        isSorted = false;\n      }\n      var callback = getCallback();\n      if (!(iteratee == null && callback === baseCallback)) {\n        iteratee = callback(iteratee, thisArg, 3);\n      }\n      return (isSorted && getIndexOf() == baseIndexOf)\n        ? sortedUniq(array, iteratee)\n        : baseUniq(array, iteratee);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['fred', 'barney'], [30, 40], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var index = -1,\n          length = 0;\n\n      array = arrayFilter(array, function(group) {\n        if (isArrayLike(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = arrayMap(array, baseProperty(index));\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts an iteratee to specify\n     * how regrouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee] The function to combine regrouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee, thisArg) {\n      var length = array ? array.length : 0;\n      if (!length) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      iteratee = bindCallback(iteratee, thisArg, 4);\n      return arrayMap(result, function(group) {\n        return arrayReduce(group, iteratee, undefined, true);\n      });\n    }\n\n    /**\n     * Creates an array excluding all provided values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {Array} array The array to filter.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.without([1, 2, 1, 3], 1, 2);\n     * // => [3]\n     */\n    var without = restParam(function(array, values) {\n      return isArrayLike(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the provided arrays.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of values.\n     * @example\n     *\n     * _.xor([1, 2], [4, 2]);\n     * // => [1, 4]\n     */\n    function xor() {\n      var index = -1,\n          length = arguments.length;\n\n      while (++index < length) {\n        var array = arguments[index];\n        if (isArrayLike(array)) {\n          var result = result\n            ? arrayPush(baseDifference(result, array), baseDifference(array, result))\n            : array;\n        }\n      }\n      return result ? baseUniq(result) : [];\n    }\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the first\n     * elements of the given arrays, the second of which contains the second elements\n     * of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['fred', 'barney'], [30, 40], [true, false]);\n     * // => [['fred', 30, true], ['barney', 40, false]]\n     */\n    var zip = restParam(unzip);\n\n    /**\n     * The inverse of `_.pairs`; this method returns an object composed from arrays\n     * of property names and values. Provide either a single two dimensional array,\n     * e.g. `[[key1, value1], [key2, value2]]` or two arrays, one of property names\n     * and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @alias object\n     * @category Array\n     * @param {Array} props The property names.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject([['fred', 30], ['barney', 40]]);\n     * // => { 'fred': 30, 'barney': 40 }\n     *\n     * _.zipObject(['fred', 'barney'], [30, 40]);\n     * // => { 'fred': 30, 'barney': 40 }\n     */\n    function zipObject(props, values) {\n      var index = -1,\n          length = props ? props.length : 0,\n          result = {};\n\n      if (length && !values && !isArray(props[0])) {\n        values = [];\n      }\n      while (++index < length) {\n        var key = props[index];\n        if (values) {\n          result[key] = values[index];\n        } else if (key) {\n          result[key[0]] = key[1];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an iteratee to specify\n     * how grouped values should be combined. The `iteratee` is bound to `thisArg`\n     * and invoked with four arguments: (accumulator, value, index, group).\n     *\n     * @static\n     * @memberOf _\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee] The function to combine grouped values.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], _.add);\n     * // => [111, 222]\n     */\n    var zipWith = restParam(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 2 ? arrays[length - 2] : undefined,\n          thisArg = length > 1 ? arrays[length - 1] : undefined;\n\n      if (length > 2 && typeof iteratee == 'function') {\n        length -= 2;\n      } else {\n        iteratee = (length > 1 && typeof thisArg == 'function') ? (--length, thisArg) : undefined;\n        thisArg = undefined;\n      }\n      arrays.length = length;\n      return unzipWith(arrays, iteratee, thisArg);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object that wraps `value` with explicit method\n     * chaining enabled.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _.chain(users)\n     *   .sortBy('age')\n     *   .map(function(chr) {\n     *     return chr.user + ' is ' + chr.age;\n     *   })\n     *   .first()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor is\n     * bound to `thisArg` and invoked with one argument; (value). The purpose of\n     * this method is to \"tap into\" a method chain in order to perform operations\n     * on intermediate results within the chain.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor, thisArg) {\n      interceptor.call(thisArg, value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     *\n     * @static\n     * @memberOf _\n     * @category Chain\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @param {*} [thisArg] The `this` binding of `interceptor`.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor, thisArg) {\n      return interceptor.call(thisArg, value);\n    }\n\n    /**\n     * Enables explicit method chaining on the wrapper object.\n     *\n     * @name chain\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // without explicit chaining\n     * _(users).first();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // with explicit chaining\n     * _(users).chain()\n     *   .first()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chained sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Creates a new array joining a wrapped array with any additional arrays\n     * and/or values.\n     *\n     * @name concat\n     * @memberOf _\n     * @category Chain\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var wrapped = _(array).concat(2, [3], [[4]]);\n     *\n     * console.log(wrapped.value());\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    var wrapperConcat = restParam(function(values) {\n      values = baseFlatten(values);\n      return this.thru(function(array) {\n        return arrayConcat(isArray(array) ? array : [toObject(array)], values);\n      });\n    });\n\n    /**\n     * Creates a clone of the chained sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).map(function(value) {\n     *   return Math.pow(value, 2);\n     * });\n     *\n     * var other = [3, 4];\n     * var otherWrapped = wrapped.plant(other);\n     *\n     * otherWrapped.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * Reverses the wrapped array so the first element becomes the last, the\n     * second element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @category Chain\n     * @returns {Object} Returns the new reversed `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n\n      var interceptor = function(value) {\n        return (wrapped && wrapped.__dir__ < 0) ? value : value.reverse();\n      };\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(interceptor);\n    }\n\n    /**\n     * Produces the result of coercing the unwrapped value to a string.\n     *\n     * @name toString\n     * @memberOf _\n     * @category Chain\n     * @returns {string} Returns the coerced string value.\n     * @example\n     *\n     * _([1, 2, 3]).toString();\n     * // => '1,2,3'\n     */\n    function wrapperToString() {\n      return (this.value() + '');\n    }\n\n    /**\n     * Executes the chained sequence to extract the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @alias run, toJSON, valueOf\n     * @category Chain\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements corresponding to the given keys, or indexes,\n     * of `collection`. Keys may be specified as individual arguments or as arrays\n     * of keys.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(number|number[]|string|string[])} [props] The property names\n     *  or indexes of elements to pick, specified individually or in arrays.\n     * @returns {Array} Returns the new array of picked elements.\n     * @example\n     *\n     * _.at(['a', 'b', 'c'], [0, 2]);\n     * // => ['a', 'c']\n     *\n     * _.at(['barney', 'fred', 'pebbles'], 0, 2);\n     * // => ['barney', 'pebbles']\n     */\n    var at = restParam(function(collection, props) {\n      return baseAt(collection, baseFlatten(props));\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the number of times the key was returned by `iteratee`.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy([4.3, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': 1, '6': 2 }\n     *\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      hasOwnProperty.call(result, key) ? ++result[key] : (result[key] = 1);\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * The predicate is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias all\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': false },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.every(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias select\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.filter([4, 5, 6], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 6]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.filter(users, { 'age': 36, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.filter(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.filter(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function filter(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, predicate);\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias detect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.result(_.find(users, function(chr) {\n     *   return chr.age < 40;\n     * }), 'user');\n     * // => 'barney'\n     *\n     * // using the `_.matches` callback shorthand\n     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.result(_.find(users, 'active', false), 'user');\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.result(_.find(users, 'active'), 'user');\n     * // => 'barney'\n     */\n    var find = createFind(baseEach);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(baseEachRight, true);\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning the first element that has equivalent property\n     * values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.result(_.findWhere(users, { 'age': 36, 'active': true }), 'user');\n     * // => 'barney'\n     *\n     * _.result(_.findWhere(users, { 'age': 40, 'active': false }), 'user');\n     * // => 'fred'\n     */\n    function findWhere(collection, source) {\n      return find(collection, baseMatches(source));\n    }\n\n    /**\n     * Iterates over elements of `collection` invoking `iteratee` for each element.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection). Iteratee functions may exit iteration early\n     * by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\" property\n     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\n     * may be used for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @alias each\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEach(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from left to right and returns the array\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\n     *   console.log(n, key);\n     * });\n     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\n     */\n    var forEach = createForEach(arrayEach, baseEach);\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array|Object|string} Returns `collection`.\n     * @example\n     *\n     * _([1, 2]).forEachRight(function(n) {\n     *   console.log(n);\n     * }).value();\n     * // => logs each value from right to left and returns the array\n     */\n    var forEachRight = createForEach(arrayEachRight, baseEachRight);\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is an array of the elements responsible for generating the key.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return Math.floor(n);\n     * });\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * _.groupBy([4.2, 6.1, 6.4], function(n) {\n     *   return this.floor(n);\n     * }, Math);\n     * // => { '4': [4.2], '6': [6.1, 6.4] }\n     *\n     * // using the `_.property` callback shorthand\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        result[key] = [value];\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/6.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\n     * from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @alias contains, include\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {*} target The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {boolean} Returns `true` if a matching element is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'user': 'fred', 'age': 40 }, 'fred');\n     * // => true\n     *\n     * _.includes('pebbles', 'eb');\n     * // => true\n     */\n    function includes(collection, target, fromIndex, guard) {\n      var length = collection ? getLength(collection) : 0;\n      if (!isLength(length)) {\n        collection = values(collection);\n        length = collection.length;\n      }\n      if (typeof fromIndex != 'number' || (guard && isIterateeCall(target, fromIndex, guard))) {\n        fromIndex = 0;\n      } else {\n        fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : (fromIndex || 0);\n      }\n      return (typeof collection == 'string' || !isArray(collection) && isString(collection))\n        ? (fromIndex <= length && collection.indexOf(target, fromIndex) > -1)\n        : (!!length && getIndexOf(collection, target, fromIndex) > -1);\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` through `iteratee`. The corresponding value\n     * of each key is the last element responsible for generating the key. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var keyData = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.indexBy(keyData, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return String.fromCharCode(object.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.indexBy(keyData, function(object) {\n     *   return this.fromCharCode(object.code);\n     * }, String);\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     */\n    var indexBy = createAggregator(function(result, value, key) {\n      result[key] = value;\n    });\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `methodName` is a function it is\n     * invoked for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invoke([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invoke = restParam(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          isProp = isKey(path),\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        var func = isFunc ? path : ((isProp && value != null) ? value[path] : undefined);\n        result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` through\n     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\n     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\n     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\n     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\n     * `sum`, `uniq`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @alias collect\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function timesThree(n) {\n     *   return n * 3;\n     * }\n     *\n     * _.map([1, 2], timesThree);\n     * // => [3, 6]\n     *\n     * _.map({ 'a': 1, 'b': 2 }, timesThree);\n     * // => [3, 6] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee, thisArg) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return func(collection, iteratee);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, while the second of which\n     * contains elements `predicate` returns falsey for. The predicate is bound\n     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * _.partition([1, 2, 3], function(n) {\n     *   return n % 2;\n     * });\n     * // => [[1, 3], [2]]\n     *\n     * _.partition([1.2, 2.3, 3.4], function(n) {\n     *   return this.floor(n) % 2;\n     * }, Math);\n     * // => [[1.2, 3.4], [2.3]]\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * var mapper = function(array) {\n     *   return _.pluck(array, 'user');\n     * };\n     *\n     * // using the `_.matches` callback shorthand\n     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\n     * // => [['pebbles'], ['barney', 'fred']]\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.map(_.partition(users, 'active', false), mapper);\n     * // => [['barney', 'pebbles'], ['fred']]\n     *\n     * // using the `_.property` callback shorthand\n     * _.map(_.partition(users, 'active'), mapper);\n     * // => [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Gets the property value of `path` from all elements in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Array|string} path The path of the property to pluck.\n     * @returns {Array} Returns the property values.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.pluck(users, 'user');\n     * // => ['barney', 'fred']\n     *\n     * var userIndex = _.indexBy(users, 'user');\n     * _.pluck(userIndex, 'age');\n     * // => [36, 40] (iteration order is not guaranteed)\n     */\n    function pluck(collection, path) {\n      return map(collection, property(path));\n    }\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` through `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not provided the first element of `collection` is used as the initial\n     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `sortByAll`,\n     * and `sortByOrder`\n     *\n     * @static\n     * @memberOf _\n     * @alias foldl, inject\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.reduce([1, 2], function(total, n) {\n     *   return total + n;\n     * });\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     *   return result;\n     * }, {});\n     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\n     */\n    var reduce = createReduce(arrayReduce, baseEach);\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias foldr\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    var reduceRight = createReduce(arrayReduceRight, baseEachRight);\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * _.reject([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 0;\n     * });\n     * // => [1, 3]\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.pluck(_.reject(users, { 'age': 40, 'active': true }), 'user');\n     * // => ['barney']\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.pluck(_.reject(users, 'active', false), 'user');\n     * // => ['fred']\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.reject(users, 'active'), 'user');\n     * // => ['barney']\n     */\n    function reject(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      predicate = getCallback(predicate, thisArg, 3);\n      return func(collection, function(value, index, collection) {\n        return !predicate(value, index, collection);\n      });\n    }\n\n    /**\n     * Gets a random element or `n` random elements from a collection.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to sample.\n     * @param {number} [n] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {*} Returns the random sample(s).\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     *\n     * _.sample([1, 2, 3, 4], 2);\n     * // => [3, 1]\n     */\n    function sample(collection, n, guard) {\n      if (guard ? isIterateeCall(collection, n, guard) : n == null) {\n        collection = toIterable(collection);\n        var length = collection.length;\n        return length > 0 ? collection[baseRandom(0, length - 1)] : undefined;\n      }\n      var index = -1,\n          result = toArray(collection),\n          length = result.length,\n          lastIndex = length - 1;\n\n      n = nativeMin(n < 0 ? 0 : (+n || 0), length);\n      while (++index < n) {\n        var rand = baseRandom(index, lastIndex),\n            value = result[rand];\n\n        result[rand] = result[index];\n        result[index] = value;\n      }\n      result.length = n;\n      return result;\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      return sample(collection, POSITIVE_INFINITY);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the size of `collection`.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      var length = collection ? getLength(collection) : 0;\n      return isLength(length) ? length : keys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * The function returns as soon as it finds a passing value and does not iterate\n     * over the entire collection. The predicate is bound to `thisArg` and invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias any\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // using the `_.matches` callback shorthand\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.some(users, 'active', false);\n     * // => true\n     *\n     * // using the `_.property` callback shorthand\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, thisArg) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\n        predicate = undefined;\n      }\n      if (typeof predicate != 'function' || thisArg !== undefined) {\n        predicate = getCallback(predicate, thisArg, 3);\n      }\n      return func(collection, predicate);\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection through `iteratee`. This method performs\n     * a stable sort, that is, it preserves the original sort order of equal elements.\n     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return Math.sin(n);\n     * });\n     * // => [3, 1, 2]\n     *\n     * _.sortBy([1, 2, 3], function(n) {\n     *   return this.sin(n);\n     * }, Math);\n     * // => [3, 1, 2]\n     *\n     * var users = [\n     *   { 'user': 'fred' },\n     *   { 'user': 'pebbles' },\n     *   { 'user': 'barney' }\n     * ];\n     *\n     * // using the `_.property` callback shorthand\n     * _.pluck(_.sortBy(users, 'user'), 'user');\n     * // => ['barney', 'fred', 'pebbles']\n     */\n    function sortBy(collection, iteratee, thisArg) {\n      if (collection == null) {\n        return [];\n      }\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      var index = -1;\n      iteratee = getCallback(iteratee, thisArg, 3);\n\n      var result = baseMap(collection, function(value, key, collection) {\n        return { 'criteria': iteratee(value, key, collection), 'index': ++index, 'value': value };\n      });\n      return baseSortBy(result, compareAscending);\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it can sort by multiple iteratees\n     * or property names.\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {...(Function|Function[]|Object|Object[]|string|string[])} iteratees\n     *  The iteratees to sort by, specified as individual values or arrays of values.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.map(_.sortByAll(users, ['user', 'age']), _.values);\n     * // => [['barney', 34], ['barney', 36], ['fred', 42], ['fred', 48]]\n     *\n     * _.map(_.sortByAll(users, 'user', function(chr) {\n     *   return Math.floor(chr.age / 10);\n     * }), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    var sortByAll = restParam(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var guard = iteratees[2];\n      if (guard && isIterateeCall(iteratees[0], iteratees[1], guard)) {\n        iteratees.length = 1;\n      }\n      return baseSortByOrder(collection, baseFlatten(iteratees), []);\n    });\n\n    /**\n     * This method is like `_.sortByAll` except that it allows specifying the\n     * sort orders of the iteratees to sort by. If `orders` is unspecified, all\n     * values are sorted in ascending order. Otherwise, a value is sorted in\n     * ascending order if its corresponding order is \"asc\", and descending if \"desc\".\n     *\n     * If a property name is provided for an iteratee the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If an object is provided for an iteratee the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {boolean[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 42 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // sort by `user` in ascending order and by `age` in descending order\n     * _.map(_.sortByOrder(users, ['user', 'age'], ['asc', 'desc']), _.values);\n     * // => [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 42]]\n     */\n    function sortByOrder(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (guard && isIterateeCall(iteratees, orders, guard)) {\n        orders = undefined;\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseSortByOrder(collection, iteratees, orders);\n    }\n\n    /**\n     * Performs a deep comparison between each element in `collection` and the\n     * source object, returning an array of all elements that have equivalent\n     * property values.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to search.\n     * @param {Object} source The object of property values to match.\n     * @returns {Array} Returns the new filtered array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false, 'pets': ['hoppy'] },\n     *   { 'user': 'fred',   'age': 40, 'active': true, 'pets': ['baby puss', 'dino'] }\n     * ];\n     *\n     * _.pluck(_.where(users, { 'age': 36, 'active': false }), 'user');\n     * // => ['barney']\n     *\n     * _.pluck(_.where(users, { 'pets': ['dino'] }), 'user');\n     * // => ['fred']\n     */\n    function where(collection, source) {\n      return filter(collection, baseMatches(source));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the number of milliseconds that have elapsed since the Unix epoch\n     * (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @category Date\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => logs the number of milliseconds it took for the deferred function to be invoked\n     */\n    var now = nativeNow || function() {\n      return new Date().getTime();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it is called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => logs 'done saving!' after the two async saves have completed\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      n = nativeIsFinite(n = +n) ? n : 0;\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that accepts up to `n` arguments ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      if (guard && isIterateeCall(func, n, guard)) {\n        n = undefined;\n      }\n      n = (func && n == null) ? func.length : nativeMax(+n || 0, 0);\n      return createWrapper(func, ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it is called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery('#add').on('click', _.before(5, addContactToList));\n     * // => allows adding up to 4 contacts to the list\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        if (typeof n == 'function') {\n          var temp = n;\n          n = func;\n          func = temp;\n        } else {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n      }\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and prepends any additional `_.bind` arguments to those provided to the\n     * bound function.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind` this method does not set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var greet = function(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * };\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // using placeholders\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = restParam(function(func, thisArg, partials) {\n      var bitmask = BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bind.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method. Method names may be specified as individual arguments or as arrays\n     * of method names. If no method names are provided all enumerable function\n     * properties, own and inherited, of `object` are bound.\n     *\n     * **Note:** This method does not set the \"length\" property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} [methodNames] The object method names to bind,\n     *  specified as individual method names or arrays of method names.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'onClick': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view);\n     * jQuery('#docs').on('click', view.onClick);\n     * // => logs 'clicked docs' when the element is clicked\n     */\n    var bindAll = restParam(function(object, methodNames) {\n      methodNames = methodNames.length ? baseFlatten(methodNames) : functions(object);\n\n      var index = -1,\n          length = methodNames.length;\n\n      while (++index < length) {\n        var key = methodNames[index];\n        object[key] = createWrapper(object[key], BIND_FLAG, object);\n      }\n      return object;\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` and prepends\n     * any additional `_.bindKey` arguments to those provided to the bound function.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist.\n     * See [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Object} object The object the method belongs to.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // using placeholders\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = restParam(function(object, key, partials) {\n      var bitmask = BIND_FLAG | BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, bindKey.placeholder);\n        bitmask |= PARTIAL_FLAG;\n      }\n      return createWrapper(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts one or more arguments of `func` that when\n     * called either invokes `func` returning its result, if all `func` arguments\n     * have been provided, or returns a function that accepts one or more of the\n     * remaining `func` arguments, and so on. The arity of `func` may be specified\n     * if `func.length` is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    var curry = createCurry(CURRY_FLAG);\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // using placeholders\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    var curryRight = createCurry(CURRY_RIGHT_FLAG);\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed invocations. Provide an options object to indicate that `func`\n     * should be invoked on the leading and/or trailing edge of the `wait` timeout.\n     * Subsequent calls to the debounced function return the result of the last\n     * `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the debounced function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=false] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {number} [options.maxWait] The maximum time `func` is allowed to be\n     *  delayed before it is invoked.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // avoid costly calculations while the window size is in flux\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // invoke `sendMail` when the click event is fired, debouncing subsequent calls\n     * jQuery('#postbox').on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // ensure `batchLog` is invoked once after 1 second of debounced calls\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', _.debounce(batchLog, 250, {\n     *   'maxWait': 1000\n     * }));\n     *\n     * // cancel a debounced call\n     * var todoChanges = _.debounce(batchLog, 1000);\n     * Object.observe(models.todo, todoChanges);\n     *\n     * Object.observe(models, function(changes) {\n     *   if (_.find(changes, { 'user': 'todo', 'type': 'delete'})) {\n     *     todoChanges.cancel();\n     *   }\n     * }, ['delete']);\n     *\n     * // ...at some point `models.todo` is changed\n     * models.todo.completed = true;\n     *\n     * // ...before 1 second has passed `models.todo` is deleted\n     * // which cancels the debounced `todoChanges` call\n     * delete models.todo;\n     */\n    function debounce(func, wait, options) {\n      var args,\n          maxTimeoutId,\n          result,\n          stamp,\n          thisArg,\n          timeoutId,\n          trailingCall,\n          lastCalled = 0,\n          maxWait = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = wait < 0 ? 0 : (+wait || 0);\n      if (options === true) {\n        var leading = true;\n        trailing = false;\n      } else if (isObject(options)) {\n        leading = !!options.leading;\n        maxWait = 'maxWait' in options && nativeMax(+options.maxWait || 0, wait);\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function cancel() {\n        if (timeoutId) {\n          clearTimeout(timeoutId);\n        }\n        if (maxTimeoutId) {\n          clearTimeout(maxTimeoutId);\n        }\n        lastCalled = 0;\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n      }\n\n      function complete(isCalled, id) {\n        if (id) {\n          clearTimeout(id);\n        }\n        maxTimeoutId = timeoutId = trailingCall = undefined;\n        if (isCalled) {\n          lastCalled = now();\n          result = func.apply(thisArg, args);\n          if (!timeoutId && !maxTimeoutId) {\n            args = thisArg = undefined;\n          }\n        }\n      }\n\n      function delayed() {\n        var remaining = wait - (now() - stamp);\n        if (remaining <= 0 || remaining > wait) {\n          complete(trailingCall, maxTimeoutId);\n        } else {\n          timeoutId = setTimeout(delayed, remaining);\n        }\n      }\n\n      function maxDelayed() {\n        complete(trailing, timeoutId);\n      }\n\n      function debounced() {\n        args = arguments;\n        stamp = now();\n        thisArg = this;\n        trailingCall = trailing && (timeoutId || !leading);\n\n        if (maxWait === false) {\n          var leadingCall = leading && !timeoutId;\n        } else {\n          if (!maxTimeoutId && !leading) {\n            lastCalled = stamp;\n          }\n          var remaining = maxWait - (stamp - lastCalled),\n              isCalled = remaining <= 0 || remaining > maxWait;\n\n          if (isCalled) {\n            if (maxTimeoutId) {\n              maxTimeoutId = clearTimeout(maxTimeoutId);\n            }\n            lastCalled = stamp;\n            result = func.apply(thisArg, args);\n          }\n          else if (!maxTimeoutId) {\n            maxTimeoutId = setTimeout(maxDelayed, remaining);\n          }\n        }\n        if (isCalled && timeoutId) {\n          timeoutId = clearTimeout(timeoutId);\n        }\n        else if (!timeoutId && wait !== maxWait) {\n          timeoutId = setTimeout(delayed, wait);\n        }\n        if (leadingCall) {\n          isCalled = true;\n          result = func.apply(thisArg, args);\n        }\n        if (isCalled && !timeoutId && !maxTimeoutId) {\n          args = thisArg = undefined;\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // logs 'deferred' after one or more milliseconds\n     */\n    var defer = restParam(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke the function with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => logs 'later' after one second\n     */\n    var delay = restParam(function(func, wait, args) {\n      return baseDelay(func, wait, args);\n    });\n\n    /**\n     * Creates a function that returns the result of invoking the provided\n     * functions with the `this` binding of the created function, where each\n     * successive invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow(_.add, square);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the provided functions from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @alias backflow, compose\n     * @category Function\n     * @param {...Function} [funcs] Functions to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight(square, _.add);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is coerced to a string and used as the\n     * cache key. The `func` is invoked with the `this` binding of the memoized\n     * function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the [`Map`](http://ecma-international.org/ecma-262/6.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoizing function.\n     * @example\n     *\n     * var upperCase = _.memoize(function(string) {\n     *   return string.toUpperCase();\n     * });\n     *\n     * upperCase('fred');\n     * // => 'FRED'\n     *\n     * // modifying the result cache\n     * upperCase.cache.set('fred', 'BARNEY');\n     * upperCase('fred');\n     * // => 'BARNEY'\n     *\n     * // replacing `_.memoize.Cache`\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'barney' };\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'fred' }\n     *\n     * _.memoize.Cache = WeakMap;\n     * var identity = _.memoize(_.identity);\n     *\n     * identity(object);\n     * // => { 'user': 'fred' }\n     * identity(other);\n     * // => { 'user': 'barney' }\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result);\n        return result;\n      };\n      memoized.cache = new memoize.Cache;\n      return memoized;\n    }\n\n    /**\n     * Creates a function that runs each argument through a corresponding\n     * transform function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms] The functions to transform\n     * arguments, specified as individual functions or arrays of functions.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var modded = _.modArgs(function(x, y) {\n     *   return [x, y];\n     * }, square, doubled);\n     *\n     * modded(1, 2);\n     * // => [1, 4]\n     *\n     * modded(5, 10);\n     * // => [25, 20]\n     */\n    var modArgs = restParam(function(func, transforms) {\n      transforms = baseFlatten(transforms);\n      if (typeof func != 'function' || !arrayEvery(transforms, baseIsFunction)) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = transforms.length;\n      return restParam(function(args) {\n        var index = nativeMin(args.length, length);\n        while (index--) {\n          args[index] = transforms[index](args[index]);\n        }\n        return func.apply(this, args);\n      });\n    });\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        return !predicate.apply(this, arguments);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first call. The `func` is invoked\n     * with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // `initialize` invokes `createApplication` once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with `partial` arguments prepended\n     * to those provided to the new function. This method is like `_.bind` except\n     * it does **not** alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // using placeholders\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = createPartial(PARTIAL_FLAG);\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to those provided to the new function.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method does not set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * var greet = function(greeting, name) {\n     *   return greeting + ' ' + name;\n     * };\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // using placeholders\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = createPartial(PARTIAL_RIGHT_FLAG);\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified indexes where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes,\n     *  specified as individual indexes or arrays of indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, 2, 0, 1);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     *\n     * var map = _.rearg(_.map, [1, 0]);\n     * map(function(n) {\n     *   return n * 3;\n     * }, [1, 2, 3]);\n     * // => [3, 6, 9]\n     */\n    var rearg = restParam(function(func, indexes) {\n      return createWrapper(func, REARG_FLAG, undefined, undefined, undefined, baseFlatten(indexes));\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as an array.\n     *\n     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.restParam(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function restParam(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            rest = Array(length);\n\n        while (++index < length) {\n          rest[index] = args[start + index];\n        }\n        switch (start) {\n          case 0: return func.call(this, rest);\n          case 1: return func.call(this, args[0], rest);\n          case 2: return func.call(this, args[0], args[1], rest);\n        }\n        var otherArgs = Array(start + 1);\n        index = -1;\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = rest;\n        return func.apply(this, otherArgs);\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the created\n     * function and an array of arguments much like [`Function#apply`](https://es5.github.io/#x15.3.4.3).\n     *\n     * **Note:** This method is based on the [spread operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * // with a Promise\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function(array) {\n        return func.apply(this, array);\n      };\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed invocations. Provide an options object to indicate\n     * that `func` should be invoked on the leading and/or trailing edge of the\n     * `wait` timeout. Subsequent calls to the throttled function return the\n     * result of the last `func` call.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is invoked\n     * on the trailing edge of the timeout only if the the throttled function is\n     * invoked more than once during the `wait` timeout.\n     *\n     * See [David Corbacho's article](http://drupalmotion.com/article/debounce-and-throttle-visual-explanation)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.leading=true] Specify invoking on the leading\n     *  edge of the timeout.\n     * @param {boolean} [options.trailing=true] Specify invoking on the trailing\n     *  edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // avoid excessively updating the position while scrolling\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // invoke `renewToken` when the click event is fired, but not more than once every 5 minutes\n     * jQuery('.interactive').on('click', _.throttle(renewToken, 300000, {\n     *   'trailing': false\n     * }));\n     *\n     * // cancel a trailing throttled call\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (options === false) {\n        leading = false;\n      } else if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, { 'leading': leading, 'maxWait': +wait, 'trailing': trailing });\n    }\n\n    /**\n     * Creates a function that provides `value` to the wrapper function as its\n     * first argument. Any additional arguments provided to the function are\n     * appended to those provided to the wrapper function. The wrapper is invoked\n     * with the `this` binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} wrapper The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      wrapper = wrapper == null ? identity : wrapper;\n      return createWrapper(wrapper, PARTIAL_FLAG, undefined, [value], []);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\n     * otherwise they are assigned by reference. If `customizer` is provided it is\n     * invoked to produce the cloned values. If `customizer` returns `undefined`\n     * cloning is handled by the method instead. The `customizer` is bound to\n     * `thisArg` and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var shallow = _.clone(users);\n     * shallow[0] === users[0];\n     * // => true\n     *\n     * var deep = _.clone(users, true);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.clone(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 0\n     */\n    function clone(value, isDeep, customizer, thisArg) {\n      if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\n        isDeep = false;\n      }\n      else if (typeof isDeep == 'function') {\n        thisArg = customizer;\n        customizer = isDeep;\n        isDeep = false;\n      }\n      return typeof customizer == 'function'\n        ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, isDeep);\n    }\n\n    /**\n     * Creates a deep clone of `value`. If `customizer` is provided it is invoked\n     * to produce the cloned values. If `customizer` returns `undefined` cloning\n     * is handled by the method instead. The `customizer` is bound to `thisArg`\n     * and invoked with two argument; (value [, index|key, object]).\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\n     * The enumerable properties of `arguments` objects and objects created by\n     * constructors other than `Object` are cloned to plain `Object` objects. An\n     * empty object is returned for uncloneable values such as functions, DOM nodes,\n     * Maps, Sets, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to deep clone.\n     * @param {Function} [customizer] The function to customize cloning values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {*} Returns the deep cloned value.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * var deep = _.cloneDeep(users);\n     * deep[0] === users[0];\n     * // => false\n     *\n     * // using a customizer callback\n     * var el = _.cloneDeep(document.body, function(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * });\n     *\n     * el === document.body\n     * // => false\n     * el.nodeName\n     * // => BODY\n     * el.childNodes.length;\n     * // => 20\n     */\n    function cloneDeep(value, customizer, thisArg) {\n      return typeof customizer == 'function'\n        ? baseClone(value, true, bindCallback(customizer, thisArg, 1))\n        : baseClone(value, true);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`, else `false`.\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    function gt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    function gte(value, other) {\n      return value >= other;\n    }\n\n    /**\n     * Checks if `value` is classified as an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    function isArguments(value) {\n      return isObjectLike(value) && isArrayLike(value) &&\n        hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n    }\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(function() { return arguments; }());\n     * // => false\n     */\n    var isArray = nativeIsArray || function(value) {\n      return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\n    };\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false || (isObjectLike(value) && objToString.call(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    function isDate(value) {\n      return isObjectLike(value) && objToString.call(value) == dateTag;\n    }\n\n    /**\n     * Checks if `value` is a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is empty. A value is considered empty unless it is an\n     * `arguments` object, array, string, or jQuery-like collection with a length\n     * greater than `0` or an object with own enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Array|Object|string} value The value to inspect.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) && (isArray(value) || isString(value) || isArguments(value) ||\n          (isObjectLike(value) && isFunction(value.splice)))) {\n        return !value.length;\n      }\n      return !keys(value).length;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent. If `customizer` is provided it is invoked to compare values.\n     * If `customizer` returns `undefined` comparisons are handled by the method\n     * instead. The `customizer` is bound to `thisArg` and invoked with three\n     * arguments: (value, other [, index|key]).\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. Functions and DOM nodes\n     * are **not** supported. Provide a customizer function to extend support\n     * for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @alias eq\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var other = { 'user': 'fred' };\n     *\n     * object == other;\n     * // => false\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * // using a customizer callback\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqual(array, other, function(value, other) {\n     *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\n     *     return true;\n     *   }\n     * });\n     * // => true\n     */\n    function isEqual(value, other, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return  result === undefined ? baseIsEqual(value, other, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      return isObjectLike(value) && typeof value.message == 'string' && objToString.call(value) == errorTag;\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on [`Number.isFinite`](http://ecma-international.org/ecma-262/6.0/#sec-number.isfinite).\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(10);\n     * // => true\n     *\n     * _.isFinite('10');\n     * // => false\n     *\n     * _.isFinite(true);\n     * // => false\n     *\n     * _.isFinite(Object(10));\n     * // => false\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in older versions of Chrome and Safari which return 'function' for regexes\n      // and Safari 8 equivalents which return 'object' for typed array constructors.\n      return isObject(value) && objToString.call(value) == funcTag;\n    }\n\n    /**\n     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\n     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(1);\n     * // => false\n     */\n    function isObject(value) {\n      // Avoid a V8 JIT bug in Chrome 19-20.\n      // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n      var type = typeof value;\n      return !!value && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Performs a deep comparison between `object` and `source` to determine if\n     * `object` contains equivalent property values. If `customizer` is provided\n     * it is invoked to compare values. If `customizer` returns `undefined`\n     * comparisons are handled by the method instead. The `customizer` is bound\n     * to `thisArg` and invoked with three arguments: (value, other, index|key).\n     *\n     * **Note:** This method supports comparing properties of arrays, booleans,\n     * `Date` objects, numbers, `Object` objects, regexes, and strings. Functions\n     * and DOM nodes are **not** supported. Provide a customizer function to extend\n     * support for comparing other values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize value comparisons.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.isMatch(object, { 'age': 40 });\n     * // => true\n     *\n     * _.isMatch(object, { 'age': 36 });\n     * // => false\n     *\n     * // using a customizer callback\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatch(object, source, function(value, other) {\n     *   return _.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/) || undefined;\n     * });\n     * // => true\n     */\n    function isMatch(object, source, customizer, thisArg) {\n      customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\n      return baseIsMatch(object, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is not the same as [`isNaN`](https://es5.github.io/#x15.1.2.4)\n     * which returns `true` for `undefined` and other non-numeric values.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some host objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a native function.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (value == null) {\n        return false;\n      }\n      if (isFunction(value)) {\n        return reIsNative.test(fnToString.call(value));\n      }\n      return isObjectLike(value) && reIsHostCtor.test(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n     * as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isNumber(8.4);\n     * // => true\n     *\n     * _.isNumber(NaN);\n     * // => true\n     *\n     * _.isNumber('8.4');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * **Note:** This method assumes objects created by the `Object` constructor\n     * have no inherited enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      var Ctor;\n\n      // Exit early for non `Object` objects.\n      if (!(isObjectLike(value) && objToString.call(value) == objectTag && !isArguments(value)) ||\n          (!hasOwnProperty.call(value, 'constructor') && (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\n        return false;\n      }\n      // IE < 9 iterates inherited properties before own properties. If the first\n      // iterated property is an object's own property then there are no inherited\n      // enumerable properties.\n      var result;\n      // In most environments an object's own properties are iterated before\n      // its inherited properties. If the last iterated property is an object's\n      // own property then there are no inherited enumerable properties.\n      baseForIn(value, function(subValue, key) {\n        result = key;\n      });\n      return result === undefined || hasOwnProperty.call(value, result);\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    function isRegExp(value) {\n      return isObject(value) && objToString.call(value) == regexpTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    function isTypedArray(value) {\n      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\n    }\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`, else `false`.\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    function lt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to `other`, else `false`.\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    function lte(value, other) {\n      return value <= other;\n    }\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * (function() {\n     *   return _.toArray(arguments).slice(1);\n     * }(1, 2, 3));\n     * // => [2, 3]\n     */\n    function toArray(value) {\n      var length = value ? getLength(value) : 0;\n      if (!isLength(length)) {\n        return values(value);\n      }\n      if (!length) {\n        return [];\n      }\n      return arrayCopy(value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable\n     * properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return baseCopy(value, keysIn(value));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Recursively merges own enumerable properties of the source object(s), that\n     * don't resolve to `undefined` into the destination object. Subsequent sources\n     * overwrite property assignments of previous sources. If `customizer` is\n     * provided it is invoked to produce the merged values of the destination and\n     * source properties. If `customizer` returns `undefined` merging is handled\n     * by the method instead. The `customizer` is bound to `thisArg` and invoked\n     * with five arguments: (objectValue, sourceValue, key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var users = {\n     *   'data': [{ 'user': 'barney' }, { 'user': 'fred' }]\n     * };\n     *\n     * var ages = {\n     *   'data': [{ 'age': 36 }, { 'age': 40 }]\n     * };\n     *\n     * _.merge(users, ages);\n     * // => { 'data': [{ 'user': 'barney', 'age': 36 }, { 'user': 'fred', 'age': 40 }] }\n     *\n     * // using a customizer callback\n     * var object = {\n     *   'fruits': ['apple'],\n     *   'vegetables': ['beet']\n     * };\n     *\n     * var other = {\n     *   'fruits': ['banana'],\n     *   'vegetables': ['carrot']\n     * };\n     *\n     * _.merge(object, other, function(a, b) {\n     *   if (_.isArray(a)) {\n     *     return a.concat(b);\n     *   }\n     * });\n     * // => { 'fruits': ['apple', 'banana'], 'vegetables': ['beet', 'carrot'] }\n     */\n    var merge = createAssigner(baseMerge);\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object. Subsequent sources overwrite property assignments of previous sources.\n     * If `customizer` is provided it is invoked to produce the assigned values.\n     * The `customizer` is bound to `thisArg` and invoked with five arguments:\n     * (objectValue, sourceValue, key, object, source).\n     *\n     * **Note:** This method mutates `object` and is based on\n     * [`Object.assign`](http://ecma-international.org/ecma-262/6.0/#sec-object.assign).\n     *\n     * @static\n     * @memberOf _\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {*} [thisArg] The `this` binding of `customizer`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using a customizer callback\n     * var defaults = _.partialRight(_.assign, function(value, other) {\n     *   return _.isUndefined(value) ? other : value;\n     * });\n     *\n     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var assign = createAssigner(function(object, source, customizer) {\n      return customizer\n        ? assignWith(object, source, customizer)\n        : baseAssign(object, source);\n    });\n\n    /**\n     * Creates an object that inherits from the given `prototype` object. If a\n     * `properties` object is provided its own enumerable properties are assigned\n     * to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties, guard) {\n      var result = baseCreate(prototype);\n      if (guard && isIterateeCall(prototype, properties, guard)) {\n        properties = undefined;\n      }\n      return properties ? baseAssign(result, properties) : result;\n    }\n\n    /**\n     * Assigns own enumerable properties of source object(s) to the destination\n     * object for all destination properties that resolve to `undefined`. Once a\n     * property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var defaults = createDefaults(assign, assignDefaults);\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * _.defaultsDeep({ 'user': { 'name': 'barney' } }, { 'user': { 'name': 'fred', 'age': 36 } });\n     * // => { 'user': { 'name': 'barney', 'age': 36 } }\n     *\n     */\n    var defaultsDeep = createDefaults(merge, mergeDefaults);\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    var findKey = createFindKey(baseForOwn);\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * If a property name is provided for `predicate` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `predicate` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to search.\n     * @param {Function|Object|string} [predicate=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {string|undefined} Returns the key of the matched element, else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(chr) {\n     *   return chr.age < 40;\n     * });\n     * // => returns `pebbles` assuming `_.findKey` returns `barney`\n     *\n     * // using the `_.matches` callback shorthand\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // using the `_.matchesProperty` callback shorthand\n     * _.findLastKey(users, 'active', false);\n     * // => 'fred'\n     *\n     * // using the `_.property` callback shorthand\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    var findLastKey = createFindKey(baseForOwnRight);\n\n    /**\n     * Iterates over own and inherited enumerable properties of an object invoking\n     * `iteratee` for each property. The `iteratee` is bound to `thisArg` and invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a', 'b', and 'c' (iteration order is not guaranteed)\n     */\n    var forIn = createForIn(baseFor);\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'c', 'b', and 'a' assuming `_.forIn ` logs 'a', 'b', and 'c'\n     */\n    var forInRight = createForIn(baseForRight);\n\n    /**\n     * Iterates over own enumerable properties of an object invoking `iteratee`\n     * for each property. The `iteratee` is bound to `thisArg` and invoked with\n     * three arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'a' and 'b' (iteration order is not guaranteed)\n     */\n    var forOwn = createForOwn(baseForOwn);\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => logs 'b' and 'a' assuming `_.forOwn` logs 'a' and 'b'\n     */\n    var forOwnRight = createForOwn(baseForOwnRight);\n\n    /**\n     * Creates an array of function property names from all enumerable properties,\n     * own and inherited, of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @alias methods\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the new array of property names.\n     * @example\n     *\n     * _.functions(_);\n     * // => ['after', 'ary', 'assign', ...]\n     */\n    function functions(object) {\n      return baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the property value at `path` of `object`. If the resolved value is\n     * `undefined` the `defaultValue` is used in its place.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, toPath(path), path + '');\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` is a direct property, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': { 'c': 3 } } };\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b.c');\n     * // => true\n     *\n     * _.has(object, ['a', 'b', 'c']);\n     * // => true\n     */\n    function has(object, path) {\n      if (object == null) {\n        return false;\n      }\n      var result = hasOwnProperty.call(object, path);\n      if (!result && !isKey(path)) {\n        path = toPath(path);\n        object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n        if (object == null) {\n          return false;\n        }\n        path = last(path);\n        result = hasOwnProperty.call(object, path);\n      }\n      return result || (isLength(object.length) && isIndex(path, object.length) &&\n        (isArray(object) || isArguments(object)));\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite property\n     * assignments of previous values unless `multiValue` is `true`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {boolean} [multiValue] Allow multiple values per key.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     *\n     * // with `multiValue`\n     * _.invert(object, true);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function invert(object, multiValue, guard) {\n      if (guard && isIterateeCall(object, multiValue, guard)) {\n        multiValue = undefined;\n      }\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = {};\n\n      while (++index < length) {\n        var key = props[index],\n            value = object[key];\n\n        if (multiValue) {\n          if (hasOwnProperty.call(result, value)) {\n            result[value].push(key);\n          } else {\n            result[value] = [key];\n          }\n        }\n        else {\n          result[value] = key;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/6.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    var keys = !nativeKeys ? shimKeys : function(object) {\n      var Ctor = object == null ? undefined : object.constructor;\n      if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\n          (typeof object != 'function' && isArrayLike(object))) {\n        return shimKeys(object);\n      }\n      return isObject(object) ? nativeKeys(object) : [];\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      if (object == null) {\n        return [];\n      }\n      if (!isObject(object)) {\n        object = Object(object);\n      }\n      var length = object.length;\n      length = (length && isLength(length) &&\n        (isArray(object) || isArguments(object)) && length) || 0;\n\n      var Ctor = object.constructor,\n          index = -1,\n          isProto = typeof Ctor == 'function' && Ctor.prototype === object,\n          result = Array(length),\n          skipIndexes = length > 0;\n\n      while (++index < length) {\n        result[index] = (index + '');\n      }\n      for (var key in object) {\n        if (!(skipIndexes && isIndex(key, length)) &&\n            !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * property of `object` through `iteratee`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    var mapKeys = createObjectMapper(true);\n\n    /**\n     * Creates an object with the same keys as `object` and values generated by\n     * running each own enumerable property of `object` through `iteratee`. The\n     * iteratee function is bound to `thisArg` and invoked with three arguments:\n     * (value, key, object).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\n     *  per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Object} Returns the new mapped object.\n     * @example\n     *\n     * _.mapValues({ 'a': 1, 'b': 2 }, function(n) {\n     *   return n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * // using the `_.property` callback shorthand\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    var mapValues = createObjectMapper();\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable properties of `object` that are not omitted.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to omit, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.omit(object, 'age');\n     * // => { 'user': 'fred' }\n     *\n     * _.omit(object, _.isNumber);\n     * // => { 'user': 'fred' }\n     */\n    var omit = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      if (typeof props[0] != 'function') {\n        var props = arrayMap(baseFlatten(props), String);\n        return pickByArray(object, baseDifference(keysIn(object), props));\n      }\n      var predicate = bindCallback(props[0], props[1], 3);\n      return pickByCallback(object, function(value, key, object) {\n        return !predicate(value, key, object);\n      });\n    });\n\n    /**\n     * Creates a two dimensional array of the key-value pairs for `object`,\n     * e.g. `[[key1, value1], [key2, value2]]`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the new array of key-value pairs.\n     * @example\n     *\n     * _.pairs({ 'barney': 36, 'fred': 40 });\n     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\n     */\n    function pairs(object) {\n      object = toObject(object);\n\n      var index = -1,\n          props = keys(object),\n          length = props.length,\n          result = Array(length);\n\n      while (++index < length) {\n        var key = props[index];\n        result[index] = [key, object[key]];\n      }\n      return result;\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties. Property\n     * names may be specified as individual arguments or as arrays of property\n     * names. If `predicate` is provided it is invoked for each property of `object`\n     * picking the properties `predicate` returns truthy for. The predicate is\n     * bound to `thisArg` and invoked with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function|...(string|string[])} [predicate] The function invoked per\n     *  iteration or property names to pick, specified as individual property\n     *  names or arrays of property names.\n     * @param {*} [thisArg] The `this` binding of `predicate`.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'user': 'fred', 'age': 40 };\n     *\n     * _.pick(object, 'user');\n     * // => { 'user': 'fred' }\n     *\n     * _.pick(object, _.isString);\n     * // => { 'user': 'fred' }\n     */\n    var pick = restParam(function(object, props) {\n      if (object == null) {\n        return {};\n      }\n      return typeof props[0] == 'function'\n        ? pickByCallback(object, bindCallback(props[0], props[1], 3))\n        : pickByArray(object, baseFlatten(props));\n    });\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a function\n     * it is invoked with the `this` binding of its parent object and its result\n     * is returned.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned if the resolved value is `undefined`.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a.b.c', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a.b.c', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      var result = object == null ? undefined : object[path];\n      if (result === undefined) {\n        if (object != null && !isKey(path, object)) {\n          path = toPath(path);\n          object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\n          result = object == null ? undefined : object[last(path)];\n        }\n        result = result === undefined ? defaultValue : result;\n      }\n      return isFunction(result) ? result.call(object) : result;\n    }\n\n    /**\n     * Sets the property value of `path` on `object`. If a portion of `path`\n     * does not exist it is created.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to augment.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, 'x[0].y.z', 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      if (object == null) {\n        return object;\n      }\n      var pathKey = (path + '');\n      path = (object[pathKey] != null || isKey(path, object)) ? [pathKey] : toPath(path);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = path[index];\n        if (isObject(nested)) {\n          if (index == lastIndex) {\n            nested[key] = value;\n          } else if (nested[key] == null) {\n            nested[key] = isIndex(path[index + 1]) ? [] : {};\n          }\n        }\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own enumerable\n     * properties through `iteratee`, with each invocation potentially mutating\n     * the `accumulator` object. The `iteratee` is bound to `thisArg` and invoked\n     * with four arguments: (accumulator, value, key, object). Iteratee functions\n     * may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Array|Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * });\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2 }, function(result, n, key) {\n     *   result[key] = n * 3;\n     * });\n     * // => { 'a': 3, 'b': 6 }\n     */\n    function transform(object, iteratee, accumulator, thisArg) {\n      var isArr = isArray(object) || isTypedArray(object);\n      iteratee = getCallback(iteratee, thisArg, 4);\n\n      if (accumulator == null) {\n        if (isArr || isObject(object)) {\n          var Ctor = object.constructor;\n          if (isArr) {\n            accumulator = isArray(object) ? new Ctor : [];\n          } else {\n            accumulator = baseCreate(isFunction(Ctor) ? Ctor.prototype : undefined);\n          }\n        } else {\n          accumulator = {};\n        }\n      }\n      (isArr ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Creates an array of the own enumerable property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property values\n     * of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Checks if `n` is between `start` and up to but not including, `end`. If\n     * `end` is not specified it is set to `start` with `start` then set to `0`.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} n The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `n` is in the range, else `false`.\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     */\n    function inRange(value, start, end) {\n      start = +start || 0;\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      return value >= nativeMin(start, end) && value < nativeMax(start, end);\n    }\n\n    /**\n     * Produces a random number between `min` and `max` (inclusive). If only one\n     * argument is provided a number between `0` and the given number is returned.\n     * If `floating` is `true`, or either `min` or `max` are floats, a floating-point\n     * number is returned instead of an integer.\n     *\n     * @static\n     * @memberOf _\n     * @category Number\n     * @param {number} [min=0] The minimum possible value.\n     * @param {number} [max=1] The maximum possible value.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(min, max, floating) {\n      if (floating && isIterateeCall(min, max, floating)) {\n        max = floating = undefined;\n      }\n      var noMin = min == null,\n          noMax = max == null;\n\n      if (floating == null) {\n        if (noMax && typeof min == 'boolean') {\n          floating = min;\n          min = 1;\n        }\n        else if (typeof max == 'boolean') {\n          floating = max;\n          noMax = true;\n        }\n      }\n      if (noMin && noMax) {\n        max = 1;\n        noMax = false;\n      }\n      min = +min || 0;\n      if (noMax) {\n        max = min;\n        min = 0;\n      } else {\n        max = +max || 0;\n      }\n      if (floating || min % 1 || max % 1) {\n        var rand = nativeRandom();\n        return nativeMin(min + (rand * (max - min + parseFloat('1e-' + ((rand + '').length - 1)))), max);\n      }\n      return baseRandom(min, max);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__foo_bar__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? (word.charAt(0).toUpperCase() + word.slice(1)) : word);\n    });\n\n    /**\n     * Capitalizes the first character of `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('fred');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      string = baseToString(string);\n      return string && (string.charAt(0).toUpperCase() + string.slice(1));\n    }\n\n    /**\n     * Deburrs `string` by converting [latin-1 supplementary letters](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * to basic latin letters and removing [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = baseToString(string);\n      return string && string.replace(reLatin1, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search from.\n     * @returns {boolean} Returns `true` if `string` ends with `target`, else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = baseToString(string);\n      target = (target + '');\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : nativeMin(position < 0 ? 0 : (+position || 0), length);\n\n      position -= target.length;\n      return position >= 0 && string.indexOf(target, position) == position;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', \"'\", and \"\\`\", in `string` to\n     * their corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional characters\n     * use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value.\n     * See [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * Backticks are escaped because in Internet Explorer < 9, they can break out\n     * of attribute values or HTML comments. See [#59](https://html5sec.org/#59),\n     * [#102](https://html5sec.org/#102), [#108](https://html5sec.org/#108), and\n     * [#133](https://html5sec.org/#133) of the [HTML5 Security Cheatsheet](https://html5sec.org/)\n     * for more details.\n     *\n     * When working with HTML you should always [quote attribute values](http://wonko.com/post/html-escaping)\n     * to reduce XSS vectors.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      // Reset `lastIndex` because in IE < 9 `String#replace` does not.\n      string = baseToString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"\\\", \"/\", \"^\", \"$\", \".\", \"|\", \"?\",\n     * \"*\", \"+\", \"(\", \")\", \"[\", \"]\", \"{\" and \"}\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https:\\/\\/lodash\\.com\\/\\)'\n     */\n    function escapeRegExp(string) {\n      string = baseToString(string);\n      return (string && reHasRegExpChars.test(string))\n        ? string.replace(reRegExpChars, escapeRegExpChar)\n        : (string || '(?:)');\n    }\n\n    /**\n     * Converts `string` to [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__foo_bar__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = baseToString(string);\n      length = +length;\n\n      var strLength = string.length;\n      if (strLength >= length || !nativeIsFinite(length)) {\n        return string;\n      }\n      var mid = (length - strLength) / 2,\n          leftLength = nativeFloor(mid),\n          rightLength = nativeCeil(mid);\n\n      chars = createPadding('', rightLength, chars);\n      return chars.slice(0, leftLength) + string + chars;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padLeft('abc', 6);\n     * // => '   abc'\n     *\n     * _.padLeft('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padLeft('abc', 3);\n     * // => 'abc'\n     */\n    var padLeft = createPadDir();\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padRight('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padRight('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padRight('abc', 3);\n     * // => 'abc'\n     */\n    var padRight = createPadDir(true);\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a hexadecimal,\n     * in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the [ES5 implementation](https://es5.github.io/#E)\n     * of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      // Firefox < 21 and Opera < 15 follow ES3 for `parseInt`.\n      // Chrome fails to trim leading <BOM> whitespace characters.\n      // See https://code.google.com/p/v8/issues/detail?id=3109 for more details.\n      if (guard ? isIterateeCall(string, radix, guard) : radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      string = trim(string);\n      return nativeParseInt(string, radix || (reHasHexPrefix.test(string) ? 16 : 10));\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=0] The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n) {\n      var result = '';\n      string = baseToString(string);\n      n = +n;\n      if (n < 1 || !string || !nativeIsFinite(n)) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        string += string;\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * Converts `string` to [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--foo-bar');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string` to [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__foo_bar__');\n     * // => 'Foo Bar'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + (word.charAt(0).toUpperCase() + word.slice(1));\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to search.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`, else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = baseToString(string);\n      position = position == null\n        ? 0\n        : nativeMin(position < 0 ? 0 : (+position || 0), string.length);\n\n      return string.lastIndexOf(target, position) == position;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is provided it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options] The options object.\n     * @param {RegExp} [options.escape] The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate] The \"evaluate\" delimiter.\n     * @param {Object} [options.imports] An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate] The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL] The sourceURL of the template's compiled source.\n     * @param {string} [options.variable] The data object variable name.\n     * @param- {Object} [otherOptions] Enables the legacy `options` param signature.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // using the \"interpolate\" delimiter to create a compiled template\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // using the HTML \"escape\" delimiter to escape data property values\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // using the \"evaluate\" delimiter to execute JavaScript and generate HTML\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the internal `print` function in \"evaluate\" delimiters\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // using the ES delimiter as an alternative to the default \"interpolate\" delimiter\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // using custom template delimiters\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // using backslashes to treat delimiters as plain text\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // using the `imports` option to import `jQuery` as `jq`\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // using the `sourceURL` option to specify a custom sourceURL for the template\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector\n     *\n     * // using the `variable` option to ensure a with-statement isn't used in the compiled template\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // using the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and a stack trace\n     * fs.writeFileSync(path.join(cwd, 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, otherOptions) {\n      // Based on John Resig's `tmpl` implementation (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (otherOptions && isIterateeCall(string, options, otherOptions)) {\n        options = otherOptions = undefined;\n      }\n      string = baseToString(string);\n      options = assignWith(baseAssign({}, otherOptions || options), settings, assignOwnDefaults);\n\n      var imports = assignWith(baseAssign({}, options.imports), settings.imports, assignOwnDefaults),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products requires returning the `match`\n        // string in order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source).apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string), trimmedRightIndex(string) + 1);\n      }\n      chars = (chars + '');\n      return string.slice(charsLeftIndex(string, chars), charsRightIndex(string, chars) + 1);\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimLeft('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimLeft('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimLeft(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(trimmedLeftIndex(string));\n      }\n      return string.slice(charsLeftIndex(string, (chars + '')));\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimRight('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimRight('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimRight(string, chars, guard) {\n      var value = string;\n      string = baseToString(string);\n      if (!string) {\n        return string;\n      }\n      if (guard ? isIterateeCall(value, chars, guard) : chars == null) {\n        return string.slice(0, trimmedRightIndex(string) + 1);\n      }\n      return string.slice(0, charsRightIndex(string, (chars + '')) + 1);\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object|number} [options] The options object or maximum string length.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.trunc('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', 24);\n     * // => 'hi-diddly-ho there, n...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.trunc('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function trunc(string, options, guard) {\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (options != null) {\n        if (isObject(options)) {\n          var separator = 'separator' in options ? options.separator : separator;\n          length = 'length' in options ? (+options.length || 0) : length;\n          omission = 'omission' in options ? baseToString(options.omission) : omission;\n        } else {\n          length = +options || 0;\n        }\n      }\n      string = baseToString(string);\n      if (length >= string.length) {\n        return string;\n      }\n      var end = length - omission.length;\n      if (end < 1) {\n        return omission;\n      }\n      var result = string.slice(0, end);\n      if (separator == null) {\n        return result + omission;\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              newEnd,\n              substring = string.slice(0, end);\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, (reFlags.exec(separator) || '') + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            newEnd = match.index;\n          }\n          result = result.slice(0, newEnd == null ? end : newEnd);\n        }\n      } else if (string.indexOf(separator, end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, `&#39;`, and `&#96;` in `string` to their\n     * corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional HTML\n     * entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = baseToString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      if (guard && isIterateeCall(string, pattern, guard)) {\n        pattern = undefined;\n      }\n      string = baseToString(string);\n      return string.match(pattern || reWords) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it is invoked.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function} func The function to attempt.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // avoid throwing errors for invalid selectors\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = restParam(function(func, args) {\n      try {\n        return func.apply(undefined, args);\n      } catch(e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and arguments of the created function. If `func` is a property name the\n     * created callback returns the property value for a given element. If `func`\n     * is an object the created callback returns `true` for elements that contain\n     * the equivalent object properties, otherwise it returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @alias iteratee\n     * @category Utility\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // wrap to create custom callback shorthands\n     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\n     *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\n     *   if (!match) {\n     *     return callback(func, thisArg);\n     *   }\n     *   return function(object) {\n     *     return match[2] == 'gt'\n     *       ? object[match[1]] > match[3]\n     *       : object[match[1]] < match[3];\n     *   };\n     * });\n     *\n     * _.filter(users, 'age__gt36');\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     */\n    function callback(func, thisArg, guard) {\n      if (guard && isIterateeCall(func, thisArg, guard)) {\n        thisArg = undefined;\n      }\n      return isObjectLike(func)\n        ? matches(func)\n        : baseCallback(func, thisArg);\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     * var getter = _.constant(object);\n     *\n     * getter() === object;\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * This method returns the first argument provided to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.identity(object) === object;\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that performs a deep comparison between a given object\n     * and `source`, returning `true` if the given object has equivalent property\n     * values, else `false`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties. For comparing a single\n     * own or inherited property value see `_.matchesProperty`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\n     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, true));\n    }\n\n    /**\n     * Creates a function that compares the property value of `path` on a given\n     * object to `value`.\n     *\n     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\n     * numbers, `Object` objects, regexes, and strings. Objects are compared by\n     * their own, not inherited, enumerable properties.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * _.find(users, _.matchesProperty('user', 'fred'));\n     * // => { 'user': 'fred' }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, true));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` on a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': _.constant(2) } } },\n     *   { 'a': { 'b': { 'c': _.constant(1) } } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.invoke(_.sortBy(objects, _.method(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    var method = restParam(function(path, args) {\n      return function(object) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path on `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = restParam(function(object, args) {\n      return function(path) {\n        return invokePath(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable function properties of a source object to the\n     * destination object. If `object` is a function then methods are added to\n     * its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options] The options object.\n     * @param {boolean} [options.chain=true] Specify whether the functions added\n     *  are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      if (options == null) {\n        var isObj = isObject(source),\n            props = isObj ? keys(source) : undefined,\n            methodNames = (props && props.length) ? baseFunctions(source, props) : undefined;\n\n        if (!(methodNames ? methodNames.length : isObj)) {\n          methodNames = false;\n          options = source;\n          source = object;\n          object = this;\n        }\n      }\n      if (!methodNames) {\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = true,\n          index = -1,\n          isFunc = isFunction(object),\n          length = methodNames.length;\n\n      if (options === false) {\n        chain = false;\n      } else if (isObject(options) && 'chain' in options) {\n        chain = options.chain;\n      }\n      while (++index < length) {\n        var methodName = methodNames[index],\n            func = source[methodName];\n\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = (function(func) {\n            return function() {\n              var chainAll = this.__chain__;\n              if (chain || chainAll) {\n                var result = object(this.__wrapped__),\n                    actions = result.__actions__ = arrayCopy(this.__actions__);\n\n                actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n                result.__chain__ = chainAll;\n                return result;\n              }\n              return func.apply(object, arrayPush([this.value()], arguments));\n            };\n          }(func));\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      root._ = oldDash;\n      return this;\n    }\n\n    /**\n     * A no-operation function that returns `undefined` regardless of the\n     * arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @example\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * _.noop(object) === undefined;\n     * // => true\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that returns the property value at `path` on a\n     * given object.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': { 'c': 2 } } },\n     *   { 'a': { 'b': { 'c': 1 } } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b.c'));\n     * // => [2, 1]\n     *\n     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the property value at a given path on `object`.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return baseGet(object, toPath(path), path + '');\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. If `end` is not specified it is\n     * set to `start` with `start` then set to `0`. If `end` is less than `start`\n     * a zero-length range is created unless a negative `step` is specified.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the new array of numbers.\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    function range(start, end, step) {\n      if (step && isIterateeCall(start, end, step)) {\n        end = step = undefined;\n      }\n      start = +start || 0;\n      step = step == null ? 1 : (+step || 0);\n\n      if (end == null) {\n        end = start;\n        start = 0;\n      } else {\n        end = +end || 0;\n      }\n      // Use `Array(length)` so engines like Chakra and V8 avoid slower modes.\n      // See https://youtu.be/XAqIpGU8ZZk#t=17m25s for more details.\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (++index < length) {\n        result[index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * Invokes the iteratee function `n` times, returning an array of the results\n     * of each invocation. The `iteratee` is bound to `thisArg` and invoked with\n     * one argument; (index).\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * var diceRolls = _.times(3, _.partial(_.random, 1, 6, false));\n     * // => [3, 6, 4]\n     *\n     * _.times(3, function(n) {\n     *   mage.castSpell(n);\n     * });\n     * // => invokes `mage.castSpell(n)` three times with `n` of `0`, `1`, and `2`\n     *\n     * _.times(3, function(n) {\n     *   this.cast(n);\n     * }, mage);\n     * // => also invokes `mage.castSpell(n)` three times\n     */\n    function times(n, iteratee, thisArg) {\n      n = nativeFloor(n);\n\n      // Exit early to avoid a JSC JIT bug in Safari 8\n      // where `Array(0)` is treated as `Array(1)`.\n      if (n < 1 || !nativeIsFinite(n)) {\n        return [];\n      }\n      var index = -1,\n          result = Array(nativeMin(n, MAX_ARRAY_LENGTH));\n\n      iteratee = bindCallback(iteratee, thisArg, 1);\n      while (++index < n) {\n        if (index < MAX_ARRAY_LENGTH) {\n          result[index] = iteratee(index);\n        } else {\n          iteratee(index);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\n     *\n     * @static\n     * @memberOf _\n     * @category Utility\n     * @param {string} [prefix] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return baseToString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} augend The first number to add.\n     * @param {number} addend The second number to add.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    function add(augend, addend) {\n      return (+augend || 0) + (+addend || 0);\n    }\n\n    /**\n     * Calculates `n` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Calculates `n` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Gets the maximum value of `collection`. If `collection` is empty or falsey\n     * `-Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => -Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.max(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'fred', 'age': 40 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.max(users, 'age');\n     * // => { 'user': 'fred', 'age': 40 }\n     */\n    var max = createExtremum(gt, NEGATIVE_INFINITY);\n\n    /**\n     * Gets the minimum value of `collection`. If `collection` is empty or falsey\n     * `Infinity` is returned. If an iteratee function is provided it is invoked\n     * for each value in `collection` to generate the criterion by which the value\n     * is ranked. The `iteratee` is bound to `thisArg` and invoked with three\n     * arguments: (value, index, collection).\n     *\n     * If a property name is provided for `iteratee` the created `_.property`\n     * style callback returns the property value of the given element.\n     *\n     * If a value is also provided for `thisArg` the created `_.matchesProperty`\n     * style callback returns `true` for elements that have a matching property\n     * value, else `false`.\n     *\n     * If an object is provided for `iteratee` the created `_.matches` style\n     * callback returns `true` for elements that have the properties of the given\n     * object, else `false`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => Infinity\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * _.min(users, function(chr) {\n     *   return chr.age;\n     * });\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // using the `_.property` callback shorthand\n     * _.min(users, 'age');\n     * // => { 'user': 'barney', 'age': 36 }\n     */\n    var min = createExtremum(lt, POSITIVE_INFINITY);\n\n    /**\n     * Calculates `n` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {number} n The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Gets the sum of the values in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @category Math\n     * @param {Array|Object|string} collection The collection to iterate over.\n     * @param {Function|Object|string} [iteratee] The function invoked per iteration.\n     * @param {*} [thisArg] The `this` binding of `iteratee`.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 6]);\n     * // => 10\n     *\n     * _.sum({ 'a': 4, 'b': 6 });\n     * // => 10\n     *\n     * var objects = [\n     *   { 'n': 4 },\n     *   { 'n': 6 }\n     * ];\n     *\n     * _.sum(objects, function(object) {\n     *   return object.n;\n     * });\n     * // => 10\n     *\n     * // using the `_.property` callback shorthand\n     * _.sum(objects, 'n');\n     * // => 10\n     */\n    function sum(collection, iteratee, thisArg) {\n      if (thisArg && isIterateeCall(collection, iteratee, thisArg)) {\n        iteratee = undefined;\n      }\n      iteratee = getCallback(iteratee, thisArg, 3);\n      return iteratee.length == 1\n        ? arraySum(isArray(collection) ? collection : toIterable(collection), iteratee)\n        : baseSum(collection, iteratee);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    // Add functions to the `Map` cache.\n    MapCache.prototype['delete'] = mapDelete;\n    MapCache.prototype.get = mapGet;\n    MapCache.prototype.has = mapHas;\n    MapCache.prototype.set = mapSet;\n\n    // Add functions to the `Set` cache.\n    SetCache.prototype.push = cachePush;\n\n    // Assign cache to `_.memoize`.\n    memoize.Cache = MapCache;\n\n    // Add functions that return wrapped values when chaining.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.callback = callback;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.functions = functions;\n    lodash.groupBy = groupBy;\n    lodash.indexBy = indexBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.invert = invert;\n    lodash.invoke = invoke;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.modArgs = modArgs;\n    lodash.negate = negate;\n    lodash.omit = omit;\n    lodash.once = once;\n    lodash.pairs = pairs;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pluck = pluck;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.restParam = restParam;\n    lodash.set = set;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortByAll = sortByAll;\n    lodash.sortByOrder = sortByOrder;\n    lodash.spread = spread;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.times = times;\n    lodash.toArray = toArray;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.union = union;\n    lodash.uniq = uniq;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.where = where;\n    lodash.without = without;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.backflow = flowRight;\n    lodash.collect = map;\n    lodash.compose = flowRight;\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.extend = assign;\n    lodash.iteratee = callback;\n    lodash.methods = functions;\n    lodash.object = zipObject;\n    lodash.select = filter;\n    lodash.tail = rest;\n    lodash.unique = uniq;\n\n    // Add functions to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions that return unwrapped values when chaining.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.deburr = deburr;\n    lodash.endsWith = endsWith;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.findWhere = findWhere;\n    lodash.first = first;\n    lodash.floor = floor;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isBoolean = isBoolean;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isMatch = isMatch;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isString = isString;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.min = min;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padLeft = padLeft;\n    lodash.padRight = padRight;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.sum = sum;\n    lodash.template = template;\n    lodash.trim = trim;\n    lodash.trimLeft = trimLeft;\n    lodash.trimRight = trimRight;\n    lodash.trunc = trunc;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.words = words;\n\n    // Add aliases.\n    lodash.all = every;\n    lodash.any = some;\n    lodash.contains = includes;\n    lodash.eq = isEqual;\n    lodash.detect = find;\n    lodash.foldl = reduce;\n    lodash.foldr = reduceRight;\n    lodash.head = first;\n    lodash.include = includes;\n    lodash.inject = reduce;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!lodash.prototype[methodName]) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), false);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add functions capable of returning wrapped and unwrapped values when chaining.\n    lodash.sample = sample;\n\n    lodash.prototype.sample = function(n) {\n      if (!this.__chain__ && n == null) {\n        return sample(this.value());\n      }\n      return this.thru(function(value) {\n        return sample(value, n);\n      });\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type string\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        var filtered = this.__filtered__;\n        if (filtered && !index) {\n          return new LazyWrapper(this);\n        }\n        n = n == null ? 1 : nativeMax(nativeFloor(n) || 0, 0);\n\n        var result = this.clone();\n        if (filtered) {\n          result.__takeCount__ = nativeMin(result.__takeCount__, n);\n        } else {\n          result.__views__.push({ 'size': n, 'type': methodName + (result.__dir__ < 0 ? 'Right' : '') });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type != LAZY_MAP_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee, thisArg) {\n        var result = this.clone();\n        result.__iteratees__.push({ 'iteratee': getCallback(iteratee, thisArg, 1), 'type': type });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.first` and `_.last`.\n    arrayEach(['first', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.rest`.\n    arrayEach(['initial', 'rest'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.pluck` and `_.where`.\n    arrayEach(['pluck', 'where'], function(methodName, index) {\n      var operationName = index ? 'filter' : 'map',\n          createCallback = index ? baseMatches : property;\n\n      LazyWrapper.prototype[methodName] = function(value) {\n        return this[operationName](createCallback(value));\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.reject = function(predicate, thisArg) {\n      predicate = getCallback(predicate, thisArg, 1);\n      return this.filter(function(value) {\n        return !predicate(value);\n      });\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = start == null ? 0 : (+start || 0);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = (+end || 0);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate, thisArg) {\n      return this.reverse().takeWhile(predicate, thisArg).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(POSITIVE_INFINITY);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|map|reject)|While$/.test(methodName),\n          retUnwrapped = /^(?:first|last)$/.test(methodName),\n          lodashFunc = lodash[retUnwrapped ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName];\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var args = retUnwrapped ? [1] : arguments,\n            chainAll = this.__chain__,\n            value = this.__wrapped__,\n            isHybrid = !!this.__actions__.length,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var interceptor = function(value) {\n          return (retUnwrapped && chainAll)\n            ? lodashFunc(value, 1)[0]\n            : lodashFunc.apply(undefined, arrayPush([value], args));\n        };\n\n        var action = { 'func': thru, 'args': [interceptor], 'thisArg': undefined },\n            onlyLazy = isLazy && !isHybrid;\n\n        if (retUnwrapped && !chainAll) {\n          if (onlyLazy) {\n            value = value.clone();\n            value.__actions__.push(action);\n            return func.call(value);\n          }\n          return lodashFunc.call(undefined, this.value())[0];\n        }\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push(action);\n          return new LodashWrapper(result, chainAll);\n        }\n        return this.thru(interceptor);\n      };\n    });\n\n    // Add `Array` and `String` methods to `lodash.prototype`.\n    arrayEach(['join', 'pop', 'push', 'replace', 'shift', 'sort', 'splice', 'split', 'unshift'], function(methodName) {\n      var func = (/^(?:replace|split)$/.test(methodName) ? stringProto : arrayProto)[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:join|pop|replace|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          return func.apply(this.value(), args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(value, args);\n        });\n      };\n    });\n\n    // Map minified function names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name,\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybridWrapper(undefined, BIND_KEY_FLAG).name] = [{ 'name': 'wrapper', 'func': undefined }];\n\n    // Add functions to the lazy wrapper.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chaining functions to the `lodash` wrapper.\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.concat = wrapperConcat;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toString = wrapperToString;\n    lodash.prototype.run = lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add function aliases to the `lodash` wrapper.\n    lodash.prototype.collect = lodash.prototype.map;\n    lodash.prototype.head = lodash.prototype.first;\n    lodash.prototype.select = lodash.prototype.filter;\n    lodash.prototype.tail = lodash.prototype.rest;\n\n    return lodash;\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers like r.js check for condition patterns like the following:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose lodash to the global object when an AMD loader is present to avoid\n    // errors in cases where lodash is loaded by a script tag and not intended\n    // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\n    // more details.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\n  else if (freeExports && freeModule) {\n    // Export for Node.js or RingoJS.\n    if (moduleExports) {\n      (freeModule.exports = _)._ = _;\n    }\n    // Export for Rhino with CommonJS support.\n    else {\n      freeExports._ = _;\n    }\n  }\n  else {\n    // Export for a browser or Rhino.\n    root._ = _;\n  }\n}.call(this));\n"]}