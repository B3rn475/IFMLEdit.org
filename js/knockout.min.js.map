{"version":3,"sources":["knockout.js"],"names":["undefined","factory","window","this","eval","document","navigator","jQueryInstance","JSON","jQuery","koExports","amdRequire","ko","exportSymbol","koPath","object","tokens","split","target","i","length","exportProperty","owner","publicName","version","options","deferUpdates","useOnlyNativeEvents","foreachHidesDestroyed","utils","hasOwnProperty","Object","prototype","objectForEach","obj","action","prop","call","extend","source","setPrototypeOf","proto","__proto__","canSetPrototype","Array","knownEvents","knownEventTypesByEventName","test","userAgent","eventType","knownEventsForType","j","jQueryEventAttachName","eventsThatMustBeRegisteredUsingAttachEvent","propertychange","ieVersion","div","createElement","iElems","getElementsByTagName","innerHTML","isIe6","isIe7","cssClassNameRegex","toggleObjectClassPropertyString","classNames","shouldHaveClass","currentClassNames","match","arrayForEach","className","addOrRemoveItem","join","fieldsIncludedWithJsonPost","array","actionOwner","arrayIndexOf","indexOf","item","arrayFirst","predicate","predicateOwner","arrayRemoveItem","itemToRemove","index","splice","shift","arrayGetDistinctValues","result","push","arrayMap","mapping","mappingOwner","arrayFilter","arrayPushAll","valuesToPush","apply","value","included","existingEntryIndex","peekObservable","setPrototypeOfOrExtend","objectMap","emptyDomNode","domNode","firstChild","removeNode","moveCleanedNodesToContainerElement","nodes","nodesArray","makeArray","container","ownerDocument","appendChild","cleanNode","cloneNodes","shouldCleanNodes","newNodesArray","clonedNode","cloneNode","setDomNodeChildren","childNodes","replaceDomNodes","nodeToReplaceOrNodeArray","nodesToReplaceArray","nodeType","insertionPoint","parent","parentNode","insertBefore","fixUpContinuousNodeArray","continuousNodeArray","current","last","nextSibling","setOptionNodeSelectionState","optionNode","isSelected","setAttribute","selected","stringTrim","string","trim","toString","replace","stringStartsWith","startsWith","substring","domNodeIsContainedBy","node","containedByNode","contains","compareDocumentPosition","domNodeIsAttachedToDocument","documentElement","anyDomNodeIsAttachedToDocument","tagNameLower","element","tagName","toLowerCase","catchFunctionErrors","delegate","arguments","e","setTimeout","handler","timeout","deferError","error","registerEventHandler","wrappedHandler","mustUseAttachEvent","addEventListener","attachEvent","Error","attachEventHandler","event","attachEventName","domNodeDisposal","addDisposeCallback","detachEvent","triggerEvent","useClickWorkaround","type","inputType","isClickOnCheckableElement","createEvent","dispatchEvent","eventCategory","initEvent","click","fireEvent","unwrapObservable","isObservable","peek","toggleDomNodeCssClass","addOrRemoveFn","classList","setTextContent","textContent","innerTextNode","virtualElements","createTextNode","data","forceRefresh","setElementName","name","escapedName","r","charCodeAt","mergeAttributes","elem","style","zoom","ensureSelectElementIsRenderedCorrectly","selectElement","originalWidth","width","range","min","max","arrayLikeObject","createSymbolOrString","identifier","getFormFields","form","fieldName","fields","concat","isMatchingField","field","matches","parseJson","jsonString","parse","Function","stringifyJson","replacer","space","stringify","postJson","urlOrForm","params","includeFields","url","originalForm","key","display","method","input","body","submit","removeChild","originalFunction","partialArgs","slice","args","domData","getDataForNode","clear","uniqueId","dataStoreKeyExpandoPropertyName","Date","getTime","dataStore","createIfNotFound","dataStoreKey","dataForNode","get","set","getOrSet","nextKey","domDataKey","cleanableNodeTypes","1","8","9","cleanableNodeTypesWithDescendants","getDisposeCallbacksCollection","allDisposeCallbacks","cleanSingleNode","callbacks","cleanNodesInList","nodeList","onlyComments","lastCleanedNode","cleanedNodes","callback","removeDisposeCallback","callbacksCollection","destroyCallbacksCollection","dependencyDetection","ignore","cleanExternalData","none","table","tr","select","lookup","thead","tbody","tfoot","td","th","option","optgroup","mayRequireCreateElementHack","simpleHtmlParse","html","documentContext","windowContext","tags","wrap","m","getWrap","depth","markup","lastChild","parseHtmlFragment","elems","jQueryHtmlParse","parseHtmlForTemplateNodes","parentElement","setHtml","parsedNodes","memoization","memos","randomMax8HexChars","Math","random","memoize","memoId","unmemoize","callbackParams","unmemoizeDomNodeAndDescendants","extraCallbackParamsArray","findMemoNodes","rootNode","appendToArray","parseMemoText","nodeValue","combinedParams","memoText","tasks","scheduler","taskQueue","taskQueueLength","nextHandle","nextIndexToProcess","processTasks","task","mark","countMarks","ex","scheduledProcess","MutationObserver","observe","attributes","toggle","script","onreadystatechange","schedule","func","cancel","handle","resetForTesting","runEarly","extenders","throttle","writeTimeoutInstance","dependentObservable","read","write","clearTimeout","rateLimit","limitFunction","_deferUpdates","debounce","limit","deferred","ignoreUpdates","notify","notifyWhen","valuesArePrimitiveAndEqual","primitiveTypes","boolean","number","a","b","timeoutInstance","limitNotifySubscribers","_limitBeforeChange","_origNotifySubscribers","_limitChange","subscription","disposeCallback","_target","_callback","_disposeCallback","_isDisposed","_node","_domNodeDisposalCallback","dispose","disposeWhenNodeIsRemoved","bind","subscribable","ko_subscribable_fn","init","instance","_subscriptions","change","_versionNumber","subscribe","callbackTarget","self","boundCallback","afterSubscriptionRemove","beforeSubscriptionAdd","notifySubscribers","valueToNotify","updateVersion","hasSubscriptionsForEvent","subs","_changeSubscriptions","begin","end","getVersion","hasChanged","versionToCheck","ignoreBeforeChange","notifyNextChange","previousValue","pendingValue","didUpdate","selfIsObservable","finish","_notificationIsPending","_evalIfChanged","shouldNotify","isDifferent","isDirty","_recordUpdate","_notifyNextChangeIfValueIsDifferent","getSubscriptionsCount","total","eventName","subscriptions","oldValue","newValue","requestedExtenders","extenderHandler","isSubscribable","computedContext","currentFrame","outerFrames","lastId","pop","registerDependency","_id","callbackArgs","getDependenciesCount","computed","getDependencies","isInitial","ignoreDependencies","observableLatestValue","observable","initialValue","valueWillMutate","valueHasMutated","observableFn","equalityComparer","protoProperty","isWriteableObservable","hasWriteFunction","observableArray","initialValues","trackArrayChanges","remove","valueOrPredicate","underlyingArray","removedValues","removeAll","arrayOfValues","allValues","destroy","destroyAll","oldItem","newItem","sorted","compareFunction","arrayCopy","sort","reversed","reverse","methodName","cacheDiffForKnownOperation","methodCallResult","isObservableArray","compareArrayOptions","changeSubscription","spectateSubscription","previousContents","trackingChanges","cachedDiff","pendingChanges","underlyingBeforeSubscriptionAddFunction","underlyingAfterSubscriptionRemoveFunction","notifyChanges","changes","currentContents","compareArrays","getChanges","trackChanges","rawArray","operationName","diff","arrayLength","argsLength","offset","pushDiff","startIndex","endDeleteIndex","endAddIndex","endIndex","additions","deletions","argsIndex","findMovesInArrayComparison","status","computedState","computedDisposeDependencyCallback","id","entryToDispose","computedBeginDependencyDetectionCallback","computedObservable","state","isDisposed","disposalCount","disposalCandidates","addDependencyTracking","dependencyTracking","isSleeping","subscribeToDependency","evaluatorFunctionOrOptions","evaluatorFunctionTarget","writeFunction","latestValue","isStale","isBeingEvaluated","suppressDisposalUntilDisposeWhenReturnsFalse","pure","readFunction","disposeWhen","domNodeDisposalCallback","dependenciesCount","evaluationTimeoutInstance","haveDependenciesChanged","evaluateImmediate","computedFn","pureComputedOverrides","deferEvaluationOverrides","isActive","dependentObservables","dependency","_order","hasAncestorDependency","obs","dependencies","dep","trackingObj","_version","_evalDelayed","markDirty","respondToChange","evaluatePossiblyAsync","dirtySub","changeSub","throttleEvaluationTimeout","notifyChange","changed","evaluateImmediate_CallReadWithDependencyDetection","dependencyDetectionContext","evaluateImmediate_CallReadThenEndDependencyDetection","_latestValue","evaluate","isChange","dependenciesOrder","order","componentLoadingOperationUniqueId","protoProp","isComputed","isPureComputed","pureComputed","mapJsObjectGraph","rootObject","mapInputCallback","visitedObjects","objectLookup","RegExp","String","Number","Boolean","outputProperties","save","visitorCallback","propertyName","visitPropertiesOrArrayEntries","indexer","propertyValue","previouslyMappedValue","keys","values","toJS","valueToMap","toJSON","plainJavaScriptObject","constructor","existingIndex","when","context","kowhen","resolve","Promise","selectExtensions","readValue","bindingHandlers","optionValueDomDataKey","getAttributeNode","specified","text","selectedIndex","writeValue","allowUnset","optionValue","selection","n","size","expressionRewriting","javaScriptReservedWords","javaScriptAssignmentTarget","bindingToken","divisionLookBehind","keywordRegexLookBehind","in","return","typeof","parseObjectLiteral","objectLiteralString","str","toks","tok","c","unknown","substr","twoWayBindings","bindingRewriteValidators","preProcessBindings","bindingsStringOrKeyValueArray","bindingOptions","processKeyValue","val","writableVal","bindingParams","expression","getWriteableValue","writeKey","propertyAccessorResultStrings","makeValueAccessors","resultStrings","keyValueArray","keyValue","keyValueArrayContainsKey","writeValueToProperty","property","allBindings","checkIfDifferent","propWriters","commentNodesHaveTextProperty","createComment","startCommentRegex","endCommentRegex","htmlTagsWithOptionallyClosingChildren","ul","ol","isStartComment","isEndComment","matchedEndCommentDataKey","getVirtualChildren","startComment","allowUnbalanced","currentNode","children","getMatchingEndComment","allVirtualChildren","getUnbalancedChildTags","childNode","captureRemaining","matchingEndComment","allowedBindings","emptyNode","virtualChildren","endCommentNode","prepend","containerNode","nodeToPrepend","insertBeforeNode","insertAfter","nodeToInsert","insertAfterNode","isUnmatchedEndComment","hasBindingValue","virtualNodeBindingValue","regexMatch","normaliseVirtualElementDomStructure","elementVerified","unbalancedTags","nodeToInsertBefore","bindingProvider","bindingCache","nodeHasBindings","getAttribute","components","getBindings","bindingContext","bindingsString","parsedBindings","addBindingsForCustomElement","getBindingAccessors","valueAccessors","getBindingsString","parseBindingsString","cache","cacheKey","rewrittenBindings","createBindingsStringEvaluator","createBindingsStringEvaluatorViaCache","bindingFunction","message","contextSubscribable","contextAncestorBindingInfo","contextDataDependency","bindingDoesNotRecurseIntoElementTypes","textarea","template","bindingKey","inheritParentVm","dataItemOrAccessor","parentContext","dataItemAlias","extendCallback","updateContext","dataItemOrObservable","isFunc","realDataItemOrAccessor","dataItem","shouldInheritData","dataDependency","unshift","properties","boundElementDomDataKey","asyncContextDispose","bindingInfo","asyncContext","notifyAncestor","AsyncCompleteContext","ancestorBindingInfo","asyncDescendants","childrenComplete","makeValueAccessor","evaluateValueAccessor","valueAccessor","makeAccessorsFromFunction","getBindingsAndMakeAccessors","applyBindingsToDescendantsInternal","elementOrVirtualElement","nextInQueue","currentChild","provider","preprocessNode","applyBindingsToNodeAndDescendantsInternal","bindingEvent","nodeVerified","bindingContextForDescendants","isElement","applyBindingsToNodeInternal","sourceBindings","bindings","alreadyBound","notifiedEvents","bindingsUpdater","bindingHandlerThatControlsDescendantBindings","contextToExtend","getValueAccessor","dataFor","descendantsComplete","startPossiblyAsyncContentBinding","orderedBindings","bindingsConsidered","cyclicDependencyStack","pushBinding","binding","bindingDependencyKey","topologicalSortBindings","bindingKeyAndHandler","handlerInitFn","handlerUpdateFn","bindingName","validateThatBindingIsAllowedForVirtualElements","initResult","shouldBindDescendants","getBindingContext","viewModelOrBindingContext","extendContextCallback","descendantComplete","completeChildren","eventSubscribable","ctx","storedBindingContextForNode","applyBindingAccessorsToNode","applyBindingsToNode","makeBindingAccessors","applyBindingsToDescendants","applyBindings","contextFor","loadingSubscribablesCache","loadedDefinitionsCache","getObjectOwnProperty","propName","getFirstResultFromLoaders","argsExceptCallback","candidateLoaders","currentCandidateLoader","methodInstance","wasAborted","componentName","cachedDefinition","isSynchronousComponent","definition","completedAsync","config","beginLoadingComponent","loadComponentAndNotify","clearCachedDefinition","_getFirstResultFromLoaders","defaultConfigRegistry","cloneNodesFromTemplateSourceElement","elemInstance","isDocumentFragment","content","DocumentFragment","possiblyGetConfigFromAmd","errorCallback","module","__esModule","default","makeErrorCallback","register","isRegistered","unregister","defaultLoader","getConfig","loadComponent","loadedConfig","makeCallBackWhenZero","tryIssueCallback","templateConfig","viewModelConfig","resolvedTemplate","resolvedViewModel","resolveConfig","loadTemplate","HTMLElement","getElementById","resolveTemplate","loadViewModel","resolveViewModel","fixedInstance","componentInfo","_allRegisteredComponents","componentBindingValue","getComponentParamsFromCustomElement","nativeBindingProviderInstance","paramsAttribute","rawParamComputedValues","paramValue","paramName","paramValueComputed","$raw","createDocumentFragment","newDocFrag","allComponents","ignored1","ignored2","currentViewModel","currentLoadingOperationId","afterRenderSub","disposeAssociatedComponentViewModel","currentViewModelDispose","originalChildNodes","componentParams","loadingOperationId","componentDefinition","clonedNodesArray","cloneTemplateIntoElement","componentViewModel","componentViewModelFactory","createViewModel","templateNodes","childBindingContext","controlsDescendantBindings","attrHtmlToJavaScriptMap","class","for","update","attrName","attrValue","prefixLen","namespace","lookupNamespaceURI","toRemove","removeAttributeNS","removeAttribute","setAttributeNS","after","checkedValue","useElementValue","updateModel","isChecked","checked","elemValue","isRadio","modelValue","valueIsArray","writableValue","rawValueIsNonArrayObservable","saveOldValue","oldElemValue","isCheckbox","rawValue","disabled","viewModel","eventsToHandle","handlerReturnValue","handlerFunction","argsForHandler","preventDefault","returnValue","bubble","cancelBubble","stopPropagation","makeTemplateValueAccessor","unwrappedValue","foreach","as","noChildContext","includeDestroyed","afterAdd","beforeRemove","afterRender","beforeMove","afterMove","templateEngine","nativeTemplateEngine","handleElementFocusChange","isFocused","ownerDoc","active","activeElement","handleElementFocusIn","handleElementFocusOut","focus","blur","makeWithIfBinding","isWith","isNot","didDisplayOnLastUpdate","savedNodes","completeOnRender","needAsyncContext","renderOnEveryChange","contextOptions","exportDependencies","childContext","shouldDisplay","innerContext","captionPlaceholder","selectedOptions","filteredArray","selectWasPreviouslyEmpty","multiple","previousScrollTop","scrollTop","unwrappedArray","valueAllowUnset","arrayToDomNodeChildrenOptions","previousSelectedValues","applyToObject","defaultValue","predicateType","captionValue","itemUpdate","setSelectionCallback","arrayEntry","newOptions","setDomNodeChildrenFromArrayMapping","oldOptions","optionText","abs","updateFromView","valueToWrite","updateFromModel","updateFromModelComputed","notifyImmediately","styleName","styleValue","setProperty","all","letter","toUpperCase","previousStyle","isNaN","operaVersion","safariVersion","firefoxVersion","edgeVersion","parseVersion","parseFloat","opera","parseInt","selectionChangeRegisteredName","selectionChangeHandlerName","selectionChangeHandler","registerForSelectionChangeEvent","timeoutHandle","elementValueBeforeEvent","previousElementValue","elementValue","deferUpdateModel","ieUpdateModel","ourUpdate","updateView","onEvent","preprocess","addBinding","currentIndex","isInputElement","eventsToCatch","requestedEventsToCatch","propertyChangedFired","valueUpdateHandler","autocomplete","isCurrentlyVisible","templateSource","templateDocument","templateSources","domElement","anonymousTemplate","rewriterCallback","rewritten","templateRewriting","memoizeDataBindingAttributeSyntaxRegex","memoizeVirtualContainerBindingSyntaxRegex","constructMemoizedTagReplacement","dataBindAttributeValue","tagToRetain","nodeName","dataBindKeyValueArray","allValidators","validator","possibleErrorMessage","validateDataBindValuesForRewriting","applyBindingsToNextSiblingScript","ensureTemplateIsRewritten","htmlString","memoizeBindingAttributeSyntax","applyMemoizedBindingsToNextSibling","nodeToBind","templateType","elemContentsProperty","dataDomDataPrefix","templatesDomDataKey","getTemplateDomData","setTemplateDomData","templateData","containerData","alwaysCheckText","textData","_templateEngine","invokeForEachNodeInContinuousRange","firstNode","lastNode","firstOutOfRangeNode","activateBindingsOnContinuousNodeArray","nextNodeInRange","nodePreviousSibling","previousSibling","newNodes","getFirstNodeFromPossibleArray","nodeOrNodeArray","executeTemplate","targetNodeOrNodeArray","renderMode","templateEngineToUse","renderedNodesArray","haveAddedNodesToParent","resolveTemplateName","setTemplateEngine","renderTemplate","dataOrBindingContext","firstTargetNode","activelyDisposeWhenNodeIsRemoved","templateName","renderTemplateForEach","arrayOrObservableArray","targetNode","parentBindingContext","arrayItemContext","asName","executeTemplateForArrayItem","arrayValue","activateBindingsCallback","addedNodesArray","newArray","changeList","shouldHideDestroyed","templateComputedDomDataKey","cleanContainerDomDataKey","bindingValue","templateComputed","dataArray","innerBindingContext","newComputed","oldComputed","disposeOldComputedAndStoreNewOne","parsedBindingValue","left","right","limitFailedCompares","failedCompares","l","leftItem","rightItem","compareSmallArrayToBigArray","smlArray","bigArray","statusNotInSml","statusNotInBig","smlIndex","bigIndex","thisRow","lastRow","bigIndexMaxForRow","myMin","myMax","editDistanceMatrix","smlIndexMax","bigIndexMax","compareRange","maxDistance","northDistance","westDistance","meMinusOne","editScript","notInSml","notInBig","oldArray","dontLimitMoves","mapNodeAndRefreshWhenChanged","callbackAfterAddingNodes","mappedNodes","newMappedNodes","lastMappingResultDomDataKey","deletedItemDummyValue","mapData","lastMappingResult","isFirstExecution","newMappingResult","lastMappingResultIndex","currentArrayIndex","nodesToDelete","itemsToMoveFirstIndexes","itemsForBeforeRemoveCallbacks","itemsForMoveCallbacks","itemsForAfterAddCallbacks","countWaitingForRemove","itemAdded","indexObservable","itemMovedOrRetained","oldPosition","callCallback","items","lastArray","x","compareOptions","sparse","editScriptItem","movedIndex","itemIndex","initialized","templateText","jqueryTmplTemplateEngine","jQueryTmplVersion","ensureHasReferencedJQueryTemplates","precompiled","resultNodes","compiledTemplate","jQueryTemplateOptions","koBindingContext","templateMarkup","open","close","jqueryTmplTemplateEngineInstance","define","exports"],"mappings":"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","file":"knockout.min.js","sourcesContent":["/*!\n * Knockout JavaScript library v3.5.1\n * (c) The Knockout.js team - http://knockoutjs.com/\n * License: MIT (http://www.opensource.org/licenses/mit-license.php)\n */\n\n(function(){\nvar DEBUG=true;\n(function(undefined){\n    // (0, eval)('this') is a robust way of getting a reference to the global object\n    // For details, see http://stackoverflow.com/questions/14119988/return-this-0-evalthis/14120023#14120023\n    var window = this || (0, eval)('this'),\n        document = window['document'],\n        navigator = window['navigator'],\n        jQueryInstance = window[\"jQuery\"],\n        JSON = window[\"JSON\"];\n\n    if (!jQueryInstance && typeof jQuery !== \"undefined\") {\n        jQueryInstance = jQuery;\n    }\n(function(factory) {\n    // Support three module loading scenarios\n    if (typeof define === 'function' && define['amd']) {\n        // [1] AMD anonymous module\n        define(['exports', 'require'], factory);\n    } else if (typeof exports === 'object' && typeof module === 'object') {\n        // [2] CommonJS/Node.js\n        factory(module['exports'] || exports);  // module.exports is for Node.js\n    } else {\n        // [3] No module loader (plain <script> tag) - put directly in global namespace\n        factory(window['ko'] = {});\n    }\n}(function(koExports, amdRequire){\n// Internally, all KO objects are attached to koExports (even the non-exported ones whose names will be minified by the closure compiler).\n// In the future, the following \"ko\" variable may be made distinct from \"koExports\" so that private objects are not externally reachable.\nvar ko = typeof koExports !== 'undefined' ? koExports : {};\n// Google Closure Compiler helpers (used only to make the minified file smaller)\nko.exportSymbol = function(koPath, object) {\n    var tokens = koPath.split(\".\");\n\n    // In the future, \"ko\" may become distinct from \"koExports\" (so that non-exported objects are not reachable)\n    // At that point, \"target\" would be set to: (typeof koExports !== \"undefined\" ? koExports : ko)\n    var target = ko;\n\n    for (var i = 0; i < tokens.length - 1; i++)\n        target = target[tokens[i]];\n    target[tokens[tokens.length - 1]] = object;\n};\nko.exportProperty = function(owner, publicName, object) {\n    owner[publicName] = object;\n};\nko.version = \"3.5.1\";\n\nko.exportSymbol('version', ko.version);\n// For any options that may affect various areas of Knockout and aren't directly associated with data binding.\nko.options = {\n    'deferUpdates': false,\n    'useOnlyNativeEvents': false,\n    'foreachHidesDestroyed': false\n};\n\n//ko.exportSymbol('options', ko.options);   // 'options' isn't minified\nko.utils = (function () {\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    function objectForEach(obj, action) {\n        for (var prop in obj) {\n            if (hasOwnProperty.call(obj, prop)) {\n                action(prop, obj[prop]);\n            }\n        }\n    }\n\n    function extend(target, source) {\n        if (source) {\n            for(var prop in source) {\n                if(hasOwnProperty.call(source, prop)) {\n                    target[prop] = source[prop];\n                }\n            }\n        }\n        return target;\n    }\n\n    function setPrototypeOf(obj, proto) {\n        obj.__proto__ = proto;\n        return obj;\n    }\n\n    var canSetPrototype = ({ __proto__: [] } instanceof Array);\n    var canUseSymbols = !DEBUG && typeof Symbol === 'function';\n\n    // Represent the known event types in a compact way, then at runtime transform it into a hash with event name as key (for fast lookup)\n    var knownEvents = {}, knownEventTypesByEventName = {};\n    var keyEventTypeName = (navigator && /Firefox\\/2/i.test(navigator.userAgent)) ? 'KeyboardEvent' : 'UIEvents';\n    knownEvents[keyEventTypeName] = ['keyup', 'keydown', 'keypress'];\n    knownEvents['MouseEvents'] = ['click', 'dblclick', 'mousedown', 'mouseup', 'mousemove', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave'];\n    objectForEach(knownEvents, function(eventType, knownEventsForType) {\n        if (knownEventsForType.length) {\n            for (var i = 0, j = knownEventsForType.length; i < j; i++)\n                knownEventTypesByEventName[knownEventsForType[i]] = eventType;\n        }\n    });\n    var eventsThatMustBeRegisteredUsingAttachEvent = { 'propertychange': true }; // Workaround for an IE9 issue - https://github.com/SteveSanderson/knockout/issues/406\n\n    // Detect IE versions for bug workarounds (uses IE conditionals, not UA string, for robustness)\n    // Note that, since IE 10 does not support conditional comments, the following logic only detects IE < 10.\n    // Currently this is by design, since IE 10+ behaves correctly when treated as a standard browser.\n    // If there is a future need to detect specific versions of IE10+, we will amend this.\n    var ieVersion = document && (function() {\n        var version = 3, div = document.createElement('div'), iElems = div.getElementsByTagName('i');\n\n        // Keep constructing conditional HTML blocks until we hit one that resolves to an empty fragment\n        while (\n            div.innerHTML = '<!--[if gt IE ' + (++version) + ']><i></i><![endif]-->',\n            iElems[0]\n        ) {}\n        return version > 4 ? version : undefined;\n    }());\n    var isIe6 = ieVersion === 6,\n        isIe7 = ieVersion === 7;\n\n    function isClickOnCheckableElement(element, eventType) {\n        if ((ko.utils.tagNameLower(element) !== \"input\") || !element.type) return false;\n        if (eventType.toLowerCase() != \"click\") return false;\n        var inputType = element.type;\n        return (inputType == \"checkbox\") || (inputType == \"radio\");\n    }\n\n    // For details on the pattern for changing node classes\n    // see: https://github.com/knockout/knockout/issues/1597\n    var cssClassNameRegex = /\\S+/g;\n\n    var jQueryEventAttachName;\n\n    function toggleDomNodeCssClass(node, classNames, shouldHaveClass) {\n        var addOrRemoveFn;\n        if (classNames) {\n            if (typeof node.classList === 'object') {\n                addOrRemoveFn = node.classList[shouldHaveClass ? 'add' : 'remove'];\n                ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n                    addOrRemoveFn.call(node.classList, className);\n                });\n            } else if (typeof node.className['baseVal'] === 'string') {\n                // SVG tag .classNames is an SVGAnimatedString instance\n                toggleObjectClassPropertyString(node.className, 'baseVal', classNames, shouldHaveClass);\n            } else {\n                // node.className ought to be a string.\n                toggleObjectClassPropertyString(node, 'className', classNames, shouldHaveClass);\n            }\n        }\n    }\n\n    function toggleObjectClassPropertyString(obj, prop, classNames, shouldHaveClass) {\n        // obj/prop is either a node/'className' or a SVGAnimatedString/'baseVal'.\n        var currentClassNames = obj[prop].match(cssClassNameRegex) || [];\n        ko.utils.arrayForEach(classNames.match(cssClassNameRegex), function(className) {\n            ko.utils.addOrRemoveItem(currentClassNames, className, shouldHaveClass);\n        });\n        obj[prop] = currentClassNames.join(\" \");\n    }\n\n    return {\n        fieldsIncludedWithJsonPost: ['authenticity_token', /^__RequestVerificationToken(_.*)?$/],\n\n        arrayForEach: function (array, action, actionOwner) {\n            for (var i = 0, j = array.length; i < j; i++) {\n                action.call(actionOwner, array[i], i, array);\n            }\n        },\n\n        arrayIndexOf: typeof Array.prototype.indexOf == \"function\"\n            ? function (array, item) {\n                return Array.prototype.indexOf.call(array, item);\n            }\n            : function (array, item) {\n                for (var i = 0, j = array.length; i < j; i++) {\n                    if (array[i] === item)\n                        return i;\n                }\n                return -1;\n            },\n\n        arrayFirst: function (array, predicate, predicateOwner) {\n            for (var i = 0, j = array.length; i < j; i++) {\n                if (predicate.call(predicateOwner, array[i], i, array))\n                    return array[i];\n            }\n            return undefined;\n        },\n\n        arrayRemoveItem: function (array, itemToRemove) {\n            var index = ko.utils.arrayIndexOf(array, itemToRemove);\n            if (index > 0) {\n                array.splice(index, 1);\n            }\n            else if (index === 0) {\n                array.shift();\n            }\n        },\n\n        arrayGetDistinctValues: function (array) {\n            var result = [];\n            if (array) {\n                ko.utils.arrayForEach(array, function(item) {\n                    if (ko.utils.arrayIndexOf(result, item) < 0)\n                        result.push(item);\n                });\n            }\n            return result;\n        },\n\n        arrayMap: function (array, mapping, mappingOwner) {\n            var result = [];\n            if (array) {\n                for (var i = 0, j = array.length; i < j; i++)\n                    result.push(mapping.call(mappingOwner, array[i], i));\n            }\n            return result;\n        },\n\n        arrayFilter: function (array, predicate, predicateOwner) {\n            var result = [];\n            if (array) {\n                for (var i = 0, j = array.length; i < j; i++)\n                    if (predicate.call(predicateOwner, array[i], i))\n                        result.push(array[i]);\n            }\n            return result;\n        },\n\n        arrayPushAll: function (array, valuesToPush) {\n            if (valuesToPush instanceof Array)\n                array.push.apply(array, valuesToPush);\n            else\n                for (var i = 0, j = valuesToPush.length; i < j; i++)\n                    array.push(valuesToPush[i]);\n            return array;\n        },\n\n        addOrRemoveItem: function(array, value, included) {\n            var existingEntryIndex = ko.utils.arrayIndexOf(ko.utils.peekObservable(array), value);\n            if (existingEntryIndex < 0) {\n                if (included)\n                    array.push(value);\n            } else {\n                if (!included)\n                    array.splice(existingEntryIndex, 1);\n            }\n        },\n\n        canSetPrototype: canSetPrototype,\n\n        extend: extend,\n\n        setPrototypeOf: setPrototypeOf,\n\n        setPrototypeOfOrExtend: canSetPrototype ? setPrototypeOf : extend,\n\n        objectForEach: objectForEach,\n\n        objectMap: function(source, mapping, mappingOwner) {\n            if (!source)\n                return source;\n            var target = {};\n            for (var prop in source) {\n                if (hasOwnProperty.call(source, prop)) {\n                    target[prop] = mapping.call(mappingOwner, source[prop], prop, source);\n                }\n            }\n            return target;\n        },\n\n        emptyDomNode: function (domNode) {\n            while (domNode.firstChild) {\n                ko.removeNode(domNode.firstChild);\n            }\n        },\n\n        moveCleanedNodesToContainerElement: function(nodes) {\n            // Ensure it's a real array, as we're about to reparent the nodes and\n            // we don't want the underlying collection to change while we're doing that.\n            var nodesArray = ko.utils.makeArray(nodes);\n            var templateDocument = (nodesArray[0] && nodesArray[0].ownerDocument) || document;\n\n            var container = templateDocument.createElement('div');\n            for (var i = 0, j = nodesArray.length; i < j; i++) {\n                container.appendChild(ko.cleanNode(nodesArray[i]));\n            }\n            return container;\n        },\n\n        cloneNodes: function (nodesArray, shouldCleanNodes) {\n            for (var i = 0, j = nodesArray.length, newNodesArray = []; i < j; i++) {\n                var clonedNode = nodesArray[i].cloneNode(true);\n                newNodesArray.push(shouldCleanNodes ? ko.cleanNode(clonedNode) : clonedNode);\n            }\n            return newNodesArray;\n        },\n\n        setDomNodeChildren: function (domNode, childNodes) {\n            ko.utils.emptyDomNode(domNode);\n            if (childNodes) {\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    domNode.appendChild(childNodes[i]);\n            }\n        },\n\n        replaceDomNodes: function (nodeToReplaceOrNodeArray, newNodesArray) {\n            var nodesToReplaceArray = nodeToReplaceOrNodeArray.nodeType ? [nodeToReplaceOrNodeArray] : nodeToReplaceOrNodeArray;\n            if (nodesToReplaceArray.length > 0) {\n                var insertionPoint = nodesToReplaceArray[0];\n                var parent = insertionPoint.parentNode;\n                for (var i = 0, j = newNodesArray.length; i < j; i++)\n                    parent.insertBefore(newNodesArray[i], insertionPoint);\n                for (var i = 0, j = nodesToReplaceArray.length; i < j; i++) {\n                    ko.removeNode(nodesToReplaceArray[i]);\n                }\n            }\n        },\n\n        fixUpContinuousNodeArray: function(continuousNodeArray, parentNode) {\n            // Before acting on a set of nodes that were previously outputted by a template function, we have to reconcile\n            // them against what is in the DOM right now. It may be that some of the nodes have already been removed, or that\n            // new nodes might have been inserted in the middle, for example by a binding. Also, there may previously have been\n            // leading comment nodes (created by rewritten string-based templates) that have since been removed during binding.\n            // So, this function translates the old \"map\" output array into its best guess of the set of current DOM nodes.\n            //\n            // Rules:\n            //   [A] Any leading nodes that have been removed should be ignored\n            //       These most likely correspond to memoization nodes that were already removed during binding\n            //       See https://github.com/knockout/knockout/pull/440\n            //   [B] Any trailing nodes that have been remove should be ignored\n            //       This prevents the code here from adding unrelated nodes to the array while processing rule [C]\n            //       See https://github.com/knockout/knockout/pull/1903\n            //   [C] We want to output a continuous series of nodes. So, ignore any nodes that have already been removed,\n            //       and include any nodes that have been inserted among the previous collection\n\n            if (continuousNodeArray.length) {\n                // The parent node can be a virtual element; so get the real parent node\n                parentNode = (parentNode.nodeType === 8 && parentNode.parentNode) || parentNode;\n\n                // Rule [A]\n                while (continuousNodeArray.length && continuousNodeArray[0].parentNode !== parentNode)\n                    continuousNodeArray.splice(0, 1);\n\n                // Rule [B]\n                while (continuousNodeArray.length > 1 && continuousNodeArray[continuousNodeArray.length - 1].parentNode !== parentNode)\n                    continuousNodeArray.length--;\n\n                // Rule [C]\n                if (continuousNodeArray.length > 1) {\n                    var current = continuousNodeArray[0], last = continuousNodeArray[continuousNodeArray.length - 1];\n                    // Replace with the actual new continuous node set\n                    continuousNodeArray.length = 0;\n                    while (current !== last) {\n                        continuousNodeArray.push(current);\n                        current = current.nextSibling;\n                    }\n                    continuousNodeArray.push(last);\n                }\n            }\n            return continuousNodeArray;\n        },\n\n        setOptionNodeSelectionState: function (optionNode, isSelected) {\n            // IE6 sometimes throws \"unknown error\" if you try to write to .selected directly, whereas Firefox struggles with setAttribute. Pick one based on browser.\n            if (ieVersion < 7)\n                optionNode.setAttribute(\"selected\", isSelected);\n            else\n                optionNode.selected = isSelected;\n        },\n\n        stringTrim: function (string) {\n            return string === null || string === undefined ? '' :\n                string.trim ?\n                    string.trim() :\n                    string.toString().replace(/^[\\s\\xa0]+|[\\s\\xa0]+$/g, '');\n        },\n\n        stringStartsWith: function (string, startsWith) {\n            string = string || \"\";\n            if (startsWith.length > string.length)\n                return false;\n            return string.substring(0, startsWith.length) === startsWith;\n        },\n\n        domNodeIsContainedBy: function (node, containedByNode) {\n            if (node === containedByNode)\n                return true;\n            if (node.nodeType === 11)\n                return false; // Fixes issue #1162 - can't use node.contains for document fragments on IE8\n            if (containedByNode.contains)\n                return containedByNode.contains(node.nodeType !== 1 ? node.parentNode : node);\n            if (containedByNode.compareDocumentPosition)\n                return (containedByNode.compareDocumentPosition(node) & 16) == 16;\n            while (node && node != containedByNode) {\n                node = node.parentNode;\n            }\n            return !!node;\n        },\n\n        domNodeIsAttachedToDocument: function (node) {\n            return ko.utils.domNodeIsContainedBy(node, node.ownerDocument.documentElement);\n        },\n\n        anyDomNodeIsAttachedToDocument: function(nodes) {\n            return !!ko.utils.arrayFirst(nodes, ko.utils.domNodeIsAttachedToDocument);\n        },\n\n        tagNameLower: function(element) {\n            // For HTML elements, tagName will always be upper case; for XHTML elements, it'll be lower case.\n            // Possible future optimization: If we know it's an element from an XHTML document (not HTML),\n            // we don't need to do the .toLowerCase() as it will always be lower case anyway.\n            return element && element.tagName && element.tagName.toLowerCase();\n        },\n\n        catchFunctionErrors: function (delegate) {\n            return ko['onError'] ? function () {\n                try {\n                    return delegate.apply(this, arguments);\n                } catch (e) {\n                    ko['onError'] && ko['onError'](e);\n                    throw e;\n                }\n            } : delegate;\n        },\n\n        setTimeout: function (handler, timeout) {\n            return setTimeout(ko.utils.catchFunctionErrors(handler), timeout);\n        },\n\n        deferError: function (error) {\n            setTimeout(function () {\n                ko['onError'] && ko['onError'](error);\n                throw error;\n            }, 0);\n        },\n\n        registerEventHandler: function (element, eventType, handler) {\n            var wrappedHandler = ko.utils.catchFunctionErrors(handler);\n\n            var mustUseAttachEvent = eventsThatMustBeRegisteredUsingAttachEvent[eventType];\n            if (!ko.options['useOnlyNativeEvents'] && !mustUseAttachEvent && jQueryInstance) {\n                if (!jQueryEventAttachName) {\n                    jQueryEventAttachName = (typeof jQueryInstance(element)['on'] == 'function') ? 'on' : 'bind';\n                }\n                jQueryInstance(element)[jQueryEventAttachName](eventType, wrappedHandler);\n            } else if (!mustUseAttachEvent && typeof element.addEventListener == \"function\")\n                element.addEventListener(eventType, wrappedHandler, false);\n            else if (typeof element.attachEvent != \"undefined\") {\n                var attachEventHandler = function (event) { wrappedHandler.call(element, event); },\n                    attachEventName = \"on\" + eventType;\n                element.attachEvent(attachEventName, attachEventHandler);\n\n                // IE does not dispose attachEvent handlers automatically (unlike with addEventListener)\n                // so to avoid leaks, we have to remove them manually. See bug #856\n                ko.utils.domNodeDisposal.addDisposeCallback(element, function() {\n                    element.detachEvent(attachEventName, attachEventHandler);\n                });\n            } else\n                throw new Error(\"Browser doesn't support addEventListener or attachEvent\");\n        },\n\n        triggerEvent: function (element, eventType) {\n            if (!(element && element.nodeType))\n                throw new Error(\"element must be a DOM node when calling triggerEvent\");\n\n            // For click events on checkboxes and radio buttons, jQuery toggles the element checked state *after* the\n            // event handler runs instead of *before*. (This was fixed in 1.9 for checkboxes but not for radio buttons.)\n            // IE doesn't change the checked state when you trigger the click event using \"fireEvent\".\n            // In both cases, we'll use the click method instead.\n            var useClickWorkaround = isClickOnCheckableElement(element, eventType);\n\n            if (!ko.options['useOnlyNativeEvents'] && jQueryInstance && !useClickWorkaround) {\n                jQueryInstance(element)['trigger'](eventType);\n            } else if (typeof document.createEvent == \"function\") {\n                if (typeof element.dispatchEvent == \"function\") {\n                    var eventCategory = knownEventTypesByEventName[eventType] || \"HTMLEvents\";\n                    var event = document.createEvent(eventCategory);\n                    event.initEvent(eventType, true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, element);\n                    element.dispatchEvent(event);\n                }\n                else\n                    throw new Error(\"The supplied element doesn't support dispatchEvent\");\n            } else if (useClickWorkaround && element.click) {\n                element.click();\n            } else if (typeof element.fireEvent != \"undefined\") {\n                element.fireEvent(\"on\" + eventType);\n            } else {\n                throw new Error(\"Browser doesn't support triggering events\");\n            }\n        },\n\n        unwrapObservable: function (value) {\n            return ko.isObservable(value) ? value() : value;\n        },\n\n        peekObservable: function (value) {\n            return ko.isObservable(value) ? value.peek() : value;\n        },\n\n        toggleDomNodeCssClass: toggleDomNodeCssClass,\n\n        setTextContent: function(element, textContent) {\n            var value = ko.utils.unwrapObservable(textContent);\n            if ((value === null) || (value === undefined))\n                value = \"\";\n\n            // We need there to be exactly one child: a text node.\n            // If there are no children, more than one, or if it's not a text node,\n            // we'll clear everything and create a single text node.\n            var innerTextNode = ko.virtualElements.firstChild(element);\n            if (!innerTextNode || innerTextNode.nodeType != 3 || ko.virtualElements.nextSibling(innerTextNode)) {\n                ko.virtualElements.setDomNodeChildren(element, [element.ownerDocument.createTextNode(value)]);\n            } else {\n                innerTextNode.data = value;\n            }\n\n            ko.utils.forceRefresh(element);\n        },\n\n        setElementName: function(element, name) {\n            element.name = name;\n\n            // Workaround IE 6/7 issue\n            // - https://github.com/SteveSanderson/knockout/issues/197\n            // - http://www.matts411.com/post/setting_the_name_attribute_in_ie_dom/\n            if (ieVersion <= 7) {\n                try {\n                    var escapedName = element.name.replace(/[&<>'\"]/g, function(r){ return \"&#\" + r.charCodeAt(0) + \";\"; });\n                    element.mergeAttributes(document.createElement(\"<input name='\" + escapedName + \"'/>\"), false);\n                }\n                catch(e) {} // For IE9 with doc mode \"IE9 Standards\" and browser mode \"IE9 Compatibility View\"\n            }\n        },\n\n        forceRefresh: function(node) {\n            // Workaround for an IE9 rendering bug - https://github.com/SteveSanderson/knockout/issues/209\n            if (ieVersion >= 9) {\n                // For text nodes and comment nodes (most likely virtual elements), we will have to refresh the container\n                var elem = node.nodeType == 1 ? node : node.parentNode;\n                if (elem.style)\n                    elem.style.zoom = elem.style.zoom;\n            }\n        },\n\n        ensureSelectElementIsRenderedCorrectly: function(selectElement) {\n            // Workaround for IE9 rendering bug - it doesn't reliably display all the text in dynamically-added select boxes unless you force it to re-render by updating the width.\n            // (See https://github.com/SteveSanderson/knockout/issues/312, http://stackoverflow.com/questions/5908494/select-only-shows-first-char-of-selected-option)\n            // Also fixes IE7 and IE8 bug that causes selects to be zero width if enclosed by 'if' or 'with'. (See issue #839)\n            if (ieVersion) {\n                var originalWidth = selectElement.style.width;\n                selectElement.style.width = 0;\n                selectElement.style.width = originalWidth;\n            }\n        },\n\n        range: function (min, max) {\n            min = ko.utils.unwrapObservable(min);\n            max = ko.utils.unwrapObservable(max);\n            var result = [];\n            for (var i = min; i <= max; i++)\n                result.push(i);\n            return result;\n        },\n\n        makeArray: function(arrayLikeObject) {\n            var result = [];\n            for (var i = 0, j = arrayLikeObject.length; i < j; i++) {\n                result.push(arrayLikeObject[i]);\n            };\n            return result;\n        },\n\n        createSymbolOrString: function(identifier) {\n            return canUseSymbols ? Symbol(identifier) : identifier;\n        },\n\n        isIe6 : isIe6,\n        isIe7 : isIe7,\n        ieVersion : ieVersion,\n\n        getFormFields: function(form, fieldName) {\n            var fields = ko.utils.makeArray(form.getElementsByTagName(\"input\")).concat(ko.utils.makeArray(form.getElementsByTagName(\"textarea\")));\n            var isMatchingField = (typeof fieldName == 'string')\n                ? function(field) { return field.name === fieldName }\n                : function(field) { return fieldName.test(field.name) }; // Treat fieldName as regex or object containing predicate\n            var matches = [];\n            for (var i = fields.length - 1; i >= 0; i--) {\n                if (isMatchingField(fields[i]))\n                    matches.push(fields[i]);\n            };\n            return matches;\n        },\n\n        parseJson: function (jsonString) {\n            if (typeof jsonString == \"string\") {\n                jsonString = ko.utils.stringTrim(jsonString);\n                if (jsonString) {\n                    if (JSON && JSON.parse) // Use native parsing where available\n                        return JSON.parse(jsonString);\n                    return (new Function(\"return \" + jsonString))(); // Fallback on less safe parsing for older browsers\n                }\n            }\n            return null;\n        },\n\n        stringifyJson: function (data, replacer, space) {   // replacer and space are optional\n            if (!JSON || !JSON.stringify)\n                throw new Error(\"Cannot find JSON.stringify(). Some browsers (e.g., IE < 8) don't support it natively, but you can overcome this by adding a script reference to json2.js, downloadable from http://www.json.org/json2.js\");\n            return JSON.stringify(ko.utils.unwrapObservable(data), replacer, space);\n        },\n\n        postJson: function (urlOrForm, data, options) {\n            options = options || {};\n            var params = options['params'] || {};\n            var includeFields = options['includeFields'] || this.fieldsIncludedWithJsonPost;\n            var url = urlOrForm;\n\n            // If we were given a form, use its 'action' URL and pick out any requested field values\n            if((typeof urlOrForm == 'object') && (ko.utils.tagNameLower(urlOrForm) === \"form\")) {\n                var originalForm = urlOrForm;\n                url = originalForm.action;\n                for (var i = includeFields.length - 1; i >= 0; i--) {\n                    var fields = ko.utils.getFormFields(originalForm, includeFields[i]);\n                    for (var j = fields.length - 1; j >= 0; j--)\n                        params[fields[j].name] = fields[j].value;\n                }\n            }\n\n            data = ko.utils.unwrapObservable(data);\n            var form = document.createElement(\"form\");\n            form.style.display = \"none\";\n            form.action = url;\n            form.method = \"post\";\n            for (var key in data) {\n                // Since 'data' this is a model object, we include all properties including those inherited from its prototype\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = ko.utils.stringifyJson(ko.utils.unwrapObservable(data[key]));\n                form.appendChild(input);\n            }\n            objectForEach(params, function(key, value) {\n                var input = document.createElement(\"input\");\n                input.type = \"hidden\";\n                input.name = key;\n                input.value = value;\n                form.appendChild(input);\n            });\n            document.body.appendChild(form);\n            options['submitter'] ? options['submitter'](form) : form.submit();\n            setTimeout(function () { form.parentNode.removeChild(form); }, 0);\n        }\n    }\n}());\n\nko.exportSymbol('utils', ko.utils);\nko.exportSymbol('utils.arrayForEach', ko.utils.arrayForEach);\nko.exportSymbol('utils.arrayFirst', ko.utils.arrayFirst);\nko.exportSymbol('utils.arrayFilter', ko.utils.arrayFilter);\nko.exportSymbol('utils.arrayGetDistinctValues', ko.utils.arrayGetDistinctValues);\nko.exportSymbol('utils.arrayIndexOf', ko.utils.arrayIndexOf);\nko.exportSymbol('utils.arrayMap', ko.utils.arrayMap);\nko.exportSymbol('utils.arrayPushAll', ko.utils.arrayPushAll);\nko.exportSymbol('utils.arrayRemoveItem', ko.utils.arrayRemoveItem);\nko.exportSymbol('utils.cloneNodes', ko.utils.cloneNodes);\nko.exportSymbol('utils.createSymbolOrString', ko.utils.createSymbolOrString);\nko.exportSymbol('utils.extend', ko.utils.extend);\nko.exportSymbol('utils.fieldsIncludedWithJsonPost', ko.utils.fieldsIncludedWithJsonPost);\nko.exportSymbol('utils.getFormFields', ko.utils.getFormFields);\nko.exportSymbol('utils.objectMap', ko.utils.objectMap);\nko.exportSymbol('utils.peekObservable', ko.utils.peekObservable);\nko.exportSymbol('utils.postJson', ko.utils.postJson);\nko.exportSymbol('utils.parseJson', ko.utils.parseJson);\nko.exportSymbol('utils.registerEventHandler', ko.utils.registerEventHandler);\nko.exportSymbol('utils.stringifyJson', ko.utils.stringifyJson);\nko.exportSymbol('utils.range', ko.utils.range);\nko.exportSymbol('utils.toggleDomNodeCssClass', ko.utils.toggleDomNodeCssClass);\nko.exportSymbol('utils.triggerEvent', ko.utils.triggerEvent);\nko.exportSymbol('utils.unwrapObservable', ko.utils.unwrapObservable);\nko.exportSymbol('utils.objectForEach', ko.utils.objectForEach);\nko.exportSymbol('utils.addOrRemoveItem', ko.utils.addOrRemoveItem);\nko.exportSymbol('utils.setTextContent', ko.utils.setTextContent);\nko.exportSymbol('unwrap', ko.utils.unwrapObservable); // Convenient shorthand, because this is used so commonly\n\nif (!Function.prototype['bind']) {\n    // Function.prototype.bind is a standard part of ECMAScript 5th Edition (December 2009, http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-262.pdf)\n    // In case the browser doesn't implement it natively, provide a JavaScript implementation. This implementation is based on the one in prototype.js\n    Function.prototype['bind'] = function (object) {\n        var originalFunction = this;\n        if (arguments.length === 1) {\n            return function () {\n                return originalFunction.apply(object, arguments);\n            };\n        } else {\n            var partialArgs = Array.prototype.slice.call(arguments, 1);\n            return function () {\n                var args = partialArgs.slice(0);\n                args.push.apply(args, arguments);\n                return originalFunction.apply(object, args);\n            };\n        }\n    };\n}\n\nko.utils.domData = new (function () {\n    var uniqueId = 0;\n    var dataStoreKeyExpandoPropertyName = \"__ko__\" + (new Date).getTime();\n    var dataStore = {};\n\n    var getDataForNode, clear;\n    if (!ko.utils.ieVersion) {\n        // We considered using WeakMap, but it has a problem in IE 11 and Edge that prevents using\n        // it cross-window, so instead we just store the data directly on the node.\n        // See https://github.com/knockout/knockout/issues/2141\n        getDataForNode = function (node, createIfNotFound) {\n            var dataForNode = node[dataStoreKeyExpandoPropertyName];\n            if (!dataForNode && createIfNotFound) {\n                dataForNode = node[dataStoreKeyExpandoPropertyName] = {};\n            }\n            return dataForNode;\n        };\n        clear = function (node) {\n            if (node[dataStoreKeyExpandoPropertyName]) {\n                delete node[dataStoreKeyExpandoPropertyName];\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        };\n    } else {\n        // Old IE versions have memory issues if you store objects on the node, so we use a\n        // separate data storage and link to it from the node using a string key.\n        getDataForNode = function (node, createIfNotFound) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            var hasExistingDataStore = dataStoreKey && (dataStoreKey !== \"null\") && dataStore[dataStoreKey];\n            if (!hasExistingDataStore) {\n                if (!createIfNotFound)\n                    return undefined;\n                dataStoreKey = node[dataStoreKeyExpandoPropertyName] = \"ko\" + uniqueId++;\n                dataStore[dataStoreKey] = {};\n            }\n            return dataStore[dataStoreKey];\n        };\n        clear = function (node) {\n            var dataStoreKey = node[dataStoreKeyExpandoPropertyName];\n            if (dataStoreKey) {\n                delete dataStore[dataStoreKey];\n                node[dataStoreKeyExpandoPropertyName] = null;\n                return true; // Exposing \"did clean\" flag purely so specs can infer whether things have been cleaned up as intended\n            }\n            return false;\n        };\n    }\n\n    return {\n        get: function (node, key) {\n            var dataForNode = getDataForNode(node, false);\n            return dataForNode && dataForNode[key];\n        },\n        set: function (node, key, value) {\n            // Make sure we don't actually create a new domData key if we are actually deleting a value\n            var dataForNode = getDataForNode(node, value !== undefined /* createIfNotFound */);\n            dataForNode && (dataForNode[key] = value);\n        },\n        getOrSet: function (node, key, value) {\n            var dataForNode = getDataForNode(node, true /* createIfNotFound */);\n            return dataForNode[key] || (dataForNode[key] = value);\n        },\n        clear: clear,\n\n        nextKey: function () {\n            return (uniqueId++) + dataStoreKeyExpandoPropertyName;\n        }\n    };\n})();\n\nko.exportSymbol('utils.domData', ko.utils.domData);\nko.exportSymbol('utils.domData.clear', ko.utils.domData.clear); // Exporting only so specs can clear up after themselves fully\n\nko.utils.domNodeDisposal = new (function () {\n    var domDataKey = ko.utils.domData.nextKey();\n    var cleanableNodeTypes = { 1: true, 8: true, 9: true };       // Element, Comment, Document\n    var cleanableNodeTypesWithDescendants = { 1: true, 9: true }; // Element, Document\n\n    function getDisposeCallbacksCollection(node, createIfNotFound) {\n        var allDisposeCallbacks = ko.utils.domData.get(node, domDataKey);\n        if ((allDisposeCallbacks === undefined) && createIfNotFound) {\n            allDisposeCallbacks = [];\n            ko.utils.domData.set(node, domDataKey, allDisposeCallbacks);\n        }\n        return allDisposeCallbacks;\n    }\n    function destroyCallbacksCollection(node) {\n        ko.utils.domData.set(node, domDataKey, undefined);\n    }\n\n    function cleanSingleNode(node) {\n        // Run all the dispose callbacks\n        var callbacks = getDisposeCallbacksCollection(node, false);\n        if (callbacks) {\n            callbacks = callbacks.slice(0); // Clone, as the array may be modified during iteration (typically, callbacks will remove themselves)\n            for (var i = 0; i < callbacks.length; i++)\n                callbacks[i](node);\n        }\n\n        // Erase the DOM data\n        ko.utils.domData.clear(node);\n\n        // Perform cleanup needed by external libraries (currently only jQuery, but can be extended)\n        ko.utils.domNodeDisposal[\"cleanExternalData\"](node);\n\n        // Clear any immediate-child comment nodes, as these wouldn't have been found by\n        // node.getElementsByTagName(\"*\") in cleanNode() (comment nodes aren't elements)\n        if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n            cleanNodesInList(node.childNodes, true/*onlyComments*/);\n        }\n    }\n\n    function cleanNodesInList(nodeList, onlyComments) {\n        var cleanedNodes = [], lastCleanedNode;\n        for (var i = 0; i < nodeList.length; i++) {\n            if (!onlyComments || nodeList[i].nodeType === 8) {\n                cleanSingleNode(cleanedNodes[cleanedNodes.length] = lastCleanedNode = nodeList[i]);\n                if (nodeList[i] !== lastCleanedNode) {\n                    while (i-- && ko.utils.arrayIndexOf(cleanedNodes, nodeList[i]) == -1) {}\n                }\n            }\n        }\n    }\n\n    return {\n        addDisposeCallback : function(node, callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"Callback must be a function\");\n            getDisposeCallbacksCollection(node, true).push(callback);\n        },\n\n        removeDisposeCallback : function(node, callback) {\n            var callbacksCollection = getDisposeCallbacksCollection(node, false);\n            if (callbacksCollection) {\n                ko.utils.arrayRemoveItem(callbacksCollection, callback);\n                if (callbacksCollection.length == 0)\n                    destroyCallbacksCollection(node);\n            }\n        },\n\n        cleanNode : function(node) {\n            ko.dependencyDetection.ignore(function () {\n                // First clean this node, where applicable\n                if (cleanableNodeTypes[node.nodeType]) {\n                    cleanSingleNode(node);\n\n                    // ... then its descendants, where applicable\n                    if (cleanableNodeTypesWithDescendants[node.nodeType]) {\n                        cleanNodesInList(node.getElementsByTagName(\"*\"));\n                    }\n                }\n            });\n\n            return node;\n        },\n\n        removeNode : function(node) {\n            ko.cleanNode(node);\n            if (node.parentNode)\n                node.parentNode.removeChild(node);\n        },\n\n        \"cleanExternalData\" : function (node) {\n            // Special support for jQuery here because it's so commonly used.\n            // Many jQuery plugins (including jquery.tmpl) store data using jQuery's equivalent of domData\n            // so notify it to tear down any resources associated with the node & descendants here.\n            if (jQueryInstance && (typeof jQueryInstance['cleanData'] == \"function\"))\n                jQueryInstance['cleanData']([node]);\n        }\n    };\n})();\nko.cleanNode = ko.utils.domNodeDisposal.cleanNode; // Shorthand name for convenience\nko.removeNode = ko.utils.domNodeDisposal.removeNode; // Shorthand name for convenience\nko.exportSymbol('cleanNode', ko.cleanNode);\nko.exportSymbol('removeNode', ko.removeNode);\nko.exportSymbol('utils.domNodeDisposal', ko.utils.domNodeDisposal);\nko.exportSymbol('utils.domNodeDisposal.addDisposeCallback', ko.utils.domNodeDisposal.addDisposeCallback);\nko.exportSymbol('utils.domNodeDisposal.removeDisposeCallback', ko.utils.domNodeDisposal.removeDisposeCallback);\n(function () {\n    var none = [0, \"\", \"\"],\n        table = [1, \"<table>\", \"</table>\"],\n        tbody = [2, \"<table><tbody>\", \"</tbody></table>\"],\n        tr = [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        select = [1, \"<select multiple='multiple'>\", \"</select>\"],\n        lookup = {\n            'thead': table,\n            'tbody': table,\n            'tfoot': table,\n            'tr': tbody,\n            'td': tr,\n            'th': tr,\n            'option': select,\n            'optgroup': select\n        },\n\n        // This is needed for old IE if you're *not* using either jQuery or innerShiv. Doesn't affect other cases.\n        mayRequireCreateElementHack = ko.utils.ieVersion <= 8;\n\n    function getWrap(tags) {\n        var m = tags.match(/^(?:<!--.*?-->\\s*?)*?<([a-z]+)[\\s>]/);\n        return (m && lookup[m[1]]) || none;\n    }\n\n    function simpleHtmlParse(html, documentContext) {\n        documentContext || (documentContext = document);\n        var windowContext = documentContext['parentWindow'] || documentContext['defaultView'] || window;\n\n        // Based on jQuery's \"clean\" function, but only accounting for table-related elements.\n        // If you have referenced jQuery, this won't be used anyway - KO will use jQuery's \"clean\" function directly\n\n        // Note that there's still an issue in IE < 9 whereby it will discard comment nodes that are the first child of\n        // a descendant node. For example: \"<div><!-- mycomment -->abc</div>\" will get parsed as \"<div>abc</div>\"\n        // This won't affect anyone who has referenced jQuery, and there's always the workaround of inserting a dummy node\n        // (possibly a text node) in front of the comment. So, KO does not attempt to workaround this IE issue automatically at present.\n\n        // Trim whitespace, otherwise indexOf won't work as expected\n        var tags = ko.utils.stringTrim(html).toLowerCase(), div = documentContext.createElement(\"div\"),\n            wrap = getWrap(tags),\n            depth = wrap[0];\n\n        // Go to html and back, then peel off extra wrappers\n        // Note that we always prefix with some dummy text, because otherwise, IE<9 will strip out leading comment nodes in descendants. Total madness.\n        var markup = \"ignored<div>\" + wrap[1] + html + wrap[2] + \"</div>\";\n        if (typeof windowContext['innerShiv'] == \"function\") {\n            // Note that innerShiv is deprecated in favour of html5shiv. We should consider adding\n            // support for html5shiv (except if no explicit support is needed, e.g., if html5shiv\n            // somehow shims the native APIs so it just works anyway)\n            div.appendChild(windowContext['innerShiv'](markup));\n        } else {\n            if (mayRequireCreateElementHack) {\n                // The document.createElement('my-element') trick to enable custom elements in IE6-8\n                // only works if we assign innerHTML on an element associated with that document.\n                documentContext.body.appendChild(div);\n            }\n\n            div.innerHTML = markup;\n\n            if (mayRequireCreateElementHack) {\n                div.parentNode.removeChild(div);\n            }\n        }\n\n        // Move to the right depth\n        while (depth--)\n            div = div.lastChild;\n\n        return ko.utils.makeArray(div.lastChild.childNodes);\n    }\n\n    function jQueryHtmlParse(html, documentContext) {\n        // jQuery's \"parseHTML\" function was introduced in jQuery 1.8.0 and is a documented public API.\n        if (jQueryInstance['parseHTML']) {\n            return jQueryInstance['parseHTML'](html, documentContext) || []; // Ensure we always return an array and never null\n        } else {\n            // For jQuery < 1.8.0, we fall back on the undocumented internal \"clean\" function.\n            var elems = jQueryInstance['clean']([html], documentContext);\n\n            // As of jQuery 1.7.1, jQuery parses the HTML by appending it to some dummy parent nodes held in an in-memory document fragment.\n            // Unfortunately, it never clears the dummy parent nodes from the document fragment, so it leaks memory over time.\n            // Fix this by finding the top-most dummy parent element, and detaching it from its owner fragment.\n            if (elems && elems[0]) {\n                // Find the top-most parent element that's a direct child of a document fragment\n                var elem = elems[0];\n                while (elem.parentNode && elem.parentNode.nodeType !== 11 /* i.e., DocumentFragment */)\n                    elem = elem.parentNode;\n                // ... then detach it\n                if (elem.parentNode)\n                    elem.parentNode.removeChild(elem);\n            }\n\n            return elems;\n        }\n    }\n\n    ko.utils.parseHtmlFragment = function(html, documentContext) {\n        return jQueryInstance ?\n            jQueryHtmlParse(html, documentContext) :   // As below, benefit from jQuery's optimisations where possible\n            simpleHtmlParse(html, documentContext);  // ... otherwise, this simple logic will do in most common cases.\n    };\n\n    ko.utils.parseHtmlForTemplateNodes = function(html, documentContext) {\n        var nodes = ko.utils.parseHtmlFragment(html, documentContext);\n        return (nodes.length && nodes[0].parentElement) || ko.utils.moveCleanedNodesToContainerElement(nodes);\n    };\n\n    ko.utils.setHtml = function(node, html) {\n        ko.utils.emptyDomNode(node);\n\n        // There's no legitimate reason to display a stringified observable without unwrapping it, so we'll unwrap it\n        html = ko.utils.unwrapObservable(html);\n\n        if ((html !== null) && (html !== undefined)) {\n            if (typeof html != 'string')\n                html = html.toString();\n\n            // jQuery contains a lot of sophisticated code to parse arbitrary HTML fragments,\n            // for example <tr> elements which are not normally allowed to exist on their own.\n            // If you've referenced jQuery we'll use that rather than duplicating its code.\n            if (jQueryInstance) {\n                jQueryInstance(node)['html'](html);\n            } else {\n                // ... otherwise, use KO's own parsing logic.\n                var parsedNodes = ko.utils.parseHtmlFragment(html, node.ownerDocument);\n                for (var i = 0; i < parsedNodes.length; i++)\n                    node.appendChild(parsedNodes[i]);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('utils.parseHtmlFragment', ko.utils.parseHtmlFragment);\nko.exportSymbol('utils.setHtml', ko.utils.setHtml);\n\nko.memoization = (function () {\n    var memos = {};\n\n    function randomMax8HexChars() {\n        return (((1 + Math.random()) * 0x100000000) | 0).toString(16).substring(1);\n    }\n    function generateRandomId() {\n        return randomMax8HexChars() + randomMax8HexChars();\n    }\n    function findMemoNodes(rootNode, appendToArray) {\n        if (!rootNode)\n            return;\n        if (rootNode.nodeType == 8) {\n            var memoId = ko.memoization.parseMemoText(rootNode.nodeValue);\n            if (memoId != null)\n                appendToArray.push({ domNode: rootNode, memoId: memoId });\n        } else if (rootNode.nodeType == 1) {\n            for (var i = 0, childNodes = rootNode.childNodes, j = childNodes.length; i < j; i++)\n                findMemoNodes(childNodes[i], appendToArray);\n        }\n    }\n\n    return {\n        memoize: function (callback) {\n            if (typeof callback != \"function\")\n                throw new Error(\"You can only pass a function to ko.memoization.memoize()\");\n            var memoId = generateRandomId();\n            memos[memoId] = callback;\n            return \"<!--[ko_memo:\" + memoId + \"]-->\";\n        },\n\n        unmemoize: function (memoId, callbackParams) {\n            var callback = memos[memoId];\n            if (callback === undefined)\n                throw new Error(\"Couldn't find any memo with ID \" + memoId + \". Perhaps it's already been unmemoized.\");\n            try {\n                callback.apply(null, callbackParams || []);\n                return true;\n            }\n            finally { delete memos[memoId]; }\n        },\n\n        unmemoizeDomNodeAndDescendants: function (domNode, extraCallbackParamsArray) {\n            var memos = [];\n            findMemoNodes(domNode, memos);\n            for (var i = 0, j = memos.length; i < j; i++) {\n                var node = memos[i].domNode;\n                var combinedParams = [node];\n                if (extraCallbackParamsArray)\n                    ko.utils.arrayPushAll(combinedParams, extraCallbackParamsArray);\n                ko.memoization.unmemoize(memos[i].memoId, combinedParams);\n                node.nodeValue = \"\"; // Neuter this node so we don't try to unmemoize it again\n                if (node.parentNode)\n                    node.parentNode.removeChild(node); // If possible, erase it totally (not always possible - someone else might just hold a reference to it then call unmemoizeDomNodeAndDescendants again)\n            }\n        },\n\n        parseMemoText: function (memoText) {\n            var match = memoText.match(/^\\[ko_memo\\:(.*?)\\]$/);\n            return match ? match[1] : null;\n        }\n    };\n})();\n\nko.exportSymbol('memoization', ko.memoization);\nko.exportSymbol('memoization.memoize', ko.memoization.memoize);\nko.exportSymbol('memoization.unmemoize', ko.memoization.unmemoize);\nko.exportSymbol('memoization.parseMemoText', ko.memoization.parseMemoText);\nko.exportSymbol('memoization.unmemoizeDomNodeAndDescendants', ko.memoization.unmemoizeDomNodeAndDescendants);\nko.tasks = (function () {\n    var scheduler,\n        taskQueue = [],\n        taskQueueLength = 0,\n        nextHandle = 1,\n        nextIndexToProcess = 0;\n\n    if (window['MutationObserver']) {\n        // Chrome 27+, Firefox 14+, IE 11+, Opera 15+, Safari 6.1+\n        // From https://github.com/petkaantonov/bluebird * Copyright (c) 2014 Petka Antonov * License: MIT\n        scheduler = (function (callback) {\n            var div = document.createElement(\"div\");\n            new MutationObserver(callback).observe(div, {attributes: true});\n            return function () { div.classList.toggle(\"foo\"); };\n        })(scheduledProcess);\n    } else if (document && \"onreadystatechange\" in document.createElement(\"script\")) {\n        // IE 6-10\n        // From https://github.com/YuzuJS/setImmediate * Copyright (c) 2012 Barnesandnoble.com, llc, Donavon West, and Domenic Denicola * License: MIT\n        scheduler = function (callback) {\n            var script = document.createElement(\"script\");\n            script.onreadystatechange = function () {\n                script.onreadystatechange = null;\n                document.documentElement.removeChild(script);\n                script = null;\n                callback();\n            };\n            document.documentElement.appendChild(script);\n        };\n    } else {\n        scheduler = function (callback) {\n            setTimeout(callback, 0);\n        };\n    }\n\n    function processTasks() {\n        if (taskQueueLength) {\n            // Each mark represents the end of a logical group of tasks and the number of these groups is\n            // limited to prevent unchecked recursion.\n            var mark = taskQueueLength, countMarks = 0;\n\n            // nextIndexToProcess keeps track of where we are in the queue; processTasks can be called recursively without issue\n            for (var task; nextIndexToProcess < taskQueueLength; ) {\n                if (task = taskQueue[nextIndexToProcess++]) {\n                    if (nextIndexToProcess > mark) {\n                        if (++countMarks >= 5000) {\n                            nextIndexToProcess = taskQueueLength;   // skip all tasks remaining in the queue since any of them could be causing the recursion\n                            ko.utils.deferError(Error(\"'Too much recursion' after processing \" + countMarks + \" task groups.\"));\n                            break;\n                        }\n                        mark = taskQueueLength;\n                    }\n                    try {\n                        task();\n                    } catch (ex) {\n                        ko.utils.deferError(ex);\n                    }\n                }\n            }\n        }\n    }\n\n    function scheduledProcess() {\n        processTasks();\n\n        // Reset the queue\n        nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n    }\n\n    function scheduleTaskProcessing() {\n        ko.tasks['scheduler'](scheduledProcess);\n    }\n\n    var tasks = {\n        'scheduler': scheduler,     // Allow overriding the scheduler\n\n        schedule: function (func) {\n            if (!taskQueueLength) {\n                scheduleTaskProcessing();\n            }\n\n            taskQueue[taskQueueLength++] = func;\n            return nextHandle++;\n        },\n\n        cancel: function (handle) {\n            var index = handle - (nextHandle - taskQueueLength);\n            if (index >= nextIndexToProcess && index < taskQueueLength) {\n                taskQueue[index] = null;\n            }\n        },\n\n        // For testing only: reset the queue and return the previous queue length\n        'resetForTesting': function () {\n            var length = taskQueueLength - nextIndexToProcess;\n            nextIndexToProcess = taskQueueLength = taskQueue.length = 0;\n            return length;\n        },\n\n        runEarly: processTasks\n    };\n\n    return tasks;\n})();\n\nko.exportSymbol('tasks', ko.tasks);\nko.exportSymbol('tasks.schedule', ko.tasks.schedule);\n//ko.exportSymbol('tasks.cancel', ko.tasks.cancel);  \"cancel\" isn't minified\nko.exportSymbol('tasks.runEarly', ko.tasks.runEarly);\nko.extenders = {\n    'throttle': function(target, timeout) {\n        // Throttling means two things:\n\n        // (1) For dependent observables, we throttle *evaluations* so that, no matter how fast its dependencies\n        //     notify updates, the target doesn't re-evaluate (and hence doesn't notify) faster than a certain rate\n        target['throttleEvaluation'] = timeout;\n\n        // (2) For writable targets (observables, or writable dependent observables), we throttle *writes*\n        //     so the target cannot change value synchronously or faster than a certain rate\n        var writeTimeoutInstance = null;\n        return ko.dependentObservable({\n            'read': target,\n            'write': function(value) {\n                clearTimeout(writeTimeoutInstance);\n                writeTimeoutInstance = ko.utils.setTimeout(function() {\n                    target(value);\n                }, timeout);\n            }\n        });\n    },\n\n    'rateLimit': function(target, options) {\n        var timeout, method, limitFunction;\n\n        if (typeof options == 'number') {\n            timeout = options;\n        } else {\n            timeout = options['timeout'];\n            method = options['method'];\n        }\n\n        // rateLimit supersedes deferred updates\n        target._deferUpdates = false;\n\n        limitFunction = typeof method == 'function' ? method : method == 'notifyWhenChangesStop' ?  debounce : throttle;\n        target.limit(function(callback) {\n            return limitFunction(callback, timeout, options);\n        });\n    },\n\n    'deferred': function(target, options) {\n        if (options !== true) {\n            throw new Error('The \\'deferred\\' extender only accepts the value \\'true\\', because it is not supported to turn deferral off once enabled.')\n        }\n\n        if (!target._deferUpdates) {\n            target._deferUpdates = true;\n            target.limit(function (callback) {\n                var handle,\n                    ignoreUpdates = false;\n                return function () {\n                    if (!ignoreUpdates) {\n                        ko.tasks.cancel(handle);\n                        handle = ko.tasks.schedule(callback);\n\n                        try {\n                            ignoreUpdates = true;\n                            target['notifySubscribers'](undefined, 'dirty');\n                        } finally {\n                            ignoreUpdates = false;\n                        }\n                    }\n                };\n            });\n        }\n    },\n\n    'notify': function(target, notifyWhen) {\n        target[\"equalityComparer\"] = notifyWhen == \"always\" ?\n            null :  // null equalityComparer means to always notify\n            valuesArePrimitiveAndEqual;\n    }\n};\n\nvar primitiveTypes = { 'undefined':1, 'boolean':1, 'number':1, 'string':1 };\nfunction valuesArePrimitiveAndEqual(a, b) {\n    var oldValueIsPrimitive = (a === null) || (typeof(a) in primitiveTypes);\n    return oldValueIsPrimitive ? (a === b) : false;\n}\n\nfunction throttle(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        if (!timeoutInstance) {\n            timeoutInstance = ko.utils.setTimeout(function () {\n                timeoutInstance = undefined;\n                callback();\n            }, timeout);\n        }\n    };\n}\n\nfunction debounce(callback, timeout) {\n    var timeoutInstance;\n    return function () {\n        clearTimeout(timeoutInstance);\n        timeoutInstance = ko.utils.setTimeout(callback, timeout);\n    };\n}\n\nfunction applyExtenders(requestedExtenders) {\n    var target = this;\n    if (requestedExtenders) {\n        ko.utils.objectForEach(requestedExtenders, function(key, value) {\n            var extenderHandler = ko.extenders[key];\n            if (typeof extenderHandler == 'function') {\n                target = extenderHandler(target, value) || target;\n            }\n        });\n    }\n    return target;\n}\n\nko.exportSymbol('extenders', ko.extenders);\n\nko.subscription = function (target, callback, disposeCallback) {\n    this._target = target;\n    this._callback = callback;\n    this._disposeCallback = disposeCallback;\n    this._isDisposed = false;\n    this._node = null;\n    this._domNodeDisposalCallback = null;\n    ko.exportProperty(this, 'dispose', this.dispose);\n    ko.exportProperty(this, 'disposeWhenNodeIsRemoved', this.disposeWhenNodeIsRemoved);\n};\nko.subscription.prototype.dispose = function () {\n    var self = this;\n    if (!self._isDisposed) {\n        if (self._domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(self._node, self._domNodeDisposalCallback);\n        }\n        self._isDisposed = true;\n        self._disposeCallback();\n\n        self._target = self._callback = self._disposeCallback = self._node = self._domNodeDisposalCallback = null;\n    }\n};\nko.subscription.prototype.disposeWhenNodeIsRemoved = function (node) {\n    this._node = node;\n    ko.utils.domNodeDisposal.addDisposeCallback(node, this._domNodeDisposalCallback = this.dispose.bind(this));\n};\n\nko.subscribable = function () {\n    ko.utils.setPrototypeOfOrExtend(this, ko_subscribable_fn);\n    ko_subscribable_fn.init(this);\n}\n\nvar defaultEvent = \"change\";\n\n// Moved out of \"limit\" to avoid the extra closure\nfunction limitNotifySubscribers(value, event) {\n    if (!event || event === defaultEvent) {\n        this._limitChange(value);\n    } else if (event === 'beforeChange') {\n        this._limitBeforeChange(value);\n    } else {\n        this._origNotifySubscribers(value, event);\n    }\n}\n\nvar ko_subscribable_fn = {\n    init: function(instance) {\n        instance._subscriptions = { \"change\": [] };\n        instance._versionNumber = 1;\n    },\n\n    subscribe: function (callback, callbackTarget, event) {\n        var self = this;\n\n        event = event || defaultEvent;\n        var boundCallback = callbackTarget ? callback.bind(callbackTarget) : callback;\n\n        var subscription = new ko.subscription(self, boundCallback, function () {\n            ko.utils.arrayRemoveItem(self._subscriptions[event], subscription);\n            if (self.afterSubscriptionRemove)\n                self.afterSubscriptionRemove(event);\n        });\n\n        if (self.beforeSubscriptionAdd)\n            self.beforeSubscriptionAdd(event);\n\n        if (!self._subscriptions[event])\n            self._subscriptions[event] = [];\n        self._subscriptions[event].push(subscription);\n\n        return subscription;\n    },\n\n    \"notifySubscribers\": function (valueToNotify, event) {\n        event = event || defaultEvent;\n        if (event === defaultEvent) {\n            this.updateVersion();\n        }\n        if (this.hasSubscriptionsForEvent(event)) {\n            var subs = event === defaultEvent && this._changeSubscriptions || this._subscriptions[event].slice(0);\n            try {\n                ko.dependencyDetection.begin(); // Begin suppressing dependency detection (by setting the top frame to undefined)\n                for (var i = 0, subscription; subscription = subs[i]; ++i) {\n                    // In case a subscription was disposed during the arrayForEach cycle, check\n                    // for isDisposed on each subscription before invoking its callback\n                    if (!subscription._isDisposed)\n                        subscription._callback(valueToNotify);\n                }\n            } finally {\n                ko.dependencyDetection.end(); // End suppressing dependency detection\n            }\n        }\n    },\n\n    getVersion: function () {\n        return this._versionNumber;\n    },\n\n    hasChanged: function (versionToCheck) {\n        return this.getVersion() !== versionToCheck;\n    },\n\n    updateVersion: function () {\n        ++this._versionNumber;\n    },\n\n    limit: function(limitFunction) {\n        var self = this, selfIsObservable = ko.isObservable(self),\n            ignoreBeforeChange, notifyNextChange, previousValue, pendingValue, didUpdate,\n            beforeChange = 'beforeChange';\n\n        if (!self._origNotifySubscribers) {\n            self._origNotifySubscribers = self[\"notifySubscribers\"];\n            self[\"notifySubscribers\"] = limitNotifySubscribers;\n        }\n\n        var finish = limitFunction(function() {\n            self._notificationIsPending = false;\n\n            // If an observable provided a reference to itself, access it to get the latest value.\n            // This allows computed observables to delay calculating their value until needed.\n            if (selfIsObservable && pendingValue === self) {\n                pendingValue = self._evalIfChanged ? self._evalIfChanged() : self();\n            }\n            var shouldNotify = notifyNextChange || (didUpdate && self.isDifferent(previousValue, pendingValue));\n\n            didUpdate = notifyNextChange = ignoreBeforeChange = false;\n\n            if (shouldNotify) {\n                self._origNotifySubscribers(previousValue = pendingValue);\n            }\n        });\n\n        self._limitChange = function(value, isDirty) {\n            if (!isDirty || !self._notificationIsPending) {\n                didUpdate = !isDirty;\n            }\n            self._changeSubscriptions = self._subscriptions[defaultEvent].slice(0);\n            self._notificationIsPending = ignoreBeforeChange = true;\n            pendingValue = value;\n            finish();\n        };\n        self._limitBeforeChange = function(value) {\n            if (!ignoreBeforeChange) {\n                previousValue = value;\n                self._origNotifySubscribers(value, beforeChange);\n            }\n        };\n        self._recordUpdate = function() {\n            didUpdate = true;\n        };\n        self._notifyNextChangeIfValueIsDifferent = function() {\n            if (self.isDifferent(previousValue, self.peek(true /*evaluate*/))) {\n                notifyNextChange = true;\n            }\n        };\n    },\n\n    hasSubscriptionsForEvent: function(event) {\n        return this._subscriptions[event] && this._subscriptions[event].length;\n    },\n\n    getSubscriptionsCount: function (event) {\n        if (event) {\n            return this._subscriptions[event] && this._subscriptions[event].length || 0;\n        } else {\n            var total = 0;\n            ko.utils.objectForEach(this._subscriptions, function(eventName, subscriptions) {\n                if (eventName !== 'dirty')\n                    total += subscriptions.length;\n            });\n            return total;\n        }\n    },\n\n    isDifferent: function(oldValue, newValue) {\n        return !this['equalityComparer'] || !this['equalityComparer'](oldValue, newValue);\n    },\n\n    toString: function() {\n      return '[object Object]'\n    },\n\n    extend: applyExtenders\n};\n\nko.exportProperty(ko_subscribable_fn, 'init', ko_subscribable_fn.init);\nko.exportProperty(ko_subscribable_fn, 'subscribe', ko_subscribable_fn.subscribe);\nko.exportProperty(ko_subscribable_fn, 'extend', ko_subscribable_fn.extend);\nko.exportProperty(ko_subscribable_fn, 'getSubscriptionsCount', ko_subscribable_fn.getSubscriptionsCount);\n\n// For browsers that support proto assignment, we overwrite the prototype of each\n// observable instance. Since observables are functions, we need Function.prototype\n// to still be in the prototype chain.\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko_subscribable_fn, Function.prototype);\n}\n\nko.subscribable['fn'] = ko_subscribable_fn;\n\n\nko.isSubscribable = function (instance) {\n    return instance != null && typeof instance.subscribe == \"function\" && typeof instance[\"notifySubscribers\"] == \"function\";\n};\n\nko.exportSymbol('subscribable', ko.subscribable);\nko.exportSymbol('isSubscribable', ko.isSubscribable);\n\nko.computedContext = ko.dependencyDetection = (function () {\n    var outerFrames = [],\n        currentFrame,\n        lastId = 0;\n\n    // Return a unique ID that can be assigned to an observable for dependency tracking.\n    // Theoretically, you could eventually overflow the number storage size, resulting\n    // in duplicate IDs. But in JavaScript, the largest exact integral value is 2^53\n    // or 9,007,199,254,740,992. If you created 1,000,000 IDs per second, it would\n    // take over 285 years to reach that number.\n    // Reference http://blog.vjeux.com/2010/javascript/javascript-max_int-number-limits.html\n    function getId() {\n        return ++lastId;\n    }\n\n    function begin(options) {\n        outerFrames.push(currentFrame);\n        currentFrame = options;\n    }\n\n    function end() {\n        currentFrame = outerFrames.pop();\n    }\n\n    return {\n        begin: begin,\n\n        end: end,\n\n        registerDependency: function (subscribable) {\n            if (currentFrame) {\n                if (!ko.isSubscribable(subscribable))\n                    throw new Error(\"Only subscribable things can act as dependencies\");\n                currentFrame.callback.call(currentFrame.callbackTarget, subscribable, subscribable._id || (subscribable._id = getId()));\n            }\n        },\n\n        ignore: function (callback, callbackTarget, callbackArgs) {\n            try {\n                begin();\n                return callback.apply(callbackTarget, callbackArgs || []);\n            } finally {\n                end();\n            }\n        },\n\n        getDependenciesCount: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependenciesCount();\n        },\n\n        getDependencies: function () {\n            if (currentFrame)\n                return currentFrame.computed.getDependencies();\n        },\n\n        isInitial: function() {\n            if (currentFrame)\n                return currentFrame.isInitial;\n        },\n\n        computed: function() {\n            if (currentFrame)\n                return currentFrame.computed;\n        }\n    };\n})();\n\nko.exportSymbol('computedContext', ko.computedContext);\nko.exportSymbol('computedContext.getDependenciesCount', ko.computedContext.getDependenciesCount);\nko.exportSymbol('computedContext.getDependencies', ko.computedContext.getDependencies);\nko.exportSymbol('computedContext.isInitial', ko.computedContext.isInitial);\nko.exportSymbol('computedContext.registerDependency', ko.computedContext.registerDependency);\n\nko.exportSymbol('ignoreDependencies', ko.ignoreDependencies = ko.dependencyDetection.ignore);\nvar observableLatestValue = ko.utils.createSymbolOrString('_latestValue');\n\nko.observable = function (initialValue) {\n    function observable() {\n        if (arguments.length > 0) {\n            // Write\n\n            // Ignore writes if the value hasn't changed\n            if (observable.isDifferent(observable[observableLatestValue], arguments[0])) {\n                observable.valueWillMutate();\n                observable[observableLatestValue] = arguments[0];\n                observable.valueHasMutated();\n            }\n            return this; // Permits chained assignments\n        }\n        else {\n            // Read\n            ko.dependencyDetection.registerDependency(observable); // The caller only needs to be notified of changes if they did a \"read\" operation\n            return observable[observableLatestValue];\n        }\n    }\n\n    observable[observableLatestValue] = initialValue;\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(observable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(observable);\n\n    // Inherit from 'observable'\n    ko.utils.setPrototypeOfOrExtend(observable, observableFn);\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](observable, true);\n    }\n\n    return observable;\n}\n\n// Define prototype for observables\nvar observableFn = {\n    'equalityComparer': valuesArePrimitiveAndEqual,\n    peek: function() { return this[observableLatestValue]; },\n    valueHasMutated: function () {\n        this['notifySubscribers'](this[observableLatestValue], 'spectate');\n        this['notifySubscribers'](this[observableLatestValue]);\n    },\n    valueWillMutate: function () { this['notifySubscribers'](this[observableLatestValue], 'beforeChange'); }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observable constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(observableFn, ko.subscribable['fn']);\n}\n\nvar protoProperty = ko.observable.protoProperty = '__ko_proto__';\nobservableFn[protoProperty] = ko.observable;\n\nko.isObservable = function (instance) {\n    var proto = typeof instance == 'function' && instance[protoProperty];\n    if (proto && proto !== observableFn[protoProperty] && proto !== ko.computed['fn'][protoProperty]) {\n        throw Error(\"Invalid object that looks like an observable; possibly from another Knockout instance\");\n    }\n    return !!proto;\n};\n\nko.isWriteableObservable = function (instance) {\n    return (typeof instance == 'function' && (\n        (instance[protoProperty] === observableFn[protoProperty]) ||  // Observable\n        (instance[protoProperty] === ko.computed['fn'][protoProperty] && instance.hasWriteFunction)));   // Writable computed observable\n};\n\nko.exportSymbol('observable', ko.observable);\nko.exportSymbol('isObservable', ko.isObservable);\nko.exportSymbol('isWriteableObservable', ko.isWriteableObservable);\nko.exportSymbol('isWritableObservable', ko.isWriteableObservable);\nko.exportSymbol('observable.fn', observableFn);\nko.exportProperty(observableFn, 'peek', observableFn.peek);\nko.exportProperty(observableFn, 'valueHasMutated', observableFn.valueHasMutated);\nko.exportProperty(observableFn, 'valueWillMutate', observableFn.valueWillMutate);\nko.observableArray = function (initialValues) {\n    initialValues = initialValues || [];\n\n    if (typeof initialValues != 'object' || !('length' in initialValues))\n        throw new Error(\"The argument passed when initializing an observable array must be an array, or null, or undefined.\");\n\n    var result = ko.observable(initialValues);\n    ko.utils.setPrototypeOfOrExtend(result, ko.observableArray['fn']);\n    return result.extend({'trackArrayChanges':true});\n};\n\nko.observableArray['fn'] = {\n    'remove': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var removedValues = [];\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        for (var i = 0; i < underlyingArray.length; i++) {\n            var value = underlyingArray[i];\n            if (predicate(value)) {\n                if (removedValues.length === 0) {\n                    this.valueWillMutate();\n                }\n                if (underlyingArray[i] !== value) {\n                    throw Error(\"Array modified during remove; cannot remove item\");\n                }\n                removedValues.push(value);\n                underlyingArray.splice(i, 1);\n                i--;\n            }\n        }\n        if (removedValues.length) {\n            this.valueHasMutated();\n        }\n        return removedValues;\n    },\n\n    'removeAll': function (arrayOfValues) {\n        // If you passed zero args, we remove everything\n        if (arrayOfValues === undefined) {\n            var underlyingArray = this.peek();\n            var allValues = underlyingArray.slice(0);\n            this.valueWillMutate();\n            underlyingArray.splice(0, underlyingArray.length);\n            this.valueHasMutated();\n            return allValues;\n        }\n        // If you passed an arg, we interpret it as an array of entries to remove\n        if (!arrayOfValues)\n            return [];\n        return this['remove'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'destroy': function (valueOrPredicate) {\n        var underlyingArray = this.peek();\n        var predicate = typeof valueOrPredicate == \"function\" && !ko.isObservable(valueOrPredicate) ? valueOrPredicate : function (value) { return value === valueOrPredicate; };\n        this.valueWillMutate();\n        for (var i = underlyingArray.length - 1; i >= 0; i--) {\n            var value = underlyingArray[i];\n            if (predicate(value))\n                value[\"_destroy\"] = true;\n        }\n        this.valueHasMutated();\n    },\n\n    'destroyAll': function (arrayOfValues) {\n        // If you passed zero args, we destroy everything\n        if (arrayOfValues === undefined)\n            return this['destroy'](function() { return true });\n\n        // If you passed an arg, we interpret it as an array of entries to destroy\n        if (!arrayOfValues)\n            return [];\n        return this['destroy'](function (value) {\n            return ko.utils.arrayIndexOf(arrayOfValues, value) >= 0;\n        });\n    },\n\n    'indexOf': function (item) {\n        var underlyingArray = this();\n        return ko.utils.arrayIndexOf(underlyingArray, item);\n    },\n\n    'replace': function(oldItem, newItem) {\n        var index = this['indexOf'](oldItem);\n        if (index >= 0) {\n            this.valueWillMutate();\n            this.peek()[index] = newItem;\n            this.valueHasMutated();\n        }\n    },\n\n    'sorted': function (compareFunction) {\n        var arrayCopy = this().slice(0);\n        return compareFunction ? arrayCopy.sort(compareFunction) : arrayCopy.sort();\n    },\n\n    'reversed': function () {\n        return this().slice(0).reverse();\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.observableArray constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(ko.observableArray['fn'], ko.observable['fn']);\n}\n\n// Populate ko.observableArray.fn with read/write functions from native arrays\n// Important: Do not add any additional functions here that may reasonably be used to *read* data from the array\n// because we'll eval them without causing subscriptions, so ko.computed output could end up getting stale\nko.utils.arrayForEach([\"pop\", \"push\", \"reverse\", \"shift\", \"sort\", \"splice\", \"unshift\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        // Use \"peek\" to avoid creating a subscription in any computed that we're executing in the context of\n        // (for consistency with mutating regular observables)\n        var underlyingArray = this.peek();\n        this.valueWillMutate();\n        this.cacheDiffForKnownOperation(underlyingArray, methodName, arguments);\n        var methodCallResult = underlyingArray[methodName].apply(underlyingArray, arguments);\n        this.valueHasMutated();\n        // The native sort and reverse methods return a reference to the array, but it makes more sense to return the observable array instead.\n        return methodCallResult === underlyingArray ? this : methodCallResult;\n    };\n});\n\n// Populate ko.observableArray.fn with read-only functions from native arrays\nko.utils.arrayForEach([\"slice\"], function (methodName) {\n    ko.observableArray['fn'][methodName] = function () {\n        var underlyingArray = this();\n        return underlyingArray[methodName].apply(underlyingArray, arguments);\n    };\n});\n\nko.isObservableArray = function (instance) {\n    return ko.isObservable(instance)\n        && typeof instance[\"remove\"] == \"function\"\n        && typeof instance[\"push\"] == \"function\";\n};\n\nko.exportSymbol('observableArray', ko.observableArray);\nko.exportSymbol('isObservableArray', ko.isObservableArray);\nvar arrayChangeEventName = 'arrayChange';\nko.extenders['trackArrayChanges'] = function(target, options) {\n    // Use the provided options--each call to trackArrayChanges overwrites the previously set options\n    target.compareArrayOptions = {};\n    if (options && typeof options == \"object\") {\n        ko.utils.extend(target.compareArrayOptions, options);\n    }\n    target.compareArrayOptions['sparse'] = true;\n\n    // Only modify the target observable once\n    if (target.cacheDiffForKnownOperation) {\n        return;\n    }\n    var trackingChanges = false,\n        cachedDiff = null,\n        changeSubscription,\n        spectateSubscription,\n        pendingChanges = 0,\n        previousContents,\n        underlyingBeforeSubscriptionAddFunction = target.beforeSubscriptionAdd,\n        underlyingAfterSubscriptionRemoveFunction = target.afterSubscriptionRemove;\n\n    // Watch \"subscribe\" calls, and for array change events, ensure change tracking is enabled\n    target.beforeSubscriptionAdd = function (event) {\n        if (underlyingBeforeSubscriptionAddFunction) {\n            underlyingBeforeSubscriptionAddFunction.call(target, event);\n        }\n        if (event === arrayChangeEventName) {\n            trackChanges();\n        }\n    };\n    // Watch \"dispose\" calls, and for array change events, ensure change tracking is disabled when all are disposed\n    target.afterSubscriptionRemove = function (event) {\n        if (underlyingAfterSubscriptionRemoveFunction) {\n            underlyingAfterSubscriptionRemoveFunction.call(target, event);\n        }\n        if (event === arrayChangeEventName && !target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n            if (changeSubscription) {\n                changeSubscription.dispose();\n            }\n            if (spectateSubscription) {\n                spectateSubscription.dispose();\n            }\n            spectateSubscription = changeSubscription = null;\n            trackingChanges = false;\n            previousContents = undefined;\n        }\n    };\n\n    function trackChanges() {\n        if (trackingChanges) {\n            // Whenever there's a new subscription and there are pending notifications, make sure all previous\n            // subscriptions are notified of the change so that all subscriptions are in sync.\n            notifyChanges();\n            return;\n        }\n\n        trackingChanges = true;\n\n        // Track how many times the array actually changed value\n        spectateSubscription = target.subscribe(function () {\n            ++pendingChanges;\n        }, null, \"spectate\");\n\n        // Each time the array changes value, capture a clone so that on the next\n        // change it's possible to produce a diff\n        previousContents = [].concat(target.peek() || []);\n        cachedDiff = null;\n        changeSubscription = target.subscribe(notifyChanges);\n\n        function notifyChanges() {\n            if (pendingChanges) {\n                // Make a copy of the current contents and ensure it's an array\n                var currentContents = [].concat(target.peek() || []), changes;\n\n                // Compute the diff and issue notifications, but only if someone is listening\n                if (target.hasSubscriptionsForEvent(arrayChangeEventName)) {\n                    changes = getChanges(previousContents, currentContents);\n                }\n\n                // Eliminate references to the old, removed items, so they can be GCed\n                previousContents = currentContents;\n                cachedDiff = null;\n                pendingChanges = 0;\n\n                if (changes && changes.length) {\n                    target['notifySubscribers'](changes, arrayChangeEventName);\n                }\n            }\n        }\n    }\n\n    function getChanges(previousContents, currentContents) {\n        // We try to re-use cached diffs.\n        // The scenarios where pendingChanges > 1 are when using rate limiting or deferred updates,\n        // which without this check would not be compatible with arrayChange notifications. Normally,\n        // notifications are issued immediately so we wouldn't be queueing up more than one.\n        if (!cachedDiff || pendingChanges > 1) {\n            cachedDiff = ko.utils.compareArrays(previousContents, currentContents, target.compareArrayOptions);\n        }\n\n        return cachedDiff;\n    }\n\n    target.cacheDiffForKnownOperation = function(rawArray, operationName, args) {\n        // Only run if we're currently tracking changes for this observable array\n        // and there aren't any pending deferred notifications.\n        if (!trackingChanges || pendingChanges) {\n            return;\n        }\n        var diff = [],\n            arrayLength = rawArray.length,\n            argsLength = args.length,\n            offset = 0;\n\n        function pushDiff(status, value, index) {\n            return diff[diff.length] = { 'status': status, 'value': value, 'index': index };\n        }\n        switch (operationName) {\n            case 'push':\n                offset = arrayLength;\n            case 'unshift':\n                for (var index = 0; index < argsLength; index++) {\n                    pushDiff('added', args[index], offset + index);\n                }\n                break;\n\n            case 'pop':\n                offset = arrayLength - 1;\n            case 'shift':\n                if (arrayLength) {\n                    pushDiff('deleted', rawArray[offset], offset);\n                }\n                break;\n\n            case 'splice':\n                // Negative start index means 'from end of array'. After that we clamp to [0...arrayLength].\n                // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice\n                var startIndex = Math.min(Math.max(0, args[0] < 0 ? arrayLength + args[0] : args[0]), arrayLength),\n                    endDeleteIndex = argsLength === 1 ? arrayLength : Math.min(startIndex + (args[1] || 0), arrayLength),\n                    endAddIndex = startIndex + argsLength - 2,\n                    endIndex = Math.max(endDeleteIndex, endAddIndex),\n                    additions = [], deletions = [];\n                for (var index = startIndex, argsIndex = 2; index < endIndex; ++index, ++argsIndex) {\n                    if (index < endDeleteIndex)\n                        deletions.push(pushDiff('deleted', rawArray[index], index));\n                    if (index < endAddIndex)\n                        additions.push(pushDiff('added', args[argsIndex], index));\n                }\n                ko.utils.findMovesInArrayComparison(deletions, additions);\n                break;\n\n            default:\n                return;\n        }\n        cachedDiff = diff;\n    };\n};\nvar computedState = ko.utils.createSymbolOrString('_state');\n\nko.computed = ko.dependentObservable = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget, options) {\n    if (typeof evaluatorFunctionOrOptions === \"object\") {\n        // Single-parameter syntax - everything is on this \"options\" param\n        options = evaluatorFunctionOrOptions;\n    } else {\n        // Multi-parameter syntax - construct the options according to the params passed\n        options = options || {};\n        if (evaluatorFunctionOrOptions) {\n            options[\"read\"] = evaluatorFunctionOrOptions;\n        }\n    }\n    if (typeof options[\"read\"] != \"function\")\n        throw Error(\"Pass a function that returns the value of the ko.computed\");\n\n    var writeFunction = options[\"write\"];\n    var state = {\n        latestValue: undefined,\n        isStale: true,\n        isDirty: true,\n        isBeingEvaluated: false,\n        suppressDisposalUntilDisposeWhenReturnsFalse: false,\n        isDisposed: false,\n        pure: false,\n        isSleeping: false,\n        readFunction: options[\"read\"],\n        evaluatorFunctionTarget: evaluatorFunctionTarget || options[\"owner\"],\n        disposeWhenNodeIsRemoved: options[\"disposeWhenNodeIsRemoved\"] || options.disposeWhenNodeIsRemoved || null,\n        disposeWhen: options[\"disposeWhen\"] || options.disposeWhen,\n        domNodeDisposalCallback: null,\n        dependencyTracking: {},\n        dependenciesCount: 0,\n        evaluationTimeoutInstance: null\n    };\n\n    function computedObservable() {\n        if (arguments.length > 0) {\n            if (typeof writeFunction === \"function\") {\n                // Writing a value\n                writeFunction.apply(state.evaluatorFunctionTarget, arguments);\n            } else {\n                throw new Error(\"Cannot write a value to a ko.computed unless you specify a 'write' option. If you wish to read the current value, don't pass any parameters.\");\n            }\n            return this; // Permits chained assignments\n        } else {\n            // Reading the value\n            if (!state.isDisposed) {\n                ko.dependencyDetection.registerDependency(computedObservable);\n            }\n            if (state.isDirty || (state.isSleeping && computedObservable.haveDependenciesChanged())) {\n                computedObservable.evaluateImmediate();\n            }\n            return state.latestValue;\n        }\n    }\n\n    computedObservable[computedState] = state;\n    computedObservable.hasWriteFunction = typeof writeFunction === \"function\";\n\n    // Inherit from 'subscribable'\n    if (!ko.utils.canSetPrototype) {\n        // 'subscribable' won't be on the prototype chain unless we put it there directly\n        ko.utils.extend(computedObservable, ko.subscribable['fn']);\n    }\n    ko.subscribable['fn'].init(computedObservable);\n\n    // Inherit from 'computed'\n    ko.utils.setPrototypeOfOrExtend(computedObservable, computedFn);\n\n    if (options['pure']) {\n        state.pure = true;\n        state.isSleeping = true;     // Starts off sleeping; will awake on the first subscription\n        ko.utils.extend(computedObservable, pureComputedOverrides);\n    } else if (options['deferEvaluation']) {\n        ko.utils.extend(computedObservable, deferEvaluationOverrides);\n    }\n\n    if (ko.options['deferUpdates']) {\n        ko.extenders['deferred'](computedObservable, true);\n    }\n\n    if (DEBUG) {\n        // #1731 - Aid debugging by exposing the computed's options\n        computedObservable[\"_options\"] = options;\n    }\n\n    if (state.disposeWhenNodeIsRemoved) {\n        // Since this computed is associated with a DOM node, and we don't want to dispose the computed\n        // until the DOM node is *removed* from the document (as opposed to never having been in the document),\n        // we'll prevent disposal until \"disposeWhen\" first returns false.\n        state.suppressDisposalUntilDisposeWhenReturnsFalse = true;\n\n        // disposeWhenNodeIsRemoved: true can be used to opt into the \"only dispose after first false result\"\n        // behaviour even if there's no specific node to watch. In that case, clear the option so we don't try\n        // to watch for a non-node's disposal. This technique is intended for KO's internal use only and shouldn't\n        // be documented or used by application code, as it's likely to change in a future version of KO.\n        if (!state.disposeWhenNodeIsRemoved.nodeType) {\n            state.disposeWhenNodeIsRemoved = null;\n        }\n    }\n\n    // Evaluate, unless sleeping or deferEvaluation is true\n    if (!state.isSleeping && !options['deferEvaluation']) {\n        computedObservable.evaluateImmediate();\n    }\n\n    // Attach a DOM node disposal callback so that the computed will be proactively disposed as soon as the node is\n    // removed using ko.removeNode. But skip if isActive is false (there will never be any dependencies to dispose).\n    if (state.disposeWhenNodeIsRemoved && computedObservable.isActive()) {\n        ko.utils.domNodeDisposal.addDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback = function () {\n            computedObservable.dispose();\n        });\n    }\n\n    return computedObservable;\n};\n\n// Utility function that disposes a given dependencyTracking entry\nfunction computedDisposeDependencyCallback(id, entryToDispose) {\n    if (entryToDispose !== null && entryToDispose.dispose) {\n        entryToDispose.dispose();\n    }\n}\n\n// This function gets called each time a dependency is detected while evaluating a computed.\n// It's factored out as a shared function to avoid creating unnecessary function instances during evaluation.\nfunction computedBeginDependencyDetectionCallback(subscribable, id) {\n    var computedObservable = this.computedObservable,\n        state = computedObservable[computedState];\n    if (!state.isDisposed) {\n        if (this.disposalCount && this.disposalCandidates[id]) {\n            // Don't want to dispose this subscription, as it's still being used\n            computedObservable.addDependencyTracking(id, subscribable, this.disposalCandidates[id]);\n            this.disposalCandidates[id] = null; // No need to actually delete the property - disposalCandidates is a transient object anyway\n            --this.disposalCount;\n        } else if (!state.dependencyTracking[id]) {\n            // Brand new subscription - add it\n            computedObservable.addDependencyTracking(id, subscribable, state.isSleeping ? { _target: subscribable } : computedObservable.subscribeToDependency(subscribable));\n        }\n        // If the observable we've accessed has a pending notification, ensure we get notified of the actual final value (bypass equality checks)\n        if (subscribable._notificationIsPending) {\n            subscribable._notifyNextChangeIfValueIsDifferent();\n        }\n    }\n}\n\nvar computedFn = {\n    \"equalityComparer\": valuesArePrimitiveAndEqual,\n    getDependenciesCount: function () {\n        return this[computedState].dependenciesCount;\n    },\n    getDependencies: function () {\n        var dependencyTracking = this[computedState].dependencyTracking, dependentObservables = [];\n\n        ko.utils.objectForEach(dependencyTracking, function (id, dependency) {\n            dependentObservables[dependency._order] = dependency._target;\n        });\n\n        return dependentObservables;\n    },\n    hasAncestorDependency: function (obs) {\n        if (!this[computedState].dependenciesCount) {\n            return false;\n        }\n        var dependencies = this.getDependencies();\n        if (ko.utils.arrayIndexOf(dependencies, obs) !== -1) {\n            return true;\n        }\n        return !!ko.utils.arrayFirst(dependencies, function (dep) {\n            return dep.hasAncestorDependency && dep.hasAncestorDependency(obs);\n        });\n    },\n    addDependencyTracking: function (id, target, trackingObj) {\n        if (this[computedState].pure && target === this) {\n            throw Error(\"A 'pure' computed must not be called recursively\");\n        }\n\n        this[computedState].dependencyTracking[id] = trackingObj;\n        trackingObj._order = this[computedState].dependenciesCount++;\n        trackingObj._version = target.getVersion();\n    },\n    haveDependenciesChanged: function () {\n        var id, dependency, dependencyTracking = this[computedState].dependencyTracking;\n        for (id in dependencyTracking) {\n            if (Object.prototype.hasOwnProperty.call(dependencyTracking, id)) {\n                dependency = dependencyTracking[id];\n                if ((this._evalDelayed && dependency._target._notificationIsPending) || dependency._target.hasChanged(dependency._version)) {\n                    return true;\n                }\n            }\n        }\n    },\n    markDirty: function () {\n        // Process \"dirty\" events if we can handle delayed notifications\n        if (this._evalDelayed && !this[computedState].isBeingEvaluated) {\n            this._evalDelayed(false /*isChange*/);\n        }\n    },\n    isActive: function () {\n        var state = this[computedState];\n        return state.isDirty || state.dependenciesCount > 0;\n    },\n    respondToChange: function () {\n        // Ignore \"change\" events if we've already scheduled a delayed notification\n        if (!this._notificationIsPending) {\n            this.evaluatePossiblyAsync();\n        } else if (this[computedState].isDirty) {\n            this[computedState].isStale = true;\n        }\n    },\n    subscribeToDependency: function (target) {\n        if (target._deferUpdates) {\n            var dirtySub = target.subscribe(this.markDirty, this, 'dirty'),\n                changeSub = target.subscribe(this.respondToChange, this);\n            return {\n                _target: target,\n                dispose: function () {\n                    dirtySub.dispose();\n                    changeSub.dispose();\n                }\n            };\n        } else {\n            return target.subscribe(this.evaluatePossiblyAsync, this);\n        }\n    },\n    evaluatePossiblyAsync: function () {\n        var computedObservable = this,\n            throttleEvaluationTimeout = computedObservable['throttleEvaluation'];\n        if (throttleEvaluationTimeout && throttleEvaluationTimeout >= 0) {\n            clearTimeout(this[computedState].evaluationTimeoutInstance);\n            this[computedState].evaluationTimeoutInstance = ko.utils.setTimeout(function () {\n                computedObservable.evaluateImmediate(true /*notifyChange*/);\n            }, throttleEvaluationTimeout);\n        } else if (computedObservable._evalDelayed) {\n            computedObservable._evalDelayed(true /*isChange*/);\n        } else {\n            computedObservable.evaluateImmediate(true /*notifyChange*/);\n        }\n    },\n    evaluateImmediate: function (notifyChange) {\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            disposeWhen = state.disposeWhen,\n            changed = false;\n\n        if (state.isBeingEvaluated) {\n            // If the evaluation of a ko.computed causes side effects, it's possible that it will trigger its own re-evaluation.\n            // This is not desirable (it's hard for a developer to realise a chain of dependencies might cause this, and they almost\n            // certainly didn't intend infinite re-evaluations). So, for predictability, we simply prevent ko.computeds from causing\n            // their own re-evaluation. Further discussion at https://github.com/SteveSanderson/knockout/pull/387\n            return;\n        }\n\n        // Do not evaluate (and possibly capture new dependencies) if disposed\n        if (state.isDisposed) {\n            return;\n        }\n\n        if (state.disposeWhenNodeIsRemoved && !ko.utils.domNodeIsAttachedToDocument(state.disposeWhenNodeIsRemoved) || disposeWhen && disposeWhen()) {\n            // See comment above about suppressDisposalUntilDisposeWhenReturnsFalse\n            if (!state.suppressDisposalUntilDisposeWhenReturnsFalse) {\n                computedObservable.dispose();\n                return;\n            }\n        } else {\n            // It just did return false, so we can stop suppressing now\n            state.suppressDisposalUntilDisposeWhenReturnsFalse = false;\n        }\n\n        state.isBeingEvaluated = true;\n        try {\n            changed = this.evaluateImmediate_CallReadWithDependencyDetection(notifyChange);\n        } finally {\n            state.isBeingEvaluated = false;\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadWithDependencyDetection: function (notifyChange) {\n        // This function is really just part of the evaluateImmediate logic. You would never call it from anywhere else.\n        // Factoring it out into a separate function means it can be independent of the try/catch block in evaluateImmediate,\n        // which contributes to saving about 40% off the CPU overhead of computed evaluation (on V8 at least).\n\n        var computedObservable = this,\n            state = computedObservable[computedState],\n            changed = false;\n\n        // Initially, we assume that none of the subscriptions are still being used (i.e., all are candidates for disposal).\n        // Then, during evaluation, we cross off any that are in fact still being used.\n        var isInitial = state.pure ? undefined : !state.dependenciesCount,   // If we're evaluating when there are no previous dependencies, it must be the first time\n            dependencyDetectionContext = {\n                computedObservable: computedObservable,\n                disposalCandidates: state.dependencyTracking,\n                disposalCount: state.dependenciesCount\n            };\n\n        ko.dependencyDetection.begin({\n            callbackTarget: dependencyDetectionContext,\n            callback: computedBeginDependencyDetectionCallback,\n            computed: computedObservable,\n            isInitial: isInitial\n        });\n\n        state.dependencyTracking = {};\n        state.dependenciesCount = 0;\n\n        var newValue = this.evaluateImmediate_CallReadThenEndDependencyDetection(state, dependencyDetectionContext);\n\n        if (!state.dependenciesCount) {\n            computedObservable.dispose();\n            changed = true; // When evaluation causes a disposal, make sure all dependent computeds get notified so they'll see the new state\n        } else {\n            changed = computedObservable.isDifferent(state.latestValue, newValue);\n        }\n\n        if (changed) {\n            if (!state.isSleeping) {\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"beforeChange\");\n            } else {\n                computedObservable.updateVersion();\n            }\n\n            state.latestValue = newValue;\n            if (DEBUG) computedObservable._latestValue = newValue;\n\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"spectate\");\n\n            if (!state.isSleeping && notifyChange) {\n                computedObservable[\"notifySubscribers\"](state.latestValue);\n            }\n            if (computedObservable._recordUpdate) {\n                computedObservable._recordUpdate();\n            }\n        }\n\n        if (isInitial) {\n            computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n        }\n\n        return changed;\n    },\n    evaluateImmediate_CallReadThenEndDependencyDetection: function (state, dependencyDetectionContext) {\n        // This function is really part of the evaluateImmediate_CallReadWithDependencyDetection logic.\n        // You'd never call it from anywhere else. Factoring it out means that evaluateImmediate_CallReadWithDependencyDetection\n        // can be independent of try/finally blocks, which contributes to saving about 40% off the CPU\n        // overhead of computed evaluation (on V8 at least).\n\n        try {\n            var readFunction = state.readFunction;\n            return state.evaluatorFunctionTarget ? readFunction.call(state.evaluatorFunctionTarget) : readFunction();\n        } finally {\n            ko.dependencyDetection.end();\n\n            // For each subscription no longer being used, remove it from the active subscriptions list and dispose it\n            if (dependencyDetectionContext.disposalCount && !state.isSleeping) {\n                ko.utils.objectForEach(dependencyDetectionContext.disposalCandidates, computedDisposeDependencyCallback);\n            }\n\n            state.isStale = state.isDirty = false;\n        }\n    },\n    peek: function (evaluate) {\n        // By default, peek won't re-evaluate, except while the computed is sleeping or to get the initial value when \"deferEvaluation\" is set.\n        // Pass in true to evaluate if needed.\n        var state = this[computedState];\n        if ((state.isDirty && (evaluate || !state.dependenciesCount)) || (state.isSleeping && this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return state.latestValue;\n    },\n    limit: function (limitFunction) {\n        // Override the limit function with one that delays evaluation as well\n        ko.subscribable['fn'].limit.call(this, limitFunction);\n        this._evalIfChanged = function () {\n            if (!this[computedState].isSleeping) {\n                if (this[computedState].isStale) {\n                    this.evaluateImmediate();\n                } else {\n                    this[computedState].isDirty = false;\n                }\n            }\n            return this[computedState].latestValue;\n        };\n        this._evalDelayed = function (isChange) {\n            this._limitBeforeChange(this[computedState].latestValue);\n\n            // Mark as dirty\n            this[computedState].isDirty = true;\n            if (isChange) {\n                this[computedState].isStale = true;\n            }\n\n            // Pass the observable to the \"limit\" code, which will evaluate it when\n            // it's time to do the notification.\n            this._limitChange(this, !isChange /* isDirty */);\n        };\n    },\n    dispose: function () {\n        var state = this[computedState];\n        if (!state.isSleeping && state.dependencyTracking) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose)\n                    dependency.dispose();\n            });\n        }\n        if (state.disposeWhenNodeIsRemoved && state.domNodeDisposalCallback) {\n            ko.utils.domNodeDisposal.removeDisposeCallback(state.disposeWhenNodeIsRemoved, state.domNodeDisposalCallback);\n        }\n        state.dependencyTracking = undefined;\n        state.dependenciesCount = 0;\n        state.isDisposed = true;\n        state.isStale = false;\n        state.isDirty = false;\n        state.isSleeping = false;\n        state.disposeWhenNodeIsRemoved = undefined;\n        state.disposeWhen = undefined;\n        state.readFunction = undefined;\n        if (!this.hasWriteFunction) {\n            state.evaluatorFunctionTarget = undefined;\n        }\n    }\n};\n\nvar pureComputedOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // If asleep, wake up the computed by subscribing to any dependencies.\n        var computedObservable = this,\n            state = computedObservable[computedState];\n        if (!state.isDisposed && state.isSleeping && event == 'change') {\n            state.isSleeping = false;\n            if (state.isStale || computedObservable.haveDependenciesChanged()) {\n                state.dependencyTracking = null;\n                state.dependenciesCount = 0;\n                if (computedObservable.evaluateImmediate()) {\n                    computedObservable.updateVersion();\n                }\n            } else {\n                // First put the dependencies in order\n                var dependenciesOrder = [];\n                ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                    dependenciesOrder[dependency._order] = id;\n                });\n                // Next, subscribe to each one\n                ko.utils.arrayForEach(dependenciesOrder, function (id, order) {\n                    var dependency = state.dependencyTracking[id],\n                        subscription = computedObservable.subscribeToDependency(dependency._target);\n                    subscription._order = order;\n                    subscription._version = dependency._version;\n                    state.dependencyTracking[id] = subscription;\n                });\n                // Waking dependencies may have triggered effects\n                if (computedObservable.haveDependenciesChanged()) {\n                    if (computedObservable.evaluateImmediate()) {\n                        computedObservable.updateVersion();\n                    }\n                }\n            }\n\n            if (!state.isDisposed) {     // test since evaluating could trigger disposal\n                computedObservable[\"notifySubscribers\"](state.latestValue, \"awake\");\n            }\n        }\n    },\n    afterSubscriptionRemove: function (event) {\n        var state = this[computedState];\n        if (!state.isDisposed && event == 'change' && !this.hasSubscriptionsForEvent('change')) {\n            ko.utils.objectForEach(state.dependencyTracking, function (id, dependency) {\n                if (dependency.dispose) {\n                    state.dependencyTracking[id] = {\n                        _target: dependency._target,\n                        _order: dependency._order,\n                        _version: dependency._version\n                    };\n                    dependency.dispose();\n                }\n            });\n            state.isSleeping = true;\n            this[\"notifySubscribers\"](undefined, \"asleep\");\n        }\n    },\n    getVersion: function () {\n        // Because a pure computed is not automatically updated while it is sleeping, we can't\n        // simply return the version number. Instead, we check if any of the dependencies have\n        // changed and conditionally re-evaluate the computed observable.\n        var state = this[computedState];\n        if (state.isSleeping && (state.isStale || this.haveDependenciesChanged())) {\n            this.evaluateImmediate();\n        }\n        return ko.subscribable['fn'].getVersion.call(this);\n    }\n};\n\nvar deferEvaluationOverrides = {\n    beforeSubscriptionAdd: function (event) {\n        // This will force a computed with deferEvaluation to evaluate when the first subscription is registered.\n        if (event == 'change' || event == 'beforeChange') {\n            this.peek();\n        }\n    }\n};\n\n// Note that for browsers that don't support proto assignment, the\n// inheritance chain is created manually in the ko.computed constructor\nif (ko.utils.canSetPrototype) {\n    ko.utils.setPrototypeOf(computedFn, ko.subscribable['fn']);\n}\n\n// Set the proto values for ko.computed\nvar protoProp = ko.observable.protoProperty; // == \"__ko_proto__\"\ncomputedFn[protoProp] = ko.computed;\n\nko.isComputed = function (instance) {\n    return (typeof instance == 'function' && instance[protoProp] === computedFn[protoProp]);\n};\n\nko.isPureComputed = function (instance) {\n    return ko.isComputed(instance) && instance[computedState] && instance[computedState].pure;\n};\n\nko.exportSymbol('computed', ko.computed);\nko.exportSymbol('dependentObservable', ko.computed);    // export ko.dependentObservable for backwards compatibility (1.x)\nko.exportSymbol('isComputed', ko.isComputed);\nko.exportSymbol('isPureComputed', ko.isPureComputed);\nko.exportSymbol('computed.fn', computedFn);\nko.exportProperty(computedFn, 'peek', computedFn.peek);\nko.exportProperty(computedFn, 'dispose', computedFn.dispose);\nko.exportProperty(computedFn, 'isActive', computedFn.isActive);\nko.exportProperty(computedFn, 'getDependenciesCount', computedFn.getDependenciesCount);\nko.exportProperty(computedFn, 'getDependencies', computedFn.getDependencies);\n\nko.pureComputed = function (evaluatorFunctionOrOptions, evaluatorFunctionTarget) {\n    if (typeof evaluatorFunctionOrOptions === 'function') {\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget, {'pure':true});\n    } else {\n        evaluatorFunctionOrOptions = ko.utils.extend({}, evaluatorFunctionOrOptions);   // make a copy of the parameter object\n        evaluatorFunctionOrOptions['pure'] = true;\n        return ko.computed(evaluatorFunctionOrOptions, evaluatorFunctionTarget);\n    }\n}\nko.exportSymbol('pureComputed', ko.pureComputed);\n\n(function() {\n    var maxNestedObservableDepth = 10; // Escape the (unlikely) pathological case where an observable's current value is itself (or similar reference cycle)\n\n    ko.toJS = function(rootObject) {\n        if (arguments.length == 0)\n            throw new Error(\"When calling ko.toJS, pass the object you want to convert.\");\n\n        // We just unwrap everything at every level in the object graph\n        return mapJsObjectGraph(rootObject, function(valueToMap) {\n            // Loop because an observable's value might in turn be another observable wrapper\n            for (var i = 0; ko.isObservable(valueToMap) && (i < maxNestedObservableDepth); i++)\n                valueToMap = valueToMap();\n            return valueToMap;\n        });\n    };\n\n    ko.toJSON = function(rootObject, replacer, space) {     // replacer and space are optional\n        var plainJavaScriptObject = ko.toJS(rootObject);\n        return ko.utils.stringifyJson(plainJavaScriptObject, replacer, space);\n    };\n\n    function mapJsObjectGraph(rootObject, mapInputCallback, visitedObjects) {\n        visitedObjects = visitedObjects || new objectLookup();\n\n        rootObject = mapInputCallback(rootObject);\n        var canHaveProperties = (typeof rootObject == \"object\") && (rootObject !== null) && (rootObject !== undefined) && (!(rootObject instanceof RegExp)) && (!(rootObject instanceof Date)) && (!(rootObject instanceof String)) && (!(rootObject instanceof Number)) && (!(rootObject instanceof Boolean));\n        if (!canHaveProperties)\n            return rootObject;\n\n        var outputProperties = rootObject instanceof Array ? [] : {};\n        visitedObjects.save(rootObject, outputProperties);\n\n        visitPropertiesOrArrayEntries(rootObject, function(indexer) {\n            var propertyValue = mapInputCallback(rootObject[indexer]);\n\n            switch (typeof propertyValue) {\n                case \"boolean\":\n                case \"number\":\n                case \"string\":\n                case \"function\":\n                    outputProperties[indexer] = propertyValue;\n                    break;\n                case \"object\":\n                case \"undefined\":\n                    var previouslyMappedValue = visitedObjects.get(propertyValue);\n                    outputProperties[indexer] = (previouslyMappedValue !== undefined)\n                        ? previouslyMappedValue\n                        : mapJsObjectGraph(propertyValue, mapInputCallback, visitedObjects);\n                    break;\n            }\n        });\n\n        return outputProperties;\n    }\n\n    function visitPropertiesOrArrayEntries(rootObject, visitorCallback) {\n        if (rootObject instanceof Array) {\n            for (var i = 0; i < rootObject.length; i++)\n                visitorCallback(i);\n\n            // For arrays, also respect toJSON property for custom mappings (fixes #278)\n            if (typeof rootObject['toJSON'] == 'function')\n                visitorCallback('toJSON');\n        } else {\n            for (var propertyName in rootObject) {\n                visitorCallback(propertyName);\n            }\n        }\n    };\n\n    function objectLookup() {\n        this.keys = [];\n        this.values = [];\n    };\n\n    objectLookup.prototype = {\n        constructor: objectLookup,\n        save: function(key, value) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            if (existingIndex >= 0)\n                this.values[existingIndex] = value;\n            else {\n                this.keys.push(key);\n                this.values.push(value);\n            }\n        },\n        get: function(key) {\n            var existingIndex = ko.utils.arrayIndexOf(this.keys, key);\n            return (existingIndex >= 0) ? this.values[existingIndex] : undefined;\n        }\n    };\n})();\n\nko.exportSymbol('toJS', ko.toJS);\nko.exportSymbol('toJSON', ko.toJSON);\nko.when = function(predicate, callback, context) {\n    function kowhen (resolve) {\n        var observable = ko.pureComputed(predicate, context).extend({notify:'always'});\n        var subscription = observable.subscribe(function(value) {\n            if (value) {\n                subscription.dispose();\n                resolve(value);\n            }\n        });\n        // In case the initial value is true, process it right away\n        observable['notifySubscribers'](observable.peek());\n\n        return subscription;\n    }\n    if (typeof Promise === \"function\" && !callback) {\n        return new Promise(kowhen);\n    } else {\n        return kowhen(callback.bind(context));\n    }\n};\n\nko.exportSymbol('when', ko.when);\n(function () {\n    var hasDomDataExpandoProperty = '__ko__hasDomDataOptionValue__';\n\n    // Normally, SELECT elements and their OPTIONs can only take value of type 'string' (because the values\n    // are stored on DOM attributes). ko.selectExtensions provides a way for SELECTs/OPTIONs to have values\n    // that are arbitrary objects. This is very convenient when implementing things like cascading dropdowns.\n    ko.selectExtensions = {\n        readValue : function(element) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (element[hasDomDataExpandoProperty] === true)\n                        return ko.utils.domData.get(element, ko.bindingHandlers.options.optionValueDomDataKey);\n                    return ko.utils.ieVersion <= 7\n                        ? (element.getAttributeNode('value') && element.getAttributeNode('value').specified ? element.value : element.text)\n                        : element.value;\n                case 'select':\n                    return element.selectedIndex >= 0 ? ko.selectExtensions.readValue(element.options[element.selectedIndex]) : undefined;\n                default:\n                    return element.value;\n            }\n        },\n\n        writeValue: function(element, value, allowUnset) {\n            switch (ko.utils.tagNameLower(element)) {\n                case 'option':\n                    if (typeof value === \"string\") {\n                        ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, undefined);\n                        if (hasDomDataExpandoProperty in element) { // IE <= 8 throws errors if you delete non-existent properties from a DOM node\n                            delete element[hasDomDataExpandoProperty];\n                        }\n                        element.value = value;\n                    }\n                    else {\n                        // Store arbitrary object using DomData\n                        ko.utils.domData.set(element, ko.bindingHandlers.options.optionValueDomDataKey, value);\n                        element[hasDomDataExpandoProperty] = true;\n\n                        // Special treatment of numbers is just for backward compatibility. KO 1.2.1 wrote numerical values to element.value.\n                        element.value = typeof value === \"number\" ? value : \"\";\n                    }\n                    break;\n                case 'select':\n                    if (value === \"\" || value === null)       // A blank string or null value will select the caption\n                        value = undefined;\n                    var selection = -1;\n                    for (var i = 0, n = element.options.length, optionValue; i < n; ++i) {\n                        optionValue = ko.selectExtensions.readValue(element.options[i]);\n                        // Include special check to handle selecting a caption with a blank string value\n                        if (optionValue == value || (optionValue === \"\" && value === undefined)) {\n                            selection = i;\n                            break;\n                        }\n                    }\n                    if (allowUnset || selection >= 0 || (value === undefined && element.size > 1)) {\n                        element.selectedIndex = selection;\n                        if (ko.utils.ieVersion === 6) {\n                            // Workaround for IE6 bug: It won't reliably apply values to SELECT nodes during the same execution thread\n                            // right after you've changed the set of OPTION nodes on it. So for that node type, we'll schedule a second thread\n                            // to apply the value as well.\n                            ko.utils.setTimeout(function () {\n                                element.selectedIndex = selection;\n                            }, 0);\n                        }\n                    }\n                    break;\n                default:\n                    if ((value === null) || (value === undefined))\n                        value = \"\";\n                    element.value = value;\n                    break;\n            }\n        }\n    };\n})();\n\nko.exportSymbol('selectExtensions', ko.selectExtensions);\nko.exportSymbol('selectExtensions.readValue', ko.selectExtensions.readValue);\nko.exportSymbol('selectExtensions.writeValue', ko.selectExtensions.writeValue);\nko.expressionRewriting = (function () {\n    var javaScriptReservedWords = [\"true\", \"false\", \"null\", \"undefined\"];\n\n    // Matches something that can be assigned to--either an isolated identifier or something ending with a property accessor\n    // This is designed to be simple and avoid false negatives, but could produce false positives (e.g., a+b.c).\n    // This also will not properly handle nested brackets (e.g., obj1[obj2['prop']]; see #911).\n    var javaScriptAssignmentTarget = /^(?:[$_a-z][$\\w]*|(.+)(\\.\\s*[$_a-z][$\\w]*|\\[.+\\]))$/i;\n\n    function getWriteableValue(expression) {\n        if (ko.utils.arrayIndexOf(javaScriptReservedWords, expression) >= 0)\n            return false;\n        var match = expression.match(javaScriptAssignmentTarget);\n        return match === null ? false : match[1] ? ('Object(' + match[1] + ')' + match[2]) : expression;\n    }\n\n    // The following regular expressions will be used to split an object-literal string into tokens\n\n    var specials = ',\"\\'`{}()/:[\\\\]',    // These characters have special meaning to the parser and must not appear in the middle of a token, except as part of a string.\n        // Create the actual regular expression by or-ing the following regex strings. The order is important.\n        bindingToken = RegExp([\n            // These match strings, either with double quotes, single quotes, or backticks\n            '\"(?:\\\\\\\\.|[^\"])*\"',\n            \"'(?:\\\\\\\\.|[^'])*'\",\n            \"`(?:\\\\\\\\.|[^`])*`\",\n            // Match C style comments\n            \"/\\\\*(?:[^*]|\\\\*+[^*/])*\\\\*+/\",\n            // Match C++ style comments\n            \"//.*\\n\",\n            // Match a regular expression (text enclosed by slashes), but will also match sets of divisions\n            // as a regular expression (this is handled by the parsing loop below).\n            '/(?:\\\\\\\\.|[^/])+/\\w*',\n            // Match text (at least two characters) that does not contain any of the above special characters,\n            // although some of the special characters are allowed to start it (all but the colon and comma).\n            // The text can contain spaces, but leading or trailing spaces are skipped.\n            '[^\\\\s:,/][^' + specials + ']*[^\\\\s' + specials + ']',\n            // Match any non-space character not matched already. This will match colons and commas, since they're\n            // not matched by \"everyThingElse\", but will also match any other single character that wasn't already\n            // matched (for example: in \"a: 1, b: 2\", each of the non-space characters will be matched by oneNotSpace).\n            '[^\\\\s]'\n        ].join('|'), 'g'),\n\n        // Match end of previous token to determine whether a slash is a division or regex.\n        divisionLookBehind = /[\\])\"'A-Za-z0-9_$]+$/,\n        keywordRegexLookBehind = {'in':1,'return':1,'typeof':1};\n\n    function parseObjectLiteral(objectLiteralString) {\n        // Trim leading and trailing spaces from the string\n        var str = ko.utils.stringTrim(objectLiteralString);\n\n        // Trim braces '{' surrounding the whole object literal\n        if (str.charCodeAt(0) === 123) str = str.slice(1, -1);\n\n        // Add a newline to correctly match a C++ style comment at the end of the string and\n        // add a comma so that we don't need a separate code block to deal with the last item\n        str += \"\\n,\";\n\n        // Split into tokens\n        var result = [], toks = str.match(bindingToken), key, values = [], depth = 0;\n\n        if (toks.length > 1) {\n            for (var i = 0, tok; tok = toks[i]; ++i) {\n                var c = tok.charCodeAt(0);\n                // A comma signals the end of a key/value pair if depth is zero\n                if (c === 44) { // \",\"\n                    if (depth <= 0) {\n                        result.push((key && values.length) ? {key: key, value: values.join('')} : {'unknown': key || values.join('')});\n                        key = depth = 0;\n                        values = [];\n                        continue;\n                    }\n                // Simply skip the colon that separates the name and value\n                } else if (c === 58) { // \":\"\n                    if (!depth && !key && values.length === 1) {\n                        key = values.pop();\n                        continue;\n                    }\n                // Comments: skip them\n                } else if (c === 47 && tok.length > 1 && (tok.charCodeAt(1) === 47 || tok.charCodeAt(1) === 42)) {  // \"//\" or \"/*\"\n                    continue;\n                // A set of slashes is initially matched as a regular expression, but could be division\n                } else if (c === 47 && i && tok.length > 1) {  // \"/\"\n                    // Look at the end of the previous token to determine if the slash is actually division\n                    var match = toks[i-1].match(divisionLookBehind);\n                    if (match && !keywordRegexLookBehind[match[0]]) {\n                        // The slash is actually a division punctuator; re-parse the remainder of the string (not including the slash)\n                        str = str.substr(str.indexOf(tok) + 1);\n                        toks = str.match(bindingToken);\n                        i = -1;\n                        // Continue with just the slash\n                        tok = '/';\n                    }\n                // Increment depth for parentheses, braces, and brackets so that interior commas are ignored\n                } else if (c === 40 || c === 123 || c === 91) { // '(', '{', '['\n                    ++depth;\n                } else if (c === 41 || c === 125 || c === 93) { // ')', '}', ']'\n                    --depth;\n                // The key will be the first token; if it's a string, trim the quotes\n                } else if (!key && !values.length && (c === 34 || c === 39)) { // '\"', \"'\"\n                    tok = tok.slice(1, -1);\n                }\n                values.push(tok);\n            }\n            if (depth > 0) {\n                throw Error(\"Unbalanced parentheses, braces, or brackets\");\n            }\n        }\n        return result;\n    }\n\n    // Two-way bindings include a write function that allow the handler to update the value even if it's not an observable.\n    var twoWayBindings = {};\n\n    function preProcessBindings(bindingsStringOrKeyValueArray, bindingOptions) {\n        bindingOptions = bindingOptions || {};\n\n        function processKeyValue(key, val) {\n            var writableVal;\n            function callPreprocessHook(obj) {\n                return (obj && obj['preprocess']) ? (val = obj['preprocess'](val, key, processKeyValue)) : true;\n            }\n            if (!bindingParams) {\n                if (!callPreprocessHook(ko['getBindingHandler'](key)))\n                    return;\n\n                if (twoWayBindings[key] && (writableVal = getWriteableValue(val))) {\n                    // For two-way bindings, provide a write method in case the value\n                    // isn't a writable observable.\n                    var writeKey = typeof twoWayBindings[key] == 'string' ? twoWayBindings[key] : key;\n                    propertyAccessorResultStrings.push(\"'\" + writeKey + \"':function(_z){\" + writableVal + \"=_z}\");\n                }\n            }\n            // Values are wrapped in a function so that each value can be accessed independently\n            if (makeValueAccessors) {\n                val = 'function(){return ' + val + ' }';\n            }\n            resultStrings.push(\"'\" + key + \"':\" + val);\n        }\n\n        var resultStrings = [],\n            propertyAccessorResultStrings = [],\n            makeValueAccessors = bindingOptions['valueAccessors'],\n            bindingParams = bindingOptions['bindingParams'],\n            keyValueArray = typeof bindingsStringOrKeyValueArray === \"string\" ?\n                parseObjectLiteral(bindingsStringOrKeyValueArray) : bindingsStringOrKeyValueArray;\n\n        ko.utils.arrayForEach(keyValueArray, function(keyValue) {\n            processKeyValue(keyValue.key || keyValue['unknown'], keyValue.value);\n        });\n\n        if (propertyAccessorResultStrings.length)\n            processKeyValue('_ko_property_writers', \"{\" + propertyAccessorResultStrings.join(\",\") + \" }\");\n\n        return resultStrings.join(\",\");\n    }\n\n    return {\n        bindingRewriteValidators: [],\n\n        twoWayBindings: twoWayBindings,\n\n        parseObjectLiteral: parseObjectLiteral,\n\n        preProcessBindings: preProcessBindings,\n\n        keyValueArrayContainsKey: function(keyValueArray, key) {\n            for (var i = 0; i < keyValueArray.length; i++)\n                if (keyValueArray[i]['key'] == key)\n                    return true;\n            return false;\n        },\n\n        // Internal, private KO utility for updating model properties from within bindings\n        // property:            If the property being updated is (or might be) an observable, pass it here\n        //                      If it turns out to be a writable observable, it will be written to directly\n        // allBindings:         An object with a get method to retrieve bindings in the current execution context.\n        //                      This will be searched for a '_ko_property_writers' property in case you're writing to a non-observable\n        // key:                 The key identifying the property to be written. Example: for { hasFocus: myValue }, write to 'myValue' by specifying the key 'hasFocus'\n        // value:               The value to be written\n        // checkIfDifferent:    If true, and if the property being written is a writable observable, the value will only be written if\n        //                      it is !== existing value on that writable observable\n        writeValueToProperty: function(property, allBindings, key, value, checkIfDifferent) {\n            if (!property || !ko.isObservable(property)) {\n                var propWriters = allBindings.get('_ko_property_writers');\n                if (propWriters && propWriters[key])\n                    propWriters[key](value);\n            } else if (ko.isWriteableObservable(property) && (!checkIfDifferent || property.peek() !== value)) {\n                property(value);\n            }\n        }\n    };\n})();\n\nko.exportSymbol('expressionRewriting', ko.expressionRewriting);\nko.exportSymbol('expressionRewriting.bindingRewriteValidators', ko.expressionRewriting.bindingRewriteValidators);\nko.exportSymbol('expressionRewriting.parseObjectLiteral', ko.expressionRewriting.parseObjectLiteral);\nko.exportSymbol('expressionRewriting.preProcessBindings', ko.expressionRewriting.preProcessBindings);\n\n// Making bindings explicitly declare themselves as \"two way\" isn't ideal in the long term (it would be better if\n// all bindings could use an official 'property writer' API without needing to declare that they might). However,\n// since this is not, and has never been, a public API (_ko_property_writers was never documented), it's acceptable\n// as an internal implementation detail in the short term.\n// For those developers who rely on _ko_property_writers in their custom bindings, we expose _twoWayBindings as an\n// undocumented feature that makes it relatively easy to upgrade to KO 3.0. However, this is still not an official\n// public API, and we reserve the right to remove it at any time if we create a real public property writers API.\nko.exportSymbol('expressionRewriting._twoWayBindings', ko.expressionRewriting.twoWayBindings);\n\n// For backward compatibility, define the following aliases. (Previously, these function names were misleading because\n// they referred to JSON specifically, even though they actually work with arbitrary JavaScript object literal expressions.)\nko.exportSymbol('jsonExpressionRewriting', ko.expressionRewriting);\nko.exportSymbol('jsonExpressionRewriting.insertPropertyAccessorsIntoJson', ko.expressionRewriting.preProcessBindings);\n(function() {\n    // \"Virtual elements\" is an abstraction on top of the usual DOM API which understands the notion that comment nodes\n    // may be used to represent hierarchy (in addition to the DOM's natural hierarchy).\n    // If you call the DOM-manipulating functions on ko.virtualElements, you will be able to read and write the state\n    // of that virtual hierarchy\n    //\n    // The point of all this is to support containerless templates (e.g., <!-- ko foreach:someCollection -->blah<!-- /ko -->)\n    // without having to scatter special cases all over the binding and templating code.\n\n    // IE 9 cannot reliably read the \"nodeValue\" property of a comment node (see https://github.com/SteveSanderson/knockout/issues/186)\n    // but it does give them a nonstandard alternative property called \"text\" that it can read reliably. Other browsers don't have that property.\n    // So, use node.text where available, and node.nodeValue elsewhere\n    var commentNodesHaveTextProperty = document && document.createComment(\"test\").text === \"<!--test-->\";\n\n    var startCommentRegex = commentNodesHaveTextProperty ? /^<!--\\s*ko(?:\\s+([\\s\\S]+))?\\s*-->$/ : /^\\s*ko(?:\\s+([\\s\\S]+))?\\s*$/;\n    var endCommentRegex =   commentNodesHaveTextProperty ? /^<!--\\s*\\/ko\\s*-->$/ : /^\\s*\\/ko\\s*$/;\n    var htmlTagsWithOptionallyClosingChildren = { 'ul': true, 'ol': true };\n\n    function isStartComment(node) {\n        return (node.nodeType == 8) && startCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isEndComment(node) {\n        return (node.nodeType == 8) && endCommentRegex.test(commentNodesHaveTextProperty ? node.text : node.nodeValue);\n    }\n\n    function isUnmatchedEndComment(node) {\n        return isEndComment(node) && !(ko.utils.domData.get(node, matchedEndCommentDataKey));\n    }\n\n    var matchedEndCommentDataKey = \"__ko_matchedEndComment__\"\n\n    function getVirtualChildren(startComment, allowUnbalanced) {\n        var currentNode = startComment;\n        var depth = 1;\n        var children = [];\n        while (currentNode = currentNode.nextSibling) {\n            if (isEndComment(currentNode)) {\n                ko.utils.domData.set(currentNode, matchedEndCommentDataKey, true);\n                depth--;\n                if (depth === 0)\n                    return children;\n            }\n\n            children.push(currentNode);\n\n            if (isStartComment(currentNode))\n                depth++;\n        }\n        if (!allowUnbalanced)\n            throw new Error(\"Cannot find closing comment tag to match: \" + startComment.nodeValue);\n        return null;\n    }\n\n    function getMatchingEndComment(startComment, allowUnbalanced) {\n        var allVirtualChildren = getVirtualChildren(startComment, allowUnbalanced);\n        if (allVirtualChildren) {\n            if (allVirtualChildren.length > 0)\n                return allVirtualChildren[allVirtualChildren.length - 1].nextSibling;\n            return startComment.nextSibling;\n        } else\n            return null; // Must have no matching end comment, and allowUnbalanced is true\n    }\n\n    function getUnbalancedChildTags(node) {\n        // e.g., from <div>OK</div><!-- ko blah --><span>Another</span>, returns: <!-- ko blah --><span>Another</span>\n        //       from <div>OK</div><!-- /ko --><!-- /ko -->,             returns: <!-- /ko --><!-- /ko -->\n        var childNode = node.firstChild, captureRemaining = null;\n        if (childNode) {\n            do {\n                if (captureRemaining)                   // We already hit an unbalanced node and are now just scooping up all subsequent nodes\n                    captureRemaining.push(childNode);\n                else if (isStartComment(childNode)) {\n                    var matchingEndComment = getMatchingEndComment(childNode, /* allowUnbalanced: */ true);\n                    if (matchingEndComment)             // It's a balanced tag, so skip immediately to the end of this virtual set\n                        childNode = matchingEndComment;\n                    else\n                        captureRemaining = [childNode]; // It's unbalanced, so start capturing from this point\n                } else if (isEndComment(childNode)) {\n                    captureRemaining = [childNode];     // It's unbalanced (if it wasn't, we'd have skipped over it already), so start capturing\n                }\n            } while (childNode = childNode.nextSibling);\n        }\n        return captureRemaining;\n    }\n\n    ko.virtualElements = {\n        allowedBindings: {},\n\n        childNodes: function(node) {\n            return isStartComment(node) ? getVirtualChildren(node) : node.childNodes;\n        },\n\n        emptyNode: function(node) {\n            if (!isStartComment(node))\n                ko.utils.emptyDomNode(node);\n            else {\n                var virtualChildren = ko.virtualElements.childNodes(node);\n                for (var i = 0, j = virtualChildren.length; i < j; i++)\n                    ko.removeNode(virtualChildren[i]);\n            }\n        },\n\n        setDomNodeChildren: function(node, childNodes) {\n            if (!isStartComment(node))\n                ko.utils.setDomNodeChildren(node, childNodes);\n            else {\n                ko.virtualElements.emptyNode(node);\n                var endCommentNode = node.nextSibling; // Must be the next sibling, as we just emptied the children\n                for (var i = 0, j = childNodes.length; i < j; i++)\n                    endCommentNode.parentNode.insertBefore(childNodes[i], endCommentNode);\n            }\n        },\n\n        prepend: function(containerNode, nodeToPrepend) {\n            var insertBeforeNode;\n\n            if (isStartComment(containerNode)) {\n                // Start comments must always have a parent and at least one following sibling (the end comment)\n                insertBeforeNode = containerNode.nextSibling;\n                containerNode = containerNode.parentNode;\n            } else {\n                insertBeforeNode = containerNode.firstChild;\n            }\n\n            if (!insertBeforeNode) {\n                containerNode.appendChild(nodeToPrepend);\n            } else if (nodeToPrepend !== insertBeforeNode) {       // IE will sometimes crash if you try to insert a node before itself\n                containerNode.insertBefore(nodeToPrepend, insertBeforeNode);\n            }\n        },\n\n        insertAfter: function(containerNode, nodeToInsert, insertAfterNode) {\n            if (!insertAfterNode) {\n                ko.virtualElements.prepend(containerNode, nodeToInsert);\n            } else {\n                // Children of start comments must always have a parent and at least one following sibling (the end comment)\n                var insertBeforeNode = insertAfterNode.nextSibling;\n\n                if (isStartComment(containerNode)) {\n                    containerNode = containerNode.parentNode;\n                }\n\n                if (!insertBeforeNode) {\n                    containerNode.appendChild(nodeToInsert);\n                } else if (nodeToInsert !== insertBeforeNode) {       // IE will sometimes crash if you try to insert a node before itself\n                    containerNode.insertBefore(nodeToInsert, insertBeforeNode);\n                }\n            }\n        },\n\n        firstChild: function(node) {\n            if (!isStartComment(node)) {\n                if (node.firstChild && isEndComment(node.firstChild)) {\n                    throw new Error(\"Found invalid end comment, as the first child of \" + node);\n                }\n                return node.firstChild;\n            } else if (!node.nextSibling || isEndComment(node.nextSibling)) {\n                return null;\n            } else {\n                return node.nextSibling;\n            }\n        },\n\n        nextSibling: function(node) {\n            if (isStartComment(node)) {\n                node = getMatchingEndComment(node);\n            }\n\n            if (node.nextSibling && isEndComment(node.nextSibling)) {\n                if (isUnmatchedEndComment(node.nextSibling)) {\n                    throw Error(\"Found end comment without a matching opening comment, as child of \" + node);\n                } else {\n                    return null;\n                }\n            } else {\n                return node.nextSibling;\n            }\n        },\n\n        hasBindingValue: isStartComment,\n\n        virtualNodeBindingValue: function(node) {\n            var regexMatch = (commentNodesHaveTextProperty ? node.text : node.nodeValue).match(startCommentRegex);\n            return regexMatch ? regexMatch[1] : null;\n        },\n\n        normaliseVirtualElementDomStructure: function(elementVerified) {\n            // Workaround for https://github.com/SteveSanderson/knockout/issues/155\n            // (IE <= 8 or IE 9 quirks mode parses your HTML weirdly, treating closing </li> tags as if they don't exist, thereby moving comment nodes\n            // that are direct descendants of <ul> into the preceding <li>)\n            if (!htmlTagsWithOptionallyClosingChildren[ko.utils.tagNameLower(elementVerified)])\n                return;\n\n            // Scan immediate children to see if they contain unbalanced comment tags. If they do, those comment tags\n            // must be intended to appear *after* that child, so move them there.\n            var childNode = elementVerified.firstChild;\n            if (childNode) {\n                do {\n                    if (childNode.nodeType === 1) {\n                        var unbalancedTags = getUnbalancedChildTags(childNode);\n                        if (unbalancedTags) {\n                            // Fix up the DOM by moving the unbalanced tags to where they most likely were intended to be placed - *after* the child\n                            var nodeToInsertBefore = childNode.nextSibling;\n                            for (var i = 0; i < unbalancedTags.length; i++) {\n                                if (nodeToInsertBefore)\n                                    elementVerified.insertBefore(unbalancedTags[i], nodeToInsertBefore);\n                                else\n                                    elementVerified.appendChild(unbalancedTags[i]);\n                            }\n                        }\n                    }\n                } while (childNode = childNode.nextSibling);\n            }\n        }\n    };\n})();\nko.exportSymbol('virtualElements', ko.virtualElements);\nko.exportSymbol('virtualElements.allowedBindings', ko.virtualElements.allowedBindings);\nko.exportSymbol('virtualElements.emptyNode', ko.virtualElements.emptyNode);\n//ko.exportSymbol('virtualElements.firstChild', ko.virtualElements.firstChild);     // firstChild is not minified\nko.exportSymbol('virtualElements.insertAfter', ko.virtualElements.insertAfter);\n//ko.exportSymbol('virtualElements.nextSibling', ko.virtualElements.nextSibling);   // nextSibling is not minified\nko.exportSymbol('virtualElements.prepend', ko.virtualElements.prepend);\nko.exportSymbol('virtualElements.setDomNodeChildren', ko.virtualElements.setDomNodeChildren);\n(function() {\n    var defaultBindingAttributeName = \"data-bind\";\n\n    ko.bindingProvider = function() {\n        this.bindingCache = {};\n    };\n\n    ko.utils.extend(ko.bindingProvider.prototype, {\n        'nodeHasBindings': function(node) {\n            switch (node.nodeType) {\n                case 1: // Element\n                    return node.getAttribute(defaultBindingAttributeName) != null\n                        || ko.components['getComponentNameForNode'](node);\n                case 8: // Comment node\n                    return ko.virtualElements.hasBindingValue(node);\n                default: return false;\n            }\n        },\n\n        'getBindings': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ false);\n        },\n\n        'getBindingAccessors': function(node, bindingContext) {\n            var bindingsString = this['getBindingsString'](node, bindingContext),\n                parsedBindings = bindingsString ? this['parseBindingsString'](bindingsString, bindingContext, node, { 'valueAccessors': true }) : null;\n            return ko.components.addBindingsForCustomElement(parsedBindings, node, bindingContext, /* valueAccessors */ true);\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'getBindingsString': function(node, bindingContext) {\n            switch (node.nodeType) {\n                case 1: return node.getAttribute(defaultBindingAttributeName);   // Element\n                case 8: return ko.virtualElements.virtualNodeBindingValue(node); // Comment node\n                default: return null;\n            }\n        },\n\n        // The following function is only used internally by this default provider.\n        // It's not part of the interface definition for a general binding provider.\n        'parseBindingsString': function(bindingsString, bindingContext, node, options) {\n            try {\n                var bindingFunction = createBindingsStringEvaluatorViaCache(bindingsString, this.bindingCache, options);\n                return bindingFunction(bindingContext, node);\n            } catch (ex) {\n                ex.message = \"Unable to parse bindings.\\nBindings value: \" + bindingsString + \"\\nMessage: \" + ex.message;\n                throw ex;\n            }\n        }\n    });\n\n    ko.bindingProvider['instance'] = new ko.bindingProvider();\n\n    function createBindingsStringEvaluatorViaCache(bindingsString, cache, options) {\n        var cacheKey = bindingsString + (options && options['valueAccessors'] || '');\n        return cache[cacheKey]\n            || (cache[cacheKey] = createBindingsStringEvaluator(bindingsString, options));\n    }\n\n    function createBindingsStringEvaluator(bindingsString, options) {\n        // Build the source for a function that evaluates \"expression\"\n        // For each scope variable, add an extra level of \"with\" nesting\n        // Example result: with(sc1) { with(sc0) { return (expression) } }\n        var rewrittenBindings = ko.expressionRewriting.preProcessBindings(bindingsString, options),\n            functionBody = \"with($context){with($data||{}){return{\" + rewrittenBindings + \"}}}\";\n        return new Function(\"$context\", \"$element\", functionBody);\n    }\n})();\n\nko.exportSymbol('bindingProvider', ko.bindingProvider);\n(function () {\n    // Hide or don't minify context properties, see https://github.com/knockout/knockout/issues/2294\n    var contextSubscribable = ko.utils.createSymbolOrString('_subscribable');\n    var contextAncestorBindingInfo = ko.utils.createSymbolOrString('_ancestorBindingInfo');\n    var contextDataDependency = ko.utils.createSymbolOrString('_dataDependency');\n\n    ko.bindingHandlers = {};\n\n    // The following element types will not be recursed into during binding.\n    var bindingDoesNotRecurseIntoElementTypes = {\n        // Don't want bindings that operate on text nodes to mutate <script> and <textarea> contents,\n        // because it's unexpected and a potential XSS issue.\n        // Also bindings should not operate on <template> elements since this breaks in Internet Explorer\n        // and because such elements' contents are always intended to be bound in a different context\n        // from where they appear in the document.\n        'script': true,\n        'textarea': true,\n        'template': true\n    };\n\n    // Use an overridable method for retrieving binding handlers so that plugins may support dynamically created handlers\n    ko['getBindingHandler'] = function(bindingKey) {\n        return ko.bindingHandlers[bindingKey];\n    };\n\n    var inheritParentVm = {};\n\n    // The ko.bindingContext constructor is only called directly to create the root context. For child\n    // contexts, use bindingContext.createChildContext or bindingContext.extend.\n    ko.bindingContext = function(dataItemOrAccessor, parentContext, dataItemAlias, extendCallback, options) {\n\n        // The binding context object includes static properties for the current, parent, and root view models.\n        // If a view model is actually stored in an observable, the corresponding binding context object, and\n        // any child contexts, must be updated when the view model is changed.\n        function updateContext() {\n            // Most of the time, the context will directly get a view model object, but if a function is given,\n            // we call the function to retrieve the view model. If the function accesses any observables or returns\n            // an observable, the dependency is tracked, and those observables can later cause the binding\n            // context to be updated.\n            var dataItemOrObservable = isFunc ? realDataItemOrAccessor() : realDataItemOrAccessor,\n                dataItem = ko.utils.unwrapObservable(dataItemOrObservable);\n\n            if (parentContext) {\n                // Copy $root and any custom properties from the parent context\n                ko.utils.extend(self, parentContext);\n\n                // Copy Symbol properties\n                if (contextAncestorBindingInfo in parentContext) {\n                    self[contextAncestorBindingInfo] = parentContext[contextAncestorBindingInfo];\n                }\n            } else {\n                self['$parents'] = [];\n                self['$root'] = dataItem;\n\n                // Export 'ko' in the binding context so it will be available in bindings and templates\n                // even if 'ko' isn't exported as a global, such as when using an AMD loader.\n                // See https://github.com/SteveSanderson/knockout/issues/490\n                self['ko'] = ko;\n            }\n\n            self[contextSubscribable] = subscribable;\n\n            if (shouldInheritData) {\n                dataItem = self['$data'];\n            } else {\n                self['$rawData'] = dataItemOrObservable;\n                self['$data'] = dataItem;\n            }\n\n            if (dataItemAlias)\n                self[dataItemAlias] = dataItem;\n\n            // The extendCallback function is provided when creating a child context or extending a context.\n            // It handles the specific actions needed to finish setting up the binding context. Actions in this\n            // function could also add dependencies to this binding context.\n            if (extendCallback)\n                extendCallback(self, parentContext, dataItem);\n\n            // When a \"parent\" context is given and we don't already have a dependency on its context, register a dependency on it.\n            // Thus whenever the parent context is updated, this context will also be updated.\n            if (parentContext && parentContext[contextSubscribable] && !ko.computedContext.computed().hasAncestorDependency(parentContext[contextSubscribable])) {\n                parentContext[contextSubscribable]();\n            }\n\n            if (dataDependency) {\n                self[contextDataDependency] = dataDependency;\n            }\n\n            return self['$data'];\n        }\n\n        var self = this,\n            shouldInheritData = dataItemOrAccessor === inheritParentVm,\n            realDataItemOrAccessor = shouldInheritData ? undefined : dataItemOrAccessor,\n            isFunc = typeof(realDataItemOrAccessor) == \"function\" && !ko.isObservable(realDataItemOrAccessor),\n            nodes,\n            subscribable,\n            dataDependency = options && options['dataDependency'];\n\n        if (options && options['exportDependencies']) {\n            // The \"exportDependencies\" option means that the calling code will track any dependencies and re-create\n            // the binding context when they change.\n            updateContext();\n        } else {\n            subscribable = ko.pureComputed(updateContext);\n            subscribable.peek();\n\n            // At this point, the binding context has been initialized, and the \"subscribable\" computed observable is\n            // subscribed to any observables that were accessed in the process. If there is nothing to track, the\n            // computed will be inactive, and we can safely throw it away. If it's active, the computed is stored in\n            // the context object.\n            if (subscribable.isActive()) {\n                // Always notify because even if the model ($data) hasn't changed, other context properties might have changed\n                subscribable['equalityComparer'] = null;\n            } else {\n                self[contextSubscribable] = undefined;\n            }\n        }\n    }\n\n    // Extend the binding context hierarchy with a new view model object. If the parent context is watching\n    // any observables, the new child context will automatically get a dependency on the parent context.\n    // But this does not mean that the $data value of the child context will also get updated. If the child\n    // view model also depends on the parent view model, you must provide a function that returns the correct\n    // view model on each update.\n    ko.bindingContext.prototype['createChildContext'] = function (dataItemOrAccessor, dataItemAlias, extendCallback, options) {\n        if (!options && dataItemAlias && typeof dataItemAlias == \"object\") {\n            options = dataItemAlias;\n            dataItemAlias = options['as'];\n            extendCallback = options['extend'];\n        }\n\n        if (dataItemAlias && options && options['noChildContext']) {\n            var isFunc = typeof(dataItemOrAccessor) == \"function\" && !ko.isObservable(dataItemOrAccessor);\n            return new ko.bindingContext(inheritParentVm, this, null, function (self) {\n                if (extendCallback)\n                    extendCallback(self);\n                self[dataItemAlias] = isFunc ? dataItemOrAccessor() : dataItemOrAccessor;\n            }, options);\n        }\n\n        return new ko.bindingContext(dataItemOrAccessor, this, dataItemAlias, function (self, parentContext) {\n            // Extend the context hierarchy by setting the appropriate pointers\n            self['$parentContext'] = parentContext;\n            self['$parent'] = parentContext['$data'];\n            self['$parents'] = (parentContext['$parents'] || []).slice(0);\n            self['$parents'].unshift(self['$parent']);\n            if (extendCallback)\n                extendCallback(self);\n        }, options);\n    };\n\n    // Extend the binding context with new custom properties. This doesn't change the context hierarchy.\n    // Similarly to \"child\" contexts, provide a function here to make sure that the correct values are set\n    // when an observable view model is updated.\n    ko.bindingContext.prototype['extend'] = function(properties, options) {\n        return new ko.bindingContext(inheritParentVm, this, null, function(self, parentContext) {\n            ko.utils.extend(self, typeof(properties) == \"function\" ? properties(self) : properties);\n        }, options);\n    };\n\n    var boundElementDomDataKey = ko.utils.domData.nextKey();\n\n    function asyncContextDispose(node) {\n        var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey),\n            asyncContext = bindingInfo && bindingInfo.asyncContext;\n        if (asyncContext) {\n            bindingInfo.asyncContext = null;\n            asyncContext.notifyAncestor();\n        }\n    }\n    function AsyncCompleteContext(node, bindingInfo, ancestorBindingInfo) {\n        this.node = node;\n        this.bindingInfo = bindingInfo;\n        this.asyncDescendants = [];\n        this.childrenComplete = false;\n\n        if (!bindingInfo.asyncContext) {\n            ko.utils.domNodeDisposal.addDisposeCallback(node, asyncContextDispose);\n        }\n\n        if (ancestorBindingInfo && ancestorBindingInfo.asyncContext) {\n            ancestorBindingInfo.asyncContext.asyncDescendants.push(node);\n            this.ancestorBindingInfo = ancestorBindingInfo;\n        }\n    }\n    AsyncCompleteContext.prototype.notifyAncestor = function () {\n        if (this.ancestorBindingInfo && this.ancestorBindingInfo.asyncContext) {\n            this.ancestorBindingInfo.asyncContext.descendantComplete(this.node);\n        }\n    };\n    AsyncCompleteContext.prototype.descendantComplete = function (node) {\n        ko.utils.arrayRemoveItem(this.asyncDescendants, node);\n        if (!this.asyncDescendants.length && this.childrenComplete) {\n            this.completeChildren();\n        }\n    };\n    AsyncCompleteContext.prototype.completeChildren = function () {\n        this.childrenComplete = true;\n        if (this.bindingInfo.asyncContext && !this.asyncDescendants.length) {\n            this.bindingInfo.asyncContext = null;\n            ko.utils.domNodeDisposal.removeDisposeCallback(this.node, asyncContextDispose);\n            ko.bindingEvent.notify(this.node, ko.bindingEvent.descendantsComplete);\n            this.notifyAncestor();\n        }\n    };\n\n    ko.bindingEvent = {\n        childrenComplete: \"childrenComplete\",\n        descendantsComplete : \"descendantsComplete\",\n\n        subscribe: function (node, event, callback, context, options) {\n            var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\n            if (!bindingInfo.eventSubscribable) {\n                bindingInfo.eventSubscribable = new ko.subscribable;\n            }\n            if (options && options['notifyImmediately'] && bindingInfo.notifiedEvents[event]) {\n                ko.dependencyDetection.ignore(callback, context, [node]);\n            }\n            return bindingInfo.eventSubscribable.subscribe(callback, context, event);\n        },\n\n        notify: function (node, event) {\n            var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey);\n            if (bindingInfo) {\n                bindingInfo.notifiedEvents[event] = true;\n                if (bindingInfo.eventSubscribable) {\n                    bindingInfo.eventSubscribable['notifySubscribers'](node, event);\n                }\n                if (event == ko.bindingEvent.childrenComplete) {\n                    if (bindingInfo.asyncContext) {\n                        bindingInfo.asyncContext.completeChildren();\n                    } else if (bindingInfo.asyncContext === undefined && bindingInfo.eventSubscribable && bindingInfo.eventSubscribable.hasSubscriptionsForEvent(ko.bindingEvent.descendantsComplete)) {\n                        // It's currently an error to register a descendantsComplete handler for a node that was never registered as completing asynchronously.\n                        // That's because without the asyncContext, we don't have a way to know that all descendants have completed.\n                        throw new Error(\"descendantsComplete event not supported for bindings on this node\");\n                    }\n                }\n            }\n        },\n\n        startPossiblyAsyncContentBinding: function (node, bindingContext) {\n            var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\n\n            if (!bindingInfo.asyncContext) {\n                bindingInfo.asyncContext = new AsyncCompleteContext(node, bindingInfo, bindingContext[contextAncestorBindingInfo]);\n            }\n\n            // If the provided context was already extended with this node's binding info, just return the extended context\n            if (bindingContext[contextAncestorBindingInfo] == bindingInfo) {\n                return bindingContext;\n            }\n\n            return bindingContext['extend'](function (ctx) {\n                ctx[contextAncestorBindingInfo] = bindingInfo;\n            });\n        }\n    };\n\n    // Returns the valueAccessor function for a binding value\n    function makeValueAccessor(value) {\n        return function() {\n            return value;\n        };\n    }\n\n    // Returns the value of a valueAccessor function\n    function evaluateValueAccessor(valueAccessor) {\n        return valueAccessor();\n    }\n\n    // Given a function that returns bindings, create and return a new object that contains\n    // binding value-accessors functions. Each accessor function calls the original function\n    // so that it always gets the latest value and all dependencies are captured. This is used\n    // by ko.applyBindingsToNode and getBindingsAndMakeAccessors.\n    function makeAccessorsFromFunction(callback) {\n        return ko.utils.objectMap(ko.dependencyDetection.ignore(callback), function(value, key) {\n            return function() {\n                return callback()[key];\n            };\n        });\n    }\n\n    // Given a bindings function or object, create and return a new object that contains\n    // binding value-accessors functions. This is used by ko.applyBindingsToNode.\n    function makeBindingAccessors(bindings, context, node) {\n        if (typeof bindings === 'function') {\n            return makeAccessorsFromFunction(bindings.bind(null, context, node));\n        } else {\n            return ko.utils.objectMap(bindings, makeValueAccessor);\n        }\n    }\n\n    // This function is used if the binding provider doesn't include a getBindingAccessors function.\n    // It must be called with 'this' set to the provider instance.\n    function getBindingsAndMakeAccessors(node, context) {\n        return makeAccessorsFromFunction(this['getBindings'].bind(this, node, context));\n    }\n\n    function validateThatBindingIsAllowedForVirtualElements(bindingName) {\n        var validator = ko.virtualElements.allowedBindings[bindingName];\n        if (!validator)\n            throw new Error(\"The binding '\" + bindingName + \"' cannot be used with virtual elements\")\n    }\n\n    function applyBindingsToDescendantsInternal(bindingContext, elementOrVirtualElement) {\n        var nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n\n        if (nextInQueue) {\n            var currentChild,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            // Preprocessing allows a binding provider to mutate a node before bindings are applied to it. For example it's\n            // possible to insert new siblings after it, and/or replace the node with a different one. This can be used to\n            // implement custom binding syntaxes, such as {{ value }} for string interpolation, or custom element types that\n            // trigger insertion of <template> contents at that point in the document.\n            if (preprocessNode) {\n                while (currentChild = nextInQueue) {\n                    nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                    preprocessNode.call(provider, currentChild);\n                }\n                // Reset nextInQueue for the next loop\n                nextInQueue = ko.virtualElements.firstChild(elementOrVirtualElement);\n            }\n\n            while (currentChild = nextInQueue) {\n                // Keep a record of the next child *before* applying bindings, in case the binding removes the current child from its position\n                nextInQueue = ko.virtualElements.nextSibling(currentChild);\n                applyBindingsToNodeAndDescendantsInternal(bindingContext, currentChild);\n            }\n        }\n        ko.bindingEvent.notify(elementOrVirtualElement, ko.bindingEvent.childrenComplete);\n    }\n\n    function applyBindingsToNodeAndDescendantsInternal(bindingContext, nodeVerified) {\n        var bindingContextForDescendants = bindingContext;\n\n        var isElement = (nodeVerified.nodeType === 1);\n        if (isElement) // Workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(nodeVerified);\n\n        // Perf optimisation: Apply bindings only if...\n        // (1) We need to store the binding info for the node (all element nodes)\n        // (2) It might have bindings (e.g., it has a data-bind attribute, or it's a marker for a containerless template)\n        var shouldApplyBindings = isElement || ko.bindingProvider['instance']['nodeHasBindings'](nodeVerified);\n        if (shouldApplyBindings)\n            bindingContextForDescendants = applyBindingsToNodeInternal(nodeVerified, null, bindingContext)['bindingContextForDescendants'];\n\n        if (bindingContextForDescendants && !bindingDoesNotRecurseIntoElementTypes[ko.utils.tagNameLower(nodeVerified)]) {\n            applyBindingsToDescendantsInternal(bindingContextForDescendants, nodeVerified);\n        }\n    }\n\n    function topologicalSortBindings(bindings) {\n        // Depth-first sort\n        var result = [],                // The list of key/handler pairs that we will return\n            bindingsConsidered = {},    // A temporary record of which bindings are already in 'result'\n            cyclicDependencyStack = []; // Keeps track of a depth-search so that, if there's a cycle, we know which bindings caused it\n        ko.utils.objectForEach(bindings, function pushBinding(bindingKey) {\n            if (!bindingsConsidered[bindingKey]) {\n                var binding = ko['getBindingHandler'](bindingKey);\n                if (binding) {\n                    // First add dependencies (if any) of the current binding\n                    if (binding['after']) {\n                        cyclicDependencyStack.push(bindingKey);\n                        ko.utils.arrayForEach(binding['after'], function(bindingDependencyKey) {\n                            if (bindings[bindingDependencyKey]) {\n                                if (ko.utils.arrayIndexOf(cyclicDependencyStack, bindingDependencyKey) !== -1) {\n                                    throw Error(\"Cannot combine the following bindings, because they have a cyclic dependency: \" + cyclicDependencyStack.join(\", \"));\n                                } else {\n                                    pushBinding(bindingDependencyKey);\n                                }\n                            }\n                        });\n                        cyclicDependencyStack.length--;\n                    }\n                    // Next add the current binding\n                    result.push({ key: bindingKey, handler: binding });\n                }\n                bindingsConsidered[bindingKey] = true;\n            }\n        });\n\n        return result;\n    }\n\n    function applyBindingsToNodeInternal(node, sourceBindings, bindingContext) {\n        var bindingInfo = ko.utils.domData.getOrSet(node, boundElementDomDataKey, {});\n\n        // Prevent multiple applyBindings calls for the same node, except when a binding value is specified\n        var alreadyBound = bindingInfo.alreadyBound;\n        if (!sourceBindings) {\n            if (alreadyBound) {\n                throw Error(\"You cannot apply bindings multiple times to the same element.\");\n            }\n            bindingInfo.alreadyBound = true;\n        }\n        if (!alreadyBound) {\n            bindingInfo.context = bindingContext;\n        }\n        if (!bindingInfo.notifiedEvents) {\n            bindingInfo.notifiedEvents = {};\n        }\n\n        // Use bindings if given, otherwise fall back on asking the bindings provider to give us some bindings\n        var bindings;\n        if (sourceBindings && typeof sourceBindings !== 'function') {\n            bindings = sourceBindings;\n        } else {\n            var provider = ko.bindingProvider['instance'],\n                getBindings = provider['getBindingAccessors'] || getBindingsAndMakeAccessors;\n\n            // Get the binding from the provider within a computed observable so that we can update the bindings whenever\n            // the binding context is updated or if the binding provider accesses observables.\n            var bindingsUpdater = ko.dependentObservable(\n                function() {\n                    bindings = sourceBindings ? sourceBindings(bindingContext, node) : getBindings.call(provider, node, bindingContext);\n                    // Register a dependency on the binding context to support observable view models.\n                    if (bindings) {\n                        if (bindingContext[contextSubscribable]) {\n                            bindingContext[contextSubscribable]();\n                        }\n                        if (bindingContext[contextDataDependency]) {\n                            bindingContext[contextDataDependency]();\n                        }\n                    }\n                    return bindings;\n                },\n                null, { disposeWhenNodeIsRemoved: node }\n            );\n\n            if (!bindings || !bindingsUpdater.isActive())\n                bindingsUpdater = null;\n        }\n\n        var contextToExtend = bindingContext;\n        var bindingHandlerThatControlsDescendantBindings;\n        if (bindings) {\n            // Return the value accessor for a given binding. When bindings are static (won't be updated because of a binding\n            // context update), just return the value accessor from the binding. Otherwise, return a function that always gets\n            // the latest binding value and registers a dependency on the binding updater.\n            var getValueAccessor = bindingsUpdater\n                ? function(bindingKey) {\n                    return function() {\n                        return evaluateValueAccessor(bindingsUpdater()[bindingKey]);\n                    };\n                } : function(bindingKey) {\n                    return bindings[bindingKey];\n                };\n\n            // Use of allBindings as a function is maintained for backwards compatibility, but its use is deprecated\n            function allBindings() {\n                return ko.utils.objectMap(bindingsUpdater ? bindingsUpdater() : bindings, evaluateValueAccessor);\n            }\n            // The following is the 3.x allBindings API\n            allBindings['get'] = function(key) {\n                return bindings[key] && evaluateValueAccessor(getValueAccessor(key));\n            };\n            allBindings['has'] = function(key) {\n                return key in bindings;\n            };\n\n            if (ko.bindingEvent.childrenComplete in bindings) {\n                ko.bindingEvent.subscribe(node, ko.bindingEvent.childrenComplete, function () {\n                    var callback = evaluateValueAccessor(bindings[ko.bindingEvent.childrenComplete]);\n                    if (callback) {\n                        var nodes = ko.virtualElements.childNodes(node);\n                        if (nodes.length) {\n                            callback(nodes, ko.dataFor(nodes[0]));\n                        }\n                    }\n                });\n            }\n\n            if (ko.bindingEvent.descendantsComplete in bindings) {\n                contextToExtend = ko.bindingEvent.startPossiblyAsyncContentBinding(node, bindingContext);\n                ko.bindingEvent.subscribe(node, ko.bindingEvent.descendantsComplete, function () {\n                    var callback = evaluateValueAccessor(bindings[ko.bindingEvent.descendantsComplete]);\n                    if (callback && ko.virtualElements.firstChild(node)) {\n                        callback(node);\n                    }\n                });\n            }\n\n            // First put the bindings into the right order\n            var orderedBindings = topologicalSortBindings(bindings);\n\n            // Go through the sorted bindings, calling init and update for each\n            ko.utils.arrayForEach(orderedBindings, function(bindingKeyAndHandler) {\n                // Note that topologicalSortBindings has already filtered out any nonexistent binding handlers,\n                // so bindingKeyAndHandler.handler will always be nonnull.\n                var handlerInitFn = bindingKeyAndHandler.handler[\"init\"],\n                    handlerUpdateFn = bindingKeyAndHandler.handler[\"update\"],\n                    bindingKey = bindingKeyAndHandler.key;\n\n                if (node.nodeType === 8) {\n                    validateThatBindingIsAllowedForVirtualElements(bindingKey);\n                }\n\n                try {\n                    // Run init, ignoring any dependencies\n                    if (typeof handlerInitFn == \"function\") {\n                        ko.dependencyDetection.ignore(function() {\n                            var initResult = handlerInitFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend['$data'], contextToExtend);\n\n                            // If this binding handler claims to control descendant bindings, make a note of this\n                            if (initResult && initResult['controlsDescendantBindings']) {\n                                if (bindingHandlerThatControlsDescendantBindings !== undefined)\n                                    throw new Error(\"Multiple bindings (\" + bindingHandlerThatControlsDescendantBindings + \" and \" + bindingKey + \") are trying to control descendant bindings of the same element. You cannot use these bindings together on the same element.\");\n                                bindingHandlerThatControlsDescendantBindings = bindingKey;\n                            }\n                        });\n                    }\n\n                    // Run update in its own computed wrapper\n                    if (typeof handlerUpdateFn == \"function\") {\n                        ko.dependentObservable(\n                            function() {\n                                handlerUpdateFn(node, getValueAccessor(bindingKey), allBindings, contextToExtend['$data'], contextToExtend);\n                            },\n                            null,\n                            { disposeWhenNodeIsRemoved: node }\n                        );\n                    }\n                } catch (ex) {\n                    ex.message = \"Unable to process binding \\\"\" + bindingKey + \": \" + bindings[bindingKey] + \"\\\"\\nMessage: \" + ex.message;\n                    throw ex;\n                }\n            });\n        }\n\n        var shouldBindDescendants = bindingHandlerThatControlsDescendantBindings === undefined;\n        return {\n            'shouldBindDescendants': shouldBindDescendants,\n            'bindingContextForDescendants': shouldBindDescendants && contextToExtend\n        };\n    };\n\n    ko.storedBindingContextForNode = function (node) {\n        var bindingInfo = ko.utils.domData.get(node, boundElementDomDataKey);\n        return bindingInfo && bindingInfo.context;\n    }\n\n    function getBindingContext(viewModelOrBindingContext, extendContextCallback) {\n        return viewModelOrBindingContext && (viewModelOrBindingContext instanceof ko.bindingContext)\n            ? viewModelOrBindingContext\n            : new ko.bindingContext(viewModelOrBindingContext, undefined, undefined, extendContextCallback);\n    }\n\n    ko.applyBindingAccessorsToNode = function (node, bindings, viewModelOrBindingContext) {\n        if (node.nodeType === 1) // If it's an element, workaround IE <= 8 HTML parsing weirdness\n            ko.virtualElements.normaliseVirtualElementDomStructure(node);\n        return applyBindingsToNodeInternal(node, bindings, getBindingContext(viewModelOrBindingContext));\n    };\n\n    ko.applyBindingsToNode = function (node, bindings, viewModelOrBindingContext) {\n        var context = getBindingContext(viewModelOrBindingContext);\n        return ko.applyBindingAccessorsToNode(node, makeBindingAccessors(bindings, context, node), context);\n    };\n\n    ko.applyBindingsToDescendants = function(viewModelOrBindingContext, rootNode) {\n        if (rootNode.nodeType === 1 || rootNode.nodeType === 8)\n            applyBindingsToDescendantsInternal(getBindingContext(viewModelOrBindingContext), rootNode);\n    };\n\n    ko.applyBindings = function (viewModelOrBindingContext, rootNode, extendContextCallback) {\n        // If jQuery is loaded after Knockout, we won't initially have access to it. So save it here.\n        if (!jQueryInstance && window['jQuery']) {\n            jQueryInstance = window['jQuery'];\n        }\n\n        if (arguments.length < 2) {\n            rootNode = document.body;\n            if (!rootNode) {\n                throw Error(\"ko.applyBindings: could not find document.body; has the document been loaded?\");\n            }\n        } else if (!rootNode || (rootNode.nodeType !== 1 && rootNode.nodeType !== 8)) {\n            throw Error(\"ko.applyBindings: first parameter should be your view model; second parameter should be a DOM node\");\n        }\n\n        applyBindingsToNodeAndDescendantsInternal(getBindingContext(viewModelOrBindingContext, extendContextCallback), rootNode);\n    };\n\n    // Retrieving binding context from arbitrary nodes\n    ko.contextFor = function(node) {\n        // We can only do something meaningful for elements and comment nodes (in particular, not text nodes, as IE can't store domdata for them)\n        if (node && (node.nodeType === 1 || node.nodeType === 8)) {\n            return ko.storedBindingContextForNode(node);\n        }\n        return undefined;\n    };\n    ko.dataFor = function(node) {\n        var context = ko.contextFor(node);\n        return context ? context['$data'] : undefined;\n    };\n\n    ko.exportSymbol('bindingHandlers', ko.bindingHandlers);\n    ko.exportSymbol('bindingEvent', ko.bindingEvent);\n    ko.exportSymbol('bindingEvent.subscribe', ko.bindingEvent.subscribe);\n    ko.exportSymbol('bindingEvent.startPossiblyAsyncContentBinding', ko.bindingEvent.startPossiblyAsyncContentBinding);\n    ko.exportSymbol('applyBindings', ko.applyBindings);\n    ko.exportSymbol('applyBindingsToDescendants', ko.applyBindingsToDescendants);\n    ko.exportSymbol('applyBindingAccessorsToNode', ko.applyBindingAccessorsToNode);\n    ko.exportSymbol('applyBindingsToNode', ko.applyBindingsToNode);\n    ko.exportSymbol('contextFor', ko.contextFor);\n    ko.exportSymbol('dataFor', ko.dataFor);\n})();\n(function(undefined) {\n    var loadingSubscribablesCache = {}, // Tracks component loads that are currently in flight\n        loadedDefinitionsCache = {};    // Tracks component loads that have already completed\n\n    ko.components = {\n        get: function(componentName, callback) {\n            var cachedDefinition = getObjectOwnProperty(loadedDefinitionsCache, componentName);\n            if (cachedDefinition) {\n                // It's already loaded and cached. Reuse the same definition object.\n                // Note that for API consistency, even cache hits complete asynchronously by default.\n                // You can bypass this by putting synchronous:true on your component config.\n                if (cachedDefinition.isSynchronousComponent) {\n                    ko.dependencyDetection.ignore(function() { // See comment in loaderRegistryBehaviors.js for reasoning\n                        callback(cachedDefinition.definition);\n                    });\n                } else {\n                    ko.tasks.schedule(function() { callback(cachedDefinition.definition); });\n                }\n            } else {\n                // Join the loading process that is already underway, or start a new one.\n                loadComponentAndNotify(componentName, callback);\n            }\n        },\n\n        clearCachedDefinition: function(componentName) {\n            delete loadedDefinitionsCache[componentName];\n        },\n\n        _getFirstResultFromLoaders: getFirstResultFromLoaders\n    };\n\n    function getObjectOwnProperty(obj, propName) {\n        return Object.prototype.hasOwnProperty.call(obj, propName) ? obj[propName] : undefined;\n    }\n\n    function loadComponentAndNotify(componentName, callback) {\n        var subscribable = getObjectOwnProperty(loadingSubscribablesCache, componentName),\n            completedAsync;\n        if (!subscribable) {\n            // It's not started loading yet. Start loading, and when it's done, move it to loadedDefinitionsCache.\n            subscribable = loadingSubscribablesCache[componentName] = new ko.subscribable();\n            subscribable.subscribe(callback);\n\n            beginLoadingComponent(componentName, function(definition, config) {\n                var isSynchronousComponent = !!(config && config['synchronous']);\n                loadedDefinitionsCache[componentName] = { definition: definition, isSynchronousComponent: isSynchronousComponent };\n                delete loadingSubscribablesCache[componentName];\n\n                // For API consistency, all loads complete asynchronously. However we want to avoid\n                // adding an extra task schedule if it's unnecessary (i.e., the completion is already\n                // async).\n                //\n                // You can bypass the 'always asynchronous' feature by putting the synchronous:true\n                // flag on your component configuration when you register it.\n                if (completedAsync || isSynchronousComponent) {\n                    // Note that notifySubscribers ignores any dependencies read within the callback.\n                    // See comment in loaderRegistryBehaviors.js for reasoning\n                    subscribable['notifySubscribers'](definition);\n                } else {\n                    ko.tasks.schedule(function() {\n                        subscribable['notifySubscribers'](definition);\n                    });\n                }\n            });\n            completedAsync = true;\n        } else {\n            subscribable.subscribe(callback);\n        }\n    }\n\n    function beginLoadingComponent(componentName, callback) {\n        getFirstResultFromLoaders('getConfig', [componentName], function(config) {\n            if (config) {\n                // We have a config, so now load its definition\n                getFirstResultFromLoaders('loadComponent', [componentName, config], function(definition) {\n                    callback(definition, config);\n                });\n            } else {\n                // The component has no config - it's unknown to all the loaders.\n                // Note that this is not an error (e.g., a module loading error) - that would abort the\n                // process and this callback would not run. For this callback to run, all loaders must\n                // have confirmed they don't know about this component.\n                callback(null, null);\n            }\n        });\n    }\n\n    function getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders) {\n        // On the first call in the stack, start with the full set of loaders\n        if (!candidateLoaders) {\n            candidateLoaders = ko.components['loaders'].slice(0); // Use a copy, because we'll be mutating this array\n        }\n\n        // Try the next candidate\n        var currentCandidateLoader = candidateLoaders.shift();\n        if (currentCandidateLoader) {\n            var methodInstance = currentCandidateLoader[methodName];\n            if (methodInstance) {\n                var wasAborted = false,\n                    synchronousReturnValue = methodInstance.apply(currentCandidateLoader, argsExceptCallback.concat(function(result) {\n                        if (wasAborted) {\n                            callback(null);\n                        } else if (result !== null) {\n                            // This candidate returned a value. Use it.\n                            callback(result);\n                        } else {\n                            // Try the next candidate\n                            getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n                        }\n                    }));\n\n                // Currently, loaders may not return anything synchronously. This leaves open the possibility\n                // that we'll extend the API to support synchronous return values in the future. It won't be\n                // a breaking change, because currently no loader is allowed to return anything except undefined.\n                if (synchronousReturnValue !== undefined) {\n                    wasAborted = true;\n\n                    // Method to suppress exceptions will remain undocumented. This is only to keep\n                    // KO's specs running tidily, since we can observe the loading got aborted without\n                    // having exceptions cluttering up the console too.\n                    if (!currentCandidateLoader['suppressLoaderExceptions']) {\n                        throw new Error('Component loaders must supply values by invoking the callback, not by returning values synchronously.');\n                    }\n                }\n            } else {\n                // This candidate doesn't have the relevant handler. Synchronously move on to the next one.\n                getFirstResultFromLoaders(methodName, argsExceptCallback, callback, candidateLoaders);\n            }\n        } else {\n            // No candidates returned a value\n            callback(null);\n        }\n    }\n\n    // Reference the loaders via string name so it's possible for developers\n    // to replace the whole array by assigning to ko.components.loaders\n    ko.components['loaders'] = [];\n\n    ko.exportSymbol('components', ko.components);\n    ko.exportSymbol('components.get', ko.components.get);\n    ko.exportSymbol('components.clearCachedDefinition', ko.components.clearCachedDefinition);\n})();\n(function(undefined) {\n\n    // The default loader is responsible for two things:\n    // 1. Maintaining the default in-memory registry of component configuration objects\n    //    (i.e., the thing you're writing to when you call ko.components.register(someName, ...))\n    // 2. Answering requests for components by fetching configuration objects\n    //    from that default in-memory registry and resolving them into standard\n    //    component definition objects (of the form { createViewModel: ..., template: ... })\n    // Custom loaders may override either of these facilities, i.e.,\n    // 1. To supply configuration objects from some other source (e.g., conventions)\n    // 2. Or, to resolve configuration objects by loading viewmodels/templates via arbitrary logic.\n\n    var defaultConfigRegistry = {};\n\n    ko.components.register = function(componentName, config) {\n        if (!config) {\n            throw new Error('Invalid configuration for ' + componentName);\n        }\n\n        if (ko.components.isRegistered(componentName)) {\n            throw new Error('Component ' + componentName + ' is already registered');\n        }\n\n        defaultConfigRegistry[componentName] = config;\n    };\n\n    ko.components.isRegistered = function(componentName) {\n        return Object.prototype.hasOwnProperty.call(defaultConfigRegistry, componentName);\n    };\n\n    ko.components.unregister = function(componentName) {\n        delete defaultConfigRegistry[componentName];\n        ko.components.clearCachedDefinition(componentName);\n    };\n\n    ko.components.defaultLoader = {\n        'getConfig': function(componentName, callback) {\n            var result = ko.components.isRegistered(componentName)\n                ? defaultConfigRegistry[componentName]\n                : null;\n            callback(result);\n        },\n\n        'loadComponent': function(componentName, config, callback) {\n            var errorCallback = makeErrorCallback(componentName);\n            possiblyGetConfigFromAmd(errorCallback, config, function(loadedConfig) {\n                resolveConfig(componentName, errorCallback, loadedConfig, callback);\n            });\n        },\n\n        'loadTemplate': function(componentName, templateConfig, callback) {\n            resolveTemplate(makeErrorCallback(componentName), templateConfig, callback);\n        },\n\n        'loadViewModel': function(componentName, viewModelConfig, callback) {\n            resolveViewModel(makeErrorCallback(componentName), viewModelConfig, callback);\n        }\n    };\n\n    var createViewModelKey = 'createViewModel';\n\n    // Takes a config object of the form { template: ..., viewModel: ... }, and asynchronously convert it\n    // into the standard component definition format:\n    //    { template: <ArrayOfDomNodes>, createViewModel: function(params, componentInfo) { ... } }.\n    // Since both template and viewModel may need to be resolved asynchronously, both tasks are performed\n    // in parallel, and the results joined when both are ready. We don't depend on any promises infrastructure,\n    // so this is implemented manually below.\n    function resolveConfig(componentName, errorCallback, config, callback) {\n        var result = {},\n            makeCallBackWhenZero = 2,\n            tryIssueCallback = function() {\n                if (--makeCallBackWhenZero === 0) {\n                    callback(result);\n                }\n            },\n            templateConfig = config['template'],\n            viewModelConfig = config['viewModel'];\n\n        if (templateConfig) {\n            possiblyGetConfigFromAmd(errorCallback, templateConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadTemplate', [componentName, loadedConfig], function(resolvedTemplate) {\n                    result['template'] = resolvedTemplate;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n\n        if (viewModelConfig) {\n            possiblyGetConfigFromAmd(errorCallback, viewModelConfig, function(loadedConfig) {\n                ko.components._getFirstResultFromLoaders('loadViewModel', [componentName, loadedConfig], function(resolvedViewModel) {\n                    result[createViewModelKey] = resolvedViewModel;\n                    tryIssueCallback();\n                });\n            });\n        } else {\n            tryIssueCallback();\n        }\n    }\n\n    function resolveTemplate(errorCallback, templateConfig, callback) {\n        if (typeof templateConfig === 'string') {\n            // Markup - parse it\n            callback(ko.utils.parseHtmlFragment(templateConfig));\n        } else if (templateConfig instanceof Array) {\n            // Assume already an array of DOM nodes - pass through unchanged\n            callback(templateConfig);\n        } else if (isDocumentFragment(templateConfig)) {\n            // Document fragment - use its child nodes\n            callback(ko.utils.makeArray(templateConfig.childNodes));\n        } else if (templateConfig['element']) {\n            var element = templateConfig['element'];\n            if (isDomElement(element)) {\n                // Element instance - copy its child nodes\n                callback(cloneNodesFromTemplateSourceElement(element));\n            } else if (typeof element === 'string') {\n                // Element ID - find it, then copy its child nodes\n                var elemInstance = document.getElementById(element);\n                if (elemInstance) {\n                    callback(cloneNodesFromTemplateSourceElement(elemInstance));\n                } else {\n                    errorCallback('Cannot find element with ID ' + element);\n                }\n            } else {\n                errorCallback('Unknown element type: ' + element);\n            }\n        } else {\n            errorCallback('Unknown template value: ' + templateConfig);\n        }\n    }\n\n    function resolveViewModel(errorCallback, viewModelConfig, callback) {\n        if (typeof viewModelConfig === 'function') {\n            // Constructor - convert to standard factory function format\n            // By design, this does *not* supply componentInfo to the constructor, as the intent is that\n            // componentInfo contains non-viewmodel data (e.g., the component's element) that should only\n            // be used in factory functions, not viewmodel constructors.\n            callback(function (params /*, componentInfo */) {\n                return new viewModelConfig(params);\n            });\n        } else if (typeof viewModelConfig[createViewModelKey] === 'function') {\n            // Already a factory function - use it as-is\n            callback(viewModelConfig[createViewModelKey]);\n        } else if ('instance' in viewModelConfig) {\n            // Fixed object instance - promote to createViewModel format for API consistency\n            var fixedInstance = viewModelConfig['instance'];\n            callback(function (params, componentInfo) {\n                return fixedInstance;\n            });\n        } else if ('viewModel' in viewModelConfig) {\n            // Resolved AMD module whose value is of the form { viewModel: ... }\n            resolveViewModel(errorCallback, viewModelConfig['viewModel'], callback);\n        } else {\n            errorCallback('Unknown viewModel value: ' + viewModelConfig);\n        }\n    }\n\n    function cloneNodesFromTemplateSourceElement(elemInstance) {\n        switch (ko.utils.tagNameLower(elemInstance)) {\n            case 'script':\n                return ko.utils.parseHtmlFragment(elemInstance.text);\n            case 'textarea':\n                return ko.utils.parseHtmlFragment(elemInstance.value);\n            case 'template':\n                // For browsers with proper <template> element support (i.e., where the .content property\n                // gives a document fragment), use that document fragment.\n                if (isDocumentFragment(elemInstance.content)) {\n                    return ko.utils.cloneNodes(elemInstance.content.childNodes);\n                }\n        }\n\n        // Regular elements such as <div>, and <template> elements on old browsers that don't really\n        // understand <template> and just treat it as a regular container\n        return ko.utils.cloneNodes(elemInstance.childNodes);\n    }\n\n    function isDomElement(obj) {\n        if (window['HTMLElement']) {\n            return obj instanceof HTMLElement;\n        } else {\n            return obj && obj.tagName && obj.nodeType === 1;\n        }\n    }\n\n    function isDocumentFragment(obj) {\n        if (window['DocumentFragment']) {\n            return obj instanceof DocumentFragment;\n        } else {\n            return obj && obj.nodeType === 11;\n        }\n    }\n\n    function possiblyGetConfigFromAmd(errorCallback, config, callback) {\n        if (typeof config['require'] === 'string') {\n            // The config is the value of an AMD module\n            if (amdRequire || window['require']) {\n                (amdRequire || window['require'])([config['require']], function (module) {\n                    if (module && typeof module === 'object' && module.__esModule && module.default) {\n                        module = module.default;\n                    }\n                    callback(module);\n                });\n            } else {\n                errorCallback('Uses require, but no AMD loader is present');\n            }\n        } else {\n            callback(config);\n        }\n    }\n\n    function makeErrorCallback(componentName) {\n        return function (message) {\n            throw new Error('Component \\'' + componentName + '\\': ' + message);\n        };\n    }\n\n    ko.exportSymbol('components.register', ko.components.register);\n    ko.exportSymbol('components.isRegistered', ko.components.isRegistered);\n    ko.exportSymbol('components.unregister', ko.components.unregister);\n\n    // Expose the default loader so that developers can directly ask it for configuration\n    // or to resolve configuration\n    ko.exportSymbol('components.defaultLoader', ko.components.defaultLoader);\n\n    // By default, the default loader is the only registered component loader\n    ko.components['loaders'].push(ko.components.defaultLoader);\n\n    // Privately expose the underlying config registry for use in old-IE shim\n    ko.components._allRegisteredComponents = defaultConfigRegistry;\n})();\n(function (undefined) {\n    // Overridable API for determining which component name applies to a given node. By overriding this,\n    // you can for example map specific tagNames to components that are not preregistered.\n    ko.components['getComponentNameForNode'] = function(node) {\n        var tagNameLower = ko.utils.tagNameLower(node);\n        if (ko.components.isRegistered(tagNameLower)) {\n            // Try to determine that this node can be considered a *custom* element; see https://github.com/knockout/knockout/issues/1603\n            if (tagNameLower.indexOf('-') != -1 || ('' + node) == \"[object HTMLUnknownElement]\" || (ko.utils.ieVersion <= 8 && node.tagName === tagNameLower)) {\n                return tagNameLower;\n            }\n        }\n    };\n\n    ko.components.addBindingsForCustomElement = function(allBindings, node, bindingContext, valueAccessors) {\n        // Determine if it's really a custom element matching a component\n        if (node.nodeType === 1) {\n            var componentName = ko.components['getComponentNameForNode'](node);\n            if (componentName) {\n                // It does represent a component, so add a component binding for it\n                allBindings = allBindings || {};\n\n                if (allBindings['component']) {\n                    // Avoid silently overwriting some other 'component' binding that may already be on the element\n                    throw new Error('Cannot use the \"component\" binding on a custom element matching a component');\n                }\n\n                var componentBindingValue = { 'name': componentName, 'params': getComponentParamsFromCustomElement(node, bindingContext) };\n\n                allBindings['component'] = valueAccessors\n                    ? function() { return componentBindingValue; }\n                    : componentBindingValue;\n            }\n        }\n\n        return allBindings;\n    }\n\n    var nativeBindingProviderInstance = new ko.bindingProvider();\n\n    function getComponentParamsFromCustomElement(elem, bindingContext) {\n        var paramsAttribute = elem.getAttribute('params');\n\n        if (paramsAttribute) {\n            var params = nativeBindingProviderInstance['parseBindingsString'](paramsAttribute, bindingContext, elem, { 'valueAccessors': true, 'bindingParams': true }),\n                rawParamComputedValues = ko.utils.objectMap(params, function(paramValue, paramName) {\n                    return ko.computed(paramValue, null, { disposeWhenNodeIsRemoved: elem });\n                }),\n                result = ko.utils.objectMap(rawParamComputedValues, function(paramValueComputed, paramName) {\n                    var paramValue = paramValueComputed.peek();\n                    // Does the evaluation of the parameter value unwrap any observables?\n                    if (!paramValueComputed.isActive()) {\n                        // No it doesn't, so there's no need for any computed wrapper. Just pass through the supplied value directly.\n                        // Example: \"someVal: firstName, age: 123\" (whether or not firstName is an observable/computed)\n                        return paramValue;\n                    } else {\n                        // Yes it does. Supply a computed property that unwraps both the outer (binding expression)\n                        // level of observability, and any inner (resulting model value) level of observability.\n                        // This means the component doesn't have to worry about multiple unwrapping. If the value is a\n                        // writable observable, the computed will also be writable and pass the value on to the observable.\n                        return ko.computed({\n                            'read': function() {\n                                return ko.utils.unwrapObservable(paramValueComputed());\n                            },\n                            'write': ko.isWriteableObservable(paramValue) && function(value) {\n                                paramValueComputed()(value);\n                            },\n                            disposeWhenNodeIsRemoved: elem\n                        });\n                    }\n                });\n\n            // Give access to the raw computeds, as long as that wouldn't overwrite any custom param also called '$raw'\n            // This is in case the developer wants to react to outer (binding) observability separately from inner\n            // (model value) observability, or in case the model value observable has subobservables.\n            if (!Object.prototype.hasOwnProperty.call(result, '$raw')) {\n                result['$raw'] = rawParamComputedValues;\n            }\n\n            return result;\n        } else {\n            // For consistency, absence of a \"params\" attribute is treated the same as the presence of\n            // any empty one. Otherwise component viewmodels need special code to check whether or not\n            // 'params' or 'params.$raw' is null/undefined before reading subproperties, which is annoying.\n            return { '$raw': {} };\n        }\n    }\n\n    // --------------------------------------------------------------------------------\n    // Compatibility code for older (pre-HTML5) IE browsers\n\n    if (ko.utils.ieVersion < 9) {\n        // Whenever you preregister a component, enable it as a custom element in the current document\n        ko.components['register'] = (function(originalFunction) {\n            return function(componentName) {\n                document.createElement(componentName); // Allows IE<9 to parse markup containing the custom element\n                return originalFunction.apply(this, arguments);\n            }\n        })(ko.components['register']);\n\n        // Whenever you create a document fragment, enable all preregistered component names as custom elements\n        // This is needed to make innerShiv/jQuery HTML parsing correctly handle the custom elements\n        document.createDocumentFragment = (function(originalFunction) {\n            return function() {\n                var newDocFrag = originalFunction(),\n                    allComponents = ko.components._allRegisteredComponents;\n                for (var componentName in allComponents) {\n                    if (Object.prototype.hasOwnProperty.call(allComponents, componentName)) {\n                        newDocFrag.createElement(componentName);\n                    }\n                }\n                return newDocFrag;\n            };\n        })(document.createDocumentFragment);\n    }\n})();(function(undefined) {\n    var componentLoadingOperationUniqueId = 0;\n\n    ko.bindingHandlers['component'] = {\n        'init': function(element, valueAccessor, ignored1, ignored2, bindingContext) {\n            var currentViewModel,\n                currentLoadingOperationId,\n                afterRenderSub,\n                disposeAssociatedComponentViewModel = function () {\n                    var currentViewModelDispose = currentViewModel && currentViewModel['dispose'];\n                    if (typeof currentViewModelDispose === 'function') {\n                        currentViewModelDispose.call(currentViewModel);\n                    }\n                    if (afterRenderSub) {\n                        afterRenderSub.dispose();\n                    }\n                    afterRenderSub = null;\n                    currentViewModel = null;\n                    // Any in-flight loading operation is no longer relevant, so make sure we ignore its completion\n                    currentLoadingOperationId = null;\n                },\n                originalChildNodes = ko.utils.makeArray(ko.virtualElements.childNodes(element));\n\n            ko.virtualElements.emptyNode(element);\n            ko.utils.domNodeDisposal.addDisposeCallback(element, disposeAssociatedComponentViewModel);\n\n            ko.computed(function () {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    componentName, componentParams;\n\n                if (typeof value === 'string') {\n                    componentName = value;\n                } else {\n                    componentName = ko.utils.unwrapObservable(value['name']);\n                    componentParams = ko.utils.unwrapObservable(value['params']);\n                }\n\n                if (!componentName) {\n                    throw new Error('No component name specified');\n                }\n\n                var asyncContext = ko.bindingEvent.startPossiblyAsyncContentBinding(element, bindingContext);\n\n                var loadingOperationId = currentLoadingOperationId = ++componentLoadingOperationUniqueId;\n                ko.components.get(componentName, function(componentDefinition) {\n                    // If this is not the current load operation for this element, ignore it.\n                    if (currentLoadingOperationId !== loadingOperationId) {\n                        return;\n                    }\n\n                    // Clean up previous state\n                    disposeAssociatedComponentViewModel();\n\n                    // Instantiate and bind new component. Implicitly this cleans any old DOM nodes.\n                    if (!componentDefinition) {\n                        throw new Error('Unknown component \\'' + componentName + '\\'');\n                    }\n                    cloneTemplateIntoElement(componentName, componentDefinition, element);\n\n                    var componentInfo = {\n                        'element': element,\n                        'templateNodes': originalChildNodes\n                    };\n\n                    var componentViewModel = createViewModel(componentDefinition, componentParams, componentInfo),\n                        childBindingContext = asyncContext['createChildContext'](componentViewModel, {\n                            'extend': function(ctx) {\n                                ctx['$component'] = componentViewModel;\n                                ctx['$componentTemplateNodes'] = originalChildNodes;\n                            }\n                        });\n\n                    if (componentViewModel && componentViewModel['koDescendantsComplete']) {\n                        afterRenderSub = ko.bindingEvent.subscribe(element, ko.bindingEvent.descendantsComplete, componentViewModel['koDescendantsComplete'], componentViewModel);\n                    }\n\n                    currentViewModel = componentViewModel;\n                    ko.applyBindingsToDescendants(childBindingContext, element);\n                });\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n\n    ko.virtualElements.allowedBindings['component'] = true;\n\n    function cloneTemplateIntoElement(componentName, componentDefinition, element) {\n        var template = componentDefinition['template'];\n        if (!template) {\n            throw new Error('Component \\'' + componentName + '\\' has no template');\n        }\n\n        var clonedNodesArray = ko.utils.cloneNodes(template);\n        ko.virtualElements.setDomNodeChildren(element, clonedNodesArray);\n    }\n\n    function createViewModel(componentDefinition, componentParams, componentInfo) {\n        var componentViewModelFactory = componentDefinition['createViewModel'];\n        return componentViewModelFactory\n            ? componentViewModelFactory.call(componentDefinition, componentParams, componentInfo)\n            : componentParams; // Template-only component\n    }\n\n})();\nvar attrHtmlToJavaScriptMap = { 'class': 'className', 'for': 'htmlFor' };\nko.bindingHandlers['attr'] = {\n    'update': function(element, valueAccessor, allBindings) {\n        var value = ko.utils.unwrapObservable(valueAccessor()) || {};\n        ko.utils.objectForEach(value, function(attrName, attrValue) {\n            attrValue = ko.utils.unwrapObservable(attrValue);\n\n            // Find the namespace of this attribute, if any.\n            var prefixLen = attrName.indexOf(':');\n            var namespace = \"lookupNamespaceURI\" in element && prefixLen > 0 && element.lookupNamespaceURI(attrName.substr(0, prefixLen));\n\n            // To cover cases like \"attr: { checked:someProp }\", we want to remove the attribute entirely\n            // when someProp is a \"no value\"-like value (strictly null, false, or undefined)\n            // (because the absence of the \"checked\" attr is how to mark an element as not checked, etc.)\n            var toRemove = (attrValue === false) || (attrValue === null) || (attrValue === undefined);\n            if (toRemove) {\n                namespace ? element.removeAttributeNS(namespace, attrName) : element.removeAttribute(attrName);\n            } else {\n                attrValue = attrValue.toString();\n            }\n\n            // In IE <= 7 and IE8 Quirks Mode, you have to use the JavaScript property name instead of the\n            // HTML attribute name for certain attributes. IE8 Standards Mode supports the correct behavior,\n            // but instead of figuring out the mode, we'll just set the attribute through the JavaScript\n            // property for IE <= 8.\n            if (ko.utils.ieVersion <= 8 && attrName in attrHtmlToJavaScriptMap) {\n                attrName = attrHtmlToJavaScriptMap[attrName];\n                if (toRemove)\n                    element.removeAttribute(attrName);\n                else\n                    element[attrName] = attrValue;\n            } else if (!toRemove) {\n                namespace ? element.setAttributeNS(namespace, attrName, attrValue) : element.setAttribute(attrName, attrValue);\n            }\n\n            // Treat \"name\" specially - although you can think of it as an attribute, it also needs\n            // special handling on older versions of IE (https://github.com/SteveSanderson/knockout/pull/333)\n            // Deliberately being case-sensitive here because XHTML would regard \"Name\" as a different thing\n            // entirely, and there's no strong reason to allow for such casing in HTML.\n            if (attrName === \"name\") {\n                ko.utils.setElementName(element, toRemove ? \"\" : attrValue);\n            }\n        });\n    }\n};\n(function() {\n\nko.bindingHandlers['checked'] = {\n    'after': ['value', 'attr'],\n    'init': function (element, valueAccessor, allBindings) {\n        var checkedValue = ko.pureComputed(function() {\n            // Treat \"value\" like \"checkedValue\" when it is included with \"checked\" binding\n            if (allBindings['has']('checkedValue')) {\n                return ko.utils.unwrapObservable(allBindings.get('checkedValue'));\n            } else if (useElementValue) {\n                if (allBindings['has']('value')) {\n                    return ko.utils.unwrapObservable(allBindings.get('value'));\n                } else {\n                    return element.value;\n                }\n            }\n        });\n\n        function updateModel() {\n            // This updates the model value from the view value.\n            // It runs in response to DOM events (click) and changes in checkedValue.\n            var isChecked = element.checked,\n                elemValue = checkedValue();\n\n            // When we're first setting up this computed, don't change any model state.\n            if (ko.computedContext.isInitial()) {\n                return;\n            }\n\n            // We can ignore unchecked radio buttons, because some other radio\n            // button will be checked, and that one can take care of updating state.\n            // Also ignore value changes to an already unchecked checkbox.\n            if (!isChecked && (isRadio || ko.computedContext.getDependenciesCount())) {\n                return;\n            }\n\n            var modelValue = ko.dependencyDetection.ignore(valueAccessor);\n            if (valueIsArray) {\n                var writableValue = rawValueIsNonArrayObservable ? modelValue.peek() : modelValue,\n                    saveOldValue = oldElemValue;\n                oldElemValue = elemValue;\n\n                if (saveOldValue !== elemValue) {\n                    // When we're responding to the checkedValue changing, and the element is\n                    // currently checked, replace the old elem value with the new elem value\n                    // in the model array.\n                    if (isChecked) {\n                        ko.utils.addOrRemoveItem(writableValue, elemValue, true);\n                        ko.utils.addOrRemoveItem(writableValue, saveOldValue, false);\n                    }\n                } else {\n                    // When we're responding to the user having checked/unchecked a checkbox,\n                    // add/remove the element value to the model array.\n                    ko.utils.addOrRemoveItem(writableValue, elemValue, isChecked);\n                }\n\n                if (rawValueIsNonArrayObservable && ko.isWriteableObservable(modelValue)) {\n                    modelValue(writableValue);\n                }\n            } else {\n                if (isCheckbox) {\n                    if (elemValue === undefined) {\n                        elemValue = isChecked;\n                    } else if (!isChecked) {\n                        elemValue = undefined;\n                    }\n                }\n                ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'checked', elemValue, true);\n            }\n        };\n\n        function updateView() {\n            // This updates the view value from the model value.\n            // It runs in response to changes in the bound (checked) value.\n            var modelValue = ko.utils.unwrapObservable(valueAccessor()),\n                elemValue = checkedValue();\n\n            if (valueIsArray) {\n                // When a checkbox is bound to an array, being checked represents its value being present in that array\n                element.checked = ko.utils.arrayIndexOf(modelValue, elemValue) >= 0;\n                oldElemValue = elemValue;\n            } else if (isCheckbox && elemValue === undefined) {\n                // When a checkbox is bound to any other value (not an array) and \"checkedValue\" is not defined,\n                // being checked represents the value being trueish\n                element.checked = !!modelValue;\n            } else {\n                // Otherwise, being checked means that the checkbox or radio button's value corresponds to the model value\n                element.checked = (checkedValue() === modelValue);\n            }\n        };\n\n        var isCheckbox = element.type == \"checkbox\",\n            isRadio = element.type == \"radio\";\n\n        // Only bind to check boxes and radio buttons\n        if (!isCheckbox && !isRadio) {\n            return;\n        }\n\n        var rawValue = valueAccessor(),\n            valueIsArray = isCheckbox && (ko.utils.unwrapObservable(rawValue) instanceof Array),\n            rawValueIsNonArrayObservable = !(valueIsArray && rawValue.push && rawValue.splice),\n            useElementValue = isRadio || valueIsArray,\n            oldElemValue = valueIsArray ? checkedValue() : undefined;\n\n        // IE 6 won't allow radio buttons to be selected unless they have a name\n        if (isRadio && !element.name)\n            ko.bindingHandlers['uniqueName']['init'](element, function() { return true });\n\n        // Set up two computeds to update the binding:\n\n        // The first responds to changes in the checkedValue value and to element clicks\n        ko.computed(updateModel, null, { disposeWhenNodeIsRemoved: element });\n        ko.utils.registerEventHandler(element, \"click\", updateModel);\n\n        // The second responds to changes in the model value (the one associated with the checked binding)\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n\n        rawValue = undefined;\n    }\n};\nko.expressionRewriting.twoWayBindings['checked'] = true;\n\nko.bindingHandlers['checkedValue'] = {\n    'update': function (element, valueAccessor) {\n        element.value = ko.utils.unwrapObservable(valueAccessor());\n    }\n};\n\n})();var classesWrittenByBindingKey = '__ko__cssValue';\nko.bindingHandlers['class'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.stringTrim(ko.utils.unwrapObservable(valueAccessor()));\n        ko.utils.toggleDomNodeCssClass(element, element[classesWrittenByBindingKey], false);\n        element[classesWrittenByBindingKey] = value;\n        ko.utils.toggleDomNodeCssClass(element, value, true);\n    }\n};\n\nko.bindingHandlers['css'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value !== null && typeof value == \"object\") {\n            ko.utils.objectForEach(value, function(className, shouldHaveClass) {\n                shouldHaveClass = ko.utils.unwrapObservable(shouldHaveClass);\n                ko.utils.toggleDomNodeCssClass(element, className, shouldHaveClass);\n            });\n        } else {\n            ko.bindingHandlers['class']['update'](element, valueAccessor);\n        }\n    }\n};\nko.bindingHandlers['enable'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        if (value && element.disabled)\n            element.removeAttribute(\"disabled\");\n        else if ((!value) && (!element.disabled))\n            element.disabled = true;\n    }\n};\n\nko.bindingHandlers['disable'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['enable']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// For certain common events (currently just 'click'), allow a simplified data-binding syntax\n// e.g. click:handler instead of the usual full-length event:{click:handler}\nfunction makeEventHandlerShortcut(eventName) {\n    ko.bindingHandlers[eventName] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var newValueAccessor = function () {\n                var result = {};\n                result[eventName] = valueAccessor();\n                return result;\n            };\n            return ko.bindingHandlers['event']['init'].call(this, element, newValueAccessor, allBindings, viewModel, bindingContext);\n        }\n    }\n}\n\nko.bindingHandlers['event'] = {\n    'init' : function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var eventsToHandle = valueAccessor() || {};\n        ko.utils.objectForEach(eventsToHandle, function(eventName) {\n            if (typeof eventName == \"string\") {\n                ko.utils.registerEventHandler(element, eventName, function (event) {\n                    var handlerReturnValue;\n                    var handlerFunction = valueAccessor()[eventName];\n                    if (!handlerFunction)\n                        return;\n\n                    try {\n                        // Take all the event args, and prefix with the viewmodel\n                        var argsForHandler = ko.utils.makeArray(arguments);\n                        viewModel = bindingContext['$data'];\n                        argsForHandler.unshift(viewModel);\n                        handlerReturnValue = handlerFunction.apply(viewModel, argsForHandler);\n                    } finally {\n                        if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                            if (event.preventDefault)\n                                event.preventDefault();\n                            else\n                                event.returnValue = false;\n                        }\n                    }\n\n                    var bubble = allBindings.get(eventName + 'Bubble') !== false;\n                    if (!bubble) {\n                        event.cancelBubble = true;\n                        if (event.stopPropagation)\n                            event.stopPropagation();\n                    }\n                });\n            }\n        });\n    }\n};\n// \"foreach: someExpression\" is equivalent to \"template: { foreach: someExpression }\"\n// \"foreach: { data: someExpression, afterAdd: myfn }\" is equivalent to \"template: { foreach: someExpression, afterAdd: myfn }\"\nko.bindingHandlers['foreach'] = {\n    makeTemplateValueAccessor: function(valueAccessor) {\n        return function() {\n            var modelValue = valueAccessor(),\n                unwrappedValue = ko.utils.peekObservable(modelValue);    // Unwrap without setting a dependency here\n\n            // If unwrappedValue is the array, pass in the wrapped value on its own\n            // The value will be unwrapped and tracked within the template binding\n            // (See https://github.com/SteveSanderson/knockout/issues/523)\n            if ((!unwrappedValue) || typeof unwrappedValue.length == \"number\")\n                return { 'foreach': modelValue, 'templateEngine': ko.nativeTemplateEngine.instance };\n\n            // If unwrappedValue.data is the array, preserve all relevant options and unwrap again value so we get updates\n            ko.utils.unwrapObservable(modelValue);\n            return {\n                'foreach': unwrappedValue['data'],\n                'as': unwrappedValue['as'],\n                'noChildContext': unwrappedValue['noChildContext'],\n                'includeDestroyed': unwrappedValue['includeDestroyed'],\n                'afterAdd': unwrappedValue['afterAdd'],\n                'beforeRemove': unwrappedValue['beforeRemove'],\n                'afterRender': unwrappedValue['afterRender'],\n                'beforeMove': unwrappedValue['beforeMove'],\n                'afterMove': unwrappedValue['afterMove'],\n                'templateEngine': ko.nativeTemplateEngine.instance\n            };\n        };\n    },\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['init'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor));\n    },\n    'update': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        return ko.bindingHandlers['template']['update'](element, ko.bindingHandlers['foreach'].makeTemplateValueAccessor(valueAccessor), allBindings, viewModel, bindingContext);\n    }\n};\nko.expressionRewriting.bindingRewriteValidators['foreach'] = false; // Can't rewrite control flow bindings\nko.virtualElements.allowedBindings['foreach'] = true;\nvar hasfocusUpdatingProperty = '__ko_hasfocusUpdating';\nvar hasfocusLastValue = '__ko_hasfocusLastValue';\nko.bindingHandlers['hasfocus'] = {\n    'init': function(element, valueAccessor, allBindings) {\n        var handleElementFocusChange = function(isFocused) {\n            // Where possible, ignore which event was raised and determine focus state using activeElement,\n            // as this avoids phantom focus/blur events raised when changing tabs in modern browsers.\n            // However, not all KO-targeted browsers (Firefox 2) support activeElement. For those browsers,\n            // prevent a loss of focus when changing tabs/windows by setting a flag that prevents hasfocus\n            // from calling 'blur()' on the element when it loses focus.\n            // Discussion at https://github.com/SteveSanderson/knockout/pull/352\n            element[hasfocusUpdatingProperty] = true;\n            var ownerDoc = element.ownerDocument;\n            if (\"activeElement\" in ownerDoc) {\n                var active;\n                try {\n                    active = ownerDoc.activeElement;\n                } catch(e) {\n                    // IE9 throws if you access activeElement during page load (see issue #703)\n                    active = ownerDoc.body;\n                }\n                isFocused = (active === element);\n            }\n            var modelValue = valueAccessor();\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'hasfocus', isFocused, true);\n\n            //cache the latest value, so we can avoid unnecessarily calling focus/blur in the update function\n            element[hasfocusLastValue] = isFocused;\n            element[hasfocusUpdatingProperty] = false;\n        };\n        var handleElementFocusIn = handleElementFocusChange.bind(null, true);\n        var handleElementFocusOut = handleElementFocusChange.bind(null, false);\n\n        ko.utils.registerEventHandler(element, \"focus\", handleElementFocusIn);\n        ko.utils.registerEventHandler(element, \"focusin\", handleElementFocusIn); // For IE\n        ko.utils.registerEventHandler(element, \"blur\",  handleElementFocusOut);\n        ko.utils.registerEventHandler(element, \"focusout\",  handleElementFocusOut); // For IE\n\n        // Assume element is not focused (prevents \"blur\" being called initially)\n        element[hasfocusLastValue] = false;\n    },\n    'update': function(element, valueAccessor) {\n        var value = !!ko.utils.unwrapObservable(valueAccessor());\n\n        if (!element[hasfocusUpdatingProperty] && element[hasfocusLastValue] !== value) {\n            value ? element.focus() : element.blur();\n\n            // In IE, the blur method doesn't always cause the element to lose focus (for example, if the window is not in focus).\n            // Setting focus to the body element does seem to be reliable in IE, but should only be used if we know that the current\n            // element was focused already.\n            if (!value && element[hasfocusLastValue]) {\n                element.ownerDocument.body.focus();\n            }\n\n            // For IE, which doesn't reliably fire \"focus\" or \"blur\" events synchronously\n            ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, value ? \"focusin\" : \"focusout\"]);\n        }\n    }\n};\nko.expressionRewriting.twoWayBindings['hasfocus'] = true;\n\nko.bindingHandlers['hasFocus'] = ko.bindingHandlers['hasfocus']; // Make \"hasFocus\" an alias\nko.expressionRewriting.twoWayBindings['hasFocus'] = 'hasfocus';\nko.bindingHandlers['html'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected HTML (as developers are unlikely to expect that, and it has security implications)\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        // setHtml will unwrap the value if needed\n        ko.utils.setHtml(element, valueAccessor());\n    }\n};\n(function () {\n\n// Makes a binding like with or if\nfunction makeWithIfBinding(bindingKey, isWith, isNot) {\n    ko.bindingHandlers[bindingKey] = {\n        'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var didDisplayOnLastUpdate, savedNodes, contextOptions = {}, completeOnRender, needAsyncContext, renderOnEveryChange;\n\n            if (isWith) {\n                var as = allBindings.get('as'), noChildContext = allBindings.get('noChildContext');\n                renderOnEveryChange = !(as && noChildContext);\n                contextOptions = { 'as': as, 'noChildContext': noChildContext, 'exportDependencies': renderOnEveryChange };\n            }\n\n            completeOnRender = allBindings.get(\"completeOn\") == \"render\";\n            needAsyncContext = completeOnRender || allBindings['has'](ko.bindingEvent.descendantsComplete);\n\n            ko.computed(function() {\n                var value = ko.utils.unwrapObservable(valueAccessor()),\n                    shouldDisplay = !isNot !== !value, // equivalent to isNot ? !value : !!value,\n                    isInitial = !savedNodes,\n                    childContext;\n\n                if (!renderOnEveryChange && shouldDisplay === didDisplayOnLastUpdate) {\n                    return;\n                }\n\n                if (needAsyncContext) {\n                    bindingContext = ko.bindingEvent.startPossiblyAsyncContentBinding(element, bindingContext);\n                }\n\n                if (shouldDisplay) {\n                    if (!isWith || renderOnEveryChange) {\n                        contextOptions['dataDependency'] = ko.computedContext.computed();\n                    }\n\n                    if (isWith) {\n                        childContext = bindingContext['createChildContext'](typeof value == \"function\" ? value : valueAccessor, contextOptions);\n                    } else if (ko.computedContext.getDependenciesCount()) {\n                        childContext = bindingContext['extend'](null, contextOptions);\n                    } else {\n                        childContext = bindingContext;\n                    }\n                }\n\n                // Save a copy of the inner nodes on the initial update, but only if we have dependencies.\n                if (isInitial && ko.computedContext.getDependenciesCount()) {\n                    savedNodes = ko.utils.cloneNodes(ko.virtualElements.childNodes(element), true /* shouldCleanNodes */);\n                }\n\n                if (shouldDisplay) {\n                    if (!isInitial) {\n                        ko.virtualElements.setDomNodeChildren(element, ko.utils.cloneNodes(savedNodes));\n                    }\n\n                    ko.applyBindingsToDescendants(childContext, element);\n                } else {\n                    ko.virtualElements.emptyNode(element);\n\n                    if (!completeOnRender) {\n                        ko.bindingEvent.notify(element, ko.bindingEvent.childrenComplete);\n                    }\n                }\n\n                didDisplayOnLastUpdate = shouldDisplay;\n\n            }, null, { disposeWhenNodeIsRemoved: element });\n\n            return { 'controlsDescendantBindings': true };\n        }\n    };\n    ko.expressionRewriting.bindingRewriteValidators[bindingKey] = false; // Can't rewrite control flow bindings\n    ko.virtualElements.allowedBindings[bindingKey] = true;\n}\n\n// Construct the actual binding handlers\nmakeWithIfBinding('if');\nmakeWithIfBinding('ifnot', false /* isWith */, true /* isNot */);\nmakeWithIfBinding('with', true /* isWith */);\n\n})();ko.bindingHandlers['let'] = {\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        // Make a modified binding context, with extra properties, and apply it to descendant elements\n        var innerContext = bindingContext['extend'](valueAccessor);\n        ko.applyBindingsToDescendants(innerContext, element);\n\n        return { 'controlsDescendantBindings': true };\n    }\n};\nko.virtualElements.allowedBindings['let'] = true;\nvar captionPlaceholder = {};\nko.bindingHandlers['options'] = {\n    'init': function(element) {\n        if (ko.utils.tagNameLower(element) !== \"select\")\n            throw new Error(\"options binding applies only to SELECT elements\");\n\n        // Remove all existing <option>s.\n        while (element.length > 0) {\n            element.remove(0);\n        }\n\n        // Ensures that the binding processor doesn't try to bind the options\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor, allBindings) {\n        function selectedOptions() {\n            return ko.utils.arrayFilter(element.options, function (node) { return node.selected; });\n        }\n\n        var selectWasPreviouslyEmpty = element.length == 0,\n            multiple = element.multiple,\n            previousScrollTop = (!selectWasPreviouslyEmpty && multiple) ? element.scrollTop : null,\n            unwrappedArray = ko.utils.unwrapObservable(valueAccessor()),\n            valueAllowUnset = allBindings.get('valueAllowUnset') && allBindings['has']('value'),\n            includeDestroyed = allBindings.get('optionsIncludeDestroyed'),\n            arrayToDomNodeChildrenOptions = {},\n            captionValue,\n            filteredArray,\n            previousSelectedValues = [];\n\n        if (!valueAllowUnset) {\n            if (multiple) {\n                previousSelectedValues = ko.utils.arrayMap(selectedOptions(), ko.selectExtensions.readValue);\n            } else if (element.selectedIndex >= 0) {\n                previousSelectedValues.push(ko.selectExtensions.readValue(element.options[element.selectedIndex]));\n            }\n        }\n\n        if (unwrappedArray) {\n            if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                unwrappedArray = [unwrappedArray];\n\n            // Filter out any entries marked as destroyed\n            filteredArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                return includeDestroyed || item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n            });\n\n            // If caption is included, add it to the array\n            if (allBindings['has']('optionsCaption')) {\n                captionValue = ko.utils.unwrapObservable(allBindings.get('optionsCaption'));\n                // If caption value is null or undefined, don't show a caption\n                if (captionValue !== null && captionValue !== undefined) {\n                    filteredArray.unshift(captionPlaceholder);\n                }\n            }\n        } else {\n            // If a falsy value is provided (e.g. null), we'll simply empty the select element\n        }\n\n        function applyToObject(object, predicate, defaultValue) {\n            var predicateType = typeof predicate;\n            if (predicateType == \"function\")    // Given a function; run it against the data value\n                return predicate(object);\n            else if (predicateType == \"string\") // Given a string; treat it as a property name on the data value\n                return object[predicate];\n            else                                // Given no optionsText arg; use the data value itself\n                return defaultValue;\n        }\n\n        // The following functions can run at two different times:\n        // The first is when the whole array is being updated directly from this binding handler.\n        // The second is when an observable value for a specific array entry is updated.\n        // oldOptions will be empty in the first case, but will be filled with the previously generated option in the second.\n        var itemUpdate = false;\n        function optionForArrayItem(arrayEntry, index, oldOptions) {\n            if (oldOptions.length) {\n                previousSelectedValues = !valueAllowUnset && oldOptions[0].selected ? [ ko.selectExtensions.readValue(oldOptions[0]) ] : [];\n                itemUpdate = true;\n            }\n            var option = element.ownerDocument.createElement(\"option\");\n            if (arrayEntry === captionPlaceholder) {\n                ko.utils.setTextContent(option, allBindings.get('optionsCaption'));\n                ko.selectExtensions.writeValue(option, undefined);\n            } else {\n                // Apply a value to the option element\n                var optionValue = applyToObject(arrayEntry, allBindings.get('optionsValue'), arrayEntry);\n                ko.selectExtensions.writeValue(option, ko.utils.unwrapObservable(optionValue));\n\n                // Apply some text to the option element\n                var optionText = applyToObject(arrayEntry, allBindings.get('optionsText'), optionValue);\n                ko.utils.setTextContent(option, optionText);\n            }\n            return [option];\n        }\n\n        // By using a beforeRemove callback, we delay the removal until after new items are added. This fixes a selection\n        // problem in IE<=8 and Firefox. See https://github.com/knockout/knockout/issues/1208\n        arrayToDomNodeChildrenOptions['beforeRemove'] =\n            function (option) {\n                element.removeChild(option);\n            };\n\n        function setSelectionCallback(arrayEntry, newOptions) {\n            if (itemUpdate && valueAllowUnset) {\n                // The model value is authoritative, so make sure its value is the one selected\n                ko.bindingEvent.notify(element, ko.bindingEvent.childrenComplete);\n            } else if (previousSelectedValues.length) {\n                // IE6 doesn't like us to assign selection to OPTION nodes before they're added to the document.\n                // That's why we first added them without selection. Now it's time to set the selection.\n                var isSelected = ko.utils.arrayIndexOf(previousSelectedValues, ko.selectExtensions.readValue(newOptions[0])) >= 0;\n                ko.utils.setOptionNodeSelectionState(newOptions[0], isSelected);\n\n                // If this option was changed from being selected during a single-item update, notify the change\n                if (itemUpdate && !isSelected) {\n                    ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n                }\n            }\n        }\n\n        var callback = setSelectionCallback;\n        if (allBindings['has']('optionsAfterRender') && typeof allBindings.get('optionsAfterRender') == \"function\") {\n            callback = function(arrayEntry, newOptions) {\n                setSelectionCallback(arrayEntry, newOptions);\n                ko.dependencyDetection.ignore(allBindings.get('optionsAfterRender'), null, [newOptions[0], arrayEntry !== captionPlaceholder ? arrayEntry : undefined]);\n            }\n        }\n\n        ko.utils.setDomNodeChildrenFromArrayMapping(element, filteredArray, optionForArrayItem, arrayToDomNodeChildrenOptions, callback);\n\n        if (!valueAllowUnset) {\n            // Determine if the selection has changed as a result of updating the options list\n            var selectionChanged;\n            if (multiple) {\n                // For a multiple-select box, compare the new selection count to the previous one\n                // But if nothing was selected before, the selection can't have changed\n                selectionChanged = previousSelectedValues.length && selectedOptions().length < previousSelectedValues.length;\n            } else {\n                // For a single-select box, compare the current value to the previous value\n                // But if nothing was selected before or nothing is selected now, just look for a change in selection\n                selectionChanged = (previousSelectedValues.length && element.selectedIndex >= 0)\n                    ? (ko.selectExtensions.readValue(element.options[element.selectedIndex]) !== previousSelectedValues[0])\n                    : (previousSelectedValues.length || element.selectedIndex >= 0);\n            }\n\n            // Ensure consistency between model value and selected option.\n            // If the dropdown was changed so that selection is no longer the same,\n            // notify the value or selectedOptions binding.\n            if (selectionChanged) {\n                ko.dependencyDetection.ignore(ko.utils.triggerEvent, null, [element, \"change\"]);\n            }\n        }\n\n        if (valueAllowUnset || ko.computedContext.isInitial()) {\n            ko.bindingEvent.notify(element, ko.bindingEvent.childrenComplete);\n        }\n\n        // Workaround for IE bug\n        ko.utils.ensureSelectElementIsRenderedCorrectly(element);\n\n        if (previousScrollTop && Math.abs(previousScrollTop - element.scrollTop) > 20)\n            element.scrollTop = previousScrollTop;\n    }\n};\nko.bindingHandlers['options'].optionValueDomDataKey = ko.utils.domData.nextKey();\nko.bindingHandlers['selectedOptions'] = {\n    'init': function (element, valueAccessor, allBindings) {\n        function updateFromView() {\n            var value = valueAccessor(), valueToWrite = [];\n            ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                if (node.selected)\n                    valueToWrite.push(ko.selectExtensions.readValue(node));\n            });\n            ko.expressionRewriting.writeValueToProperty(value, allBindings, 'selectedOptions', valueToWrite);\n        }\n\n        function updateFromModel() {\n            var newValue = ko.utils.unwrapObservable(valueAccessor()),\n                previousScrollTop = element.scrollTop;\n\n            if (newValue && typeof newValue.length == \"number\") {\n                ko.utils.arrayForEach(element.getElementsByTagName(\"option\"), function(node) {\n                    var isSelected = ko.utils.arrayIndexOf(newValue, ko.selectExtensions.readValue(node)) >= 0;\n                    if (node.selected != isSelected) {      // This check prevents flashing of the select element in IE\n                        ko.utils.setOptionNodeSelectionState(node, isSelected);\n                    }\n                });\n            }\n\n            element.scrollTop = previousScrollTop;\n        }\n\n        if (ko.utils.tagNameLower(element) != \"select\") {\n            throw new Error(\"selectedOptions binding applies only to SELECT elements\");\n        }\n\n        var updateFromModelComputed;\n        ko.bindingEvent.subscribe(element, ko.bindingEvent.childrenComplete, function () {\n            if (!updateFromModelComputed) {\n                ko.utils.registerEventHandler(element, \"change\", updateFromView);\n                updateFromModelComputed = ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n            } else {\n                updateFromView();\n            }\n        }, null, { 'notifyImmediately': true });\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped binding\n};\nko.expressionRewriting.twoWayBindings['selectedOptions'] = true;\nko.bindingHandlers['style'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor() || {});\n        ko.utils.objectForEach(value, function(styleName, styleValue) {\n            styleValue = ko.utils.unwrapObservable(styleValue);\n\n            if (styleValue === null || styleValue === undefined || styleValue === false) {\n                // Empty string removes the value, whereas null/undefined have no effect\n                styleValue = \"\";\n            }\n\n            if (jQueryInstance) {\n                jQueryInstance(element)['css'](styleName, styleValue);\n            } else if (/^--/.test(styleName)) {\n                // Is styleName a custom CSS property?\n                element.style.setProperty(styleName, styleValue);\n            } else {\n                styleName = styleName.replace(/-(\\w)/g, function (all, letter) {\n                    return letter.toUpperCase();\n                });\n\n                var previousStyle = element.style[styleName];\n                element.style[styleName] = styleValue;\n\n                if (styleValue !== previousStyle && element.style[styleName] == previousStyle && !isNaN(styleValue)) {\n                    element.style[styleName] = styleValue + \"px\";\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['submit'] = {\n    'init': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n        if (typeof valueAccessor() != \"function\")\n            throw new Error(\"The value for a submit binding must be a function\");\n        ko.utils.registerEventHandler(element, \"submit\", function (event) {\n            var handlerReturnValue;\n            var value = valueAccessor();\n            try { handlerReturnValue = value.call(bindingContext['$data'], element); }\n            finally {\n                if (handlerReturnValue !== true) { // Normally we want to prevent default action. Developer can override this be explicitly returning true.\n                    if (event.preventDefault)\n                        event.preventDefault();\n                    else\n                        event.returnValue = false;\n                }\n            }\n        });\n    }\n};\nko.bindingHandlers['text'] = {\n    'init': function() {\n        // Prevent binding on the dynamically-injected text node (as developers are unlikely to expect that, and it has security implications).\n        // It should also make things faster, as we no longer have to consider whether the text node might be bindable.\n        return { 'controlsDescendantBindings': true };\n    },\n    'update': function (element, valueAccessor) {\n        ko.utils.setTextContent(element, valueAccessor());\n    }\n};\nko.virtualElements.allowedBindings['text'] = true;\n(function () {\n\nif (window && window.navigator) {\n    var parseVersion = function (matches) {\n        if (matches) {\n            return parseFloat(matches[1]);\n        }\n    };\n\n    // Detect various browser versions because some old versions don't fully support the 'input' event\n    var userAgent = window.navigator.userAgent,\n        operaVersion, chromeVersion, safariVersion, firefoxVersion, ieVersion, edgeVersion;\n\n    (operaVersion = window.opera && window.opera.version && parseInt(window.opera.version()))\n        || (edgeVersion = parseVersion(userAgent.match(/Edge\\/([^ ]+)$/)))\n        || (chromeVersion = parseVersion(userAgent.match(/Chrome\\/([^ ]+)/)))\n        || (safariVersion = parseVersion(userAgent.match(/Version\\/([^ ]+) Safari/)))\n        || (firefoxVersion = parseVersion(userAgent.match(/Firefox\\/([^ ]+)/)))\n        || (ieVersion = ko.utils.ieVersion || parseVersion(userAgent.match(/MSIE ([^ ]+)/)))      // Detects up to IE 10\n        || (ieVersion = parseVersion(userAgent.match(/rv:([^ )]+)/)));      // Detects IE 11\n}\n\n// IE 8 and 9 have bugs that prevent the normal events from firing when the value changes.\n// But it does fire the 'selectionchange' event on many of those, presumably because the\n// cursor is moving and that counts as the selection changing. The 'selectionchange' event is\n// fired at the document level only and doesn't directly indicate which element changed. We\n// set up just one event handler for the document and use 'activeElement' to determine which\n// element was changed.\nif (ieVersion >= 8 && ieVersion < 10) {\n    var selectionChangeRegisteredName = ko.utils.domData.nextKey(),\n        selectionChangeHandlerName = ko.utils.domData.nextKey();\n    var selectionChangeHandler = function(event) {\n        var target = this.activeElement,\n            handler = target && ko.utils.domData.get(target, selectionChangeHandlerName);\n        if (handler) {\n            handler(event);\n        }\n    };\n    var registerForSelectionChangeEvent = function (element, handler) {\n        var ownerDoc = element.ownerDocument;\n        if (!ko.utils.domData.get(ownerDoc, selectionChangeRegisteredName)) {\n            ko.utils.domData.set(ownerDoc, selectionChangeRegisteredName, true);\n            ko.utils.registerEventHandler(ownerDoc, 'selectionchange', selectionChangeHandler);\n        }\n        ko.utils.domData.set(element, selectionChangeHandlerName, handler);\n    };\n}\n\nko.bindingHandlers['textInput'] = {\n    'init': function (element, valueAccessor, allBindings) {\n\n        var previousElementValue = element.value,\n            timeoutHandle,\n            elementValueBeforeEvent;\n\n        var updateModel = function (event) {\n            clearTimeout(timeoutHandle);\n            elementValueBeforeEvent = timeoutHandle = undefined;\n\n            var elementValue = element.value;\n            if (previousElementValue !== elementValue) {\n                // Provide a way for tests to know exactly which event was processed\n                if (DEBUG && event) element['_ko_textInputProcessedEvent'] = event.type;\n                previousElementValue = elementValue;\n                ko.expressionRewriting.writeValueToProperty(valueAccessor(), allBindings, 'textInput', elementValue);\n            }\n        };\n\n        var deferUpdateModel = function (event) {\n            if (!timeoutHandle) {\n                // The elementValueBeforeEvent variable is set *only* during the brief gap between an\n                // event firing and the updateModel function running. This allows us to ignore model\n                // updates that are from the previous state of the element, usually due to techniques\n                // such as rateLimit. Such updates, if not ignored, can cause keystrokes to be lost.\n                elementValueBeforeEvent = element.value;\n                var handler = DEBUG ? updateModel.bind(element, {type: event.type}) : updateModel;\n                timeoutHandle = ko.utils.setTimeout(handler, 4);\n            }\n        };\n\n        // IE9 will mess up the DOM if you handle events synchronously which results in DOM changes (such as other bindings);\n        // so we'll make sure all updates are asynchronous\n        var ieUpdateModel = ko.utils.ieVersion == 9 ? deferUpdateModel : updateModel,\n            ourUpdate = false;\n\n        var updateView = function () {\n            var modelValue = ko.utils.unwrapObservable(valueAccessor());\n\n            if (modelValue === null || modelValue === undefined) {\n                modelValue = '';\n            }\n\n            if (elementValueBeforeEvent !== undefined && modelValue === elementValueBeforeEvent) {\n                ko.utils.setTimeout(updateView, 4);\n                return;\n            }\n\n            // Update the element only if the element and model are different. On some browsers, updating the value\n            // will move the cursor to the end of the input, which would be bad while the user is typing.\n            if (element.value !== modelValue) {\n                ourUpdate = true;  // Make sure we ignore events (propertychange) that result from updating the value\n                element.value = modelValue;\n                ourUpdate = false;\n                previousElementValue = element.value; // In case the browser changes the value (see #2281)\n            }\n        };\n\n        var onEvent = function (event, handler) {\n            ko.utils.registerEventHandler(element, event, handler);\n        };\n\n        if (DEBUG && ko.bindingHandlers['textInput']['_forceUpdateOn']) {\n            // Provide a way for tests to specify exactly which events are bound\n            ko.utils.arrayForEach(ko.bindingHandlers['textInput']['_forceUpdateOn'], function(eventName) {\n                if (eventName.slice(0,5) == 'after') {\n                    onEvent(eventName.slice(5), deferUpdateModel);\n                } else {\n                    onEvent(eventName, updateModel);\n                }\n            });\n        } else {\n            if (ieVersion) {\n                // All versions (including 11) of Internet Explorer have a bug that they don't generate an input or propertychange event when ESC is pressed\n                onEvent('keypress', updateModel);\n            }\n            if (ieVersion < 11) {\n                // Internet Explorer <= 8 doesn't support the 'input' event, but does include 'propertychange' that fires whenever\n                // any property of an element changes. Unlike 'input', it also fires if a property is changed from JavaScript code,\n                // but that's an acceptable compromise for this binding. IE 9 and 10 support 'input', but since they don't always\n                // fire it when using autocomplete, we'll use 'propertychange' for them also.\n                onEvent('propertychange', function(event) {\n                    if (!ourUpdate && event.propertyName === 'value') {\n                        ieUpdateModel(event);\n                    }\n                });\n            }\n            if (ieVersion == 8) {\n                // IE 8 has a bug where it fails to fire 'propertychange' on the first update following a value change from\n                // JavaScript code. It also doesn't fire if you clear the entire value. To fix this, we bind to the following\n                // events too.\n                onEvent('keyup', updateModel);      // A single keystoke\n                onEvent('keydown', updateModel);    // The first character when a key is held down\n            }\n            if (registerForSelectionChangeEvent) {\n                // Internet Explorer 9 doesn't fire the 'input' event when deleting text, including using\n                // the backspace, delete, or ctrl-x keys, clicking the 'x' to clear the input, dragging text\n                // out of the field, and cutting or deleting text using the context menu. 'selectionchange'\n                // can detect all of those except dragging text out of the field, for which we use 'dragend'.\n                // These are also needed in IE8 because of the bug described above.\n                registerForSelectionChangeEvent(element, ieUpdateModel);  // 'selectionchange' covers cut, paste, drop, delete, etc.\n                onEvent('dragend', deferUpdateModel);\n            }\n\n            if (!ieVersion || ieVersion >= 9) {\n                // All other supported browsers support the 'input' event, which fires whenever the content of the element is changed\n                // through the user interface.\n                onEvent('input', ieUpdateModel);\n            }\n\n            if (safariVersion < 5 && ko.utils.tagNameLower(element) === \"textarea\") {\n                // Safari <5 doesn't fire the 'input' event for <textarea> elements (it does fire 'textInput'\n                // but only when typing). So we'll just catch as much as we can with keydown, cut, and paste.\n                onEvent('keydown', deferUpdateModel);\n                onEvent('paste', deferUpdateModel);\n                onEvent('cut', deferUpdateModel);\n            } else if (operaVersion < 11) {\n                // Opera 10 doesn't always fire the 'input' event for cut, paste, undo & drop operations.\n                // We can try to catch some of those using 'keydown'.\n                onEvent('keydown', deferUpdateModel);\n            } else if (firefoxVersion < 4.0) {\n                // Firefox <= 3.6 doesn't fire the 'input' event when text is filled in through autocomplete\n                onEvent('DOMAutoComplete', updateModel);\n\n                // Firefox <=3.5 doesn't fire the 'input' event when text is dropped into the input.\n                onEvent('dragdrop', updateModel);       // <3.5\n                onEvent('drop', updateModel);           // 3.5\n            } else if (edgeVersion && element.type === \"number\") {\n                // Microsoft Edge doesn't fire 'input' or 'change' events for number inputs when\n                // the value is changed via the up / down arrow keys\n                onEvent('keydown', deferUpdateModel);\n            }\n        }\n\n        // Bind to the change event so that we can catch programmatic updates of the value that fire this event.\n        onEvent('change', updateModel);\n\n        // To deal with browsers that don't notify any kind of event for some changes (IE, Safari, etc.)\n        onEvent('blur', updateModel);\n\n        ko.computed(updateView, null, { disposeWhenNodeIsRemoved: element });\n    }\n};\nko.expressionRewriting.twoWayBindings['textInput'] = true;\n\n// textinput is an alias for textInput\nko.bindingHandlers['textinput'] = {\n    // preprocess is the only way to set up a full alias\n    'preprocess': function (value, name, addBinding) {\n        addBinding('textInput', value);\n    }\n};\n\n})();ko.bindingHandlers['uniqueName'] = {\n    'init': function (element, valueAccessor) {\n        if (valueAccessor()) {\n            var name = \"ko_unique_\" + (++ko.bindingHandlers['uniqueName'].currentIndex);\n            ko.utils.setElementName(element, name);\n        }\n    }\n};\nko.bindingHandlers['uniqueName'].currentIndex = 0;\nko.bindingHandlers['using'] = {\n    'init': function(element, valueAccessor, allBindings, viewModel, bindingContext) {\n        var options;\n\n        if (allBindings['has']('as')) {\n            options = { 'as': allBindings.get('as'), 'noChildContext': allBindings.get('noChildContext') };\n        }\n\n        var innerContext = bindingContext['createChildContext'](valueAccessor, options);\n        ko.applyBindingsToDescendants(innerContext, element);\n\n        return { 'controlsDescendantBindings': true };\n    }\n};\nko.virtualElements.allowedBindings['using'] = true;\nko.bindingHandlers['value'] = {\n    'init': function (element, valueAccessor, allBindings) {\n        var tagName = ko.utils.tagNameLower(element),\n            isInputElement = tagName == \"input\";\n\n        // If the value binding is placed on a radio/checkbox, then just pass through to checkedValue and quit\n        if (isInputElement && (element.type == \"checkbox\" || element.type == \"radio\")) {\n            ko.applyBindingAccessorsToNode(element, { 'checkedValue': valueAccessor });\n            return;\n        }\n\n        var eventsToCatch = [];\n        var requestedEventsToCatch = allBindings.get(\"valueUpdate\");\n        var propertyChangedFired = false;\n        var elementValueBeforeEvent = null;\n\n        if (requestedEventsToCatch) {\n            // Allow both individual event names, and arrays of event names\n            if (typeof requestedEventsToCatch == \"string\") {\n                eventsToCatch = [requestedEventsToCatch];\n            } else {\n                eventsToCatch = ko.utils.arrayGetDistinctValues(requestedEventsToCatch);\n            }\n            ko.utils.arrayRemoveItem(eventsToCatch, \"change\");  // We'll subscribe to \"change\" events later\n        }\n\n        var valueUpdateHandler = function() {\n            elementValueBeforeEvent = null;\n            propertyChangedFired = false;\n            var modelValue = valueAccessor();\n            var elementValue = ko.selectExtensions.readValue(element);\n            ko.expressionRewriting.writeValueToProperty(modelValue, allBindings, 'value', elementValue);\n        }\n\n        // Workaround for https://github.com/SteveSanderson/knockout/issues/122\n        // IE doesn't fire \"change\" events on textboxes if the user selects a value from its autocomplete list\n        var ieAutoCompleteHackNeeded = ko.utils.ieVersion && isInputElement && element.type == \"text\"\n                                       && element.autocomplete != \"off\" && (!element.form || element.form.autocomplete != \"off\");\n        if (ieAutoCompleteHackNeeded && ko.utils.arrayIndexOf(eventsToCatch, \"propertychange\") == -1) {\n            ko.utils.registerEventHandler(element, \"propertychange\", function () { propertyChangedFired = true });\n            ko.utils.registerEventHandler(element, \"focus\", function () { propertyChangedFired = false });\n            ko.utils.registerEventHandler(element, \"blur\", function() {\n                if (propertyChangedFired) {\n                    valueUpdateHandler();\n                }\n            });\n        }\n\n        ko.utils.arrayForEach(eventsToCatch, function(eventName) {\n            // The syntax \"after<eventname>\" means \"run the handler asynchronously after the event\"\n            // This is useful, for example, to catch \"keydown\" events after the browser has updated the control\n            // (otherwise, ko.selectExtensions.readValue(this) will receive the control's value *before* the key event)\n            var handler = valueUpdateHandler;\n            if (ko.utils.stringStartsWith(eventName, \"after\")) {\n                handler = function() {\n                    // The elementValueBeforeEvent variable is non-null *only* during the brief gap between\n                    // a keyX event firing and the valueUpdateHandler running, which is scheduled to happen\n                    // at the earliest asynchronous opportunity. We store this temporary information so that\n                    // if, between keyX and valueUpdateHandler, the underlying model value changes separately,\n                    // we can overwrite that model value change with the value the user just typed. Otherwise,\n                    // techniques like rateLimit can trigger model changes at critical moments that will\n                    // override the user's inputs, causing keystrokes to be lost.\n                    elementValueBeforeEvent = ko.selectExtensions.readValue(element);\n                    ko.utils.setTimeout(valueUpdateHandler, 0);\n                };\n                eventName = eventName.substring(\"after\".length);\n            }\n            ko.utils.registerEventHandler(element, eventName, handler);\n        });\n\n        var updateFromModel;\n\n        if (isInputElement && element.type == \"file\") {\n            // For file input elements, can only write the empty string\n            updateFromModel = function () {\n                var newValue = ko.utils.unwrapObservable(valueAccessor());\n                if (newValue === null || newValue === undefined || newValue === \"\") {\n                    element.value = \"\";\n                } else {\n                    ko.dependencyDetection.ignore(valueUpdateHandler);  // reset the model to match the element\n                }\n            }\n        } else {\n            updateFromModel = function () {\n                var newValue = ko.utils.unwrapObservable(valueAccessor());\n                var elementValue = ko.selectExtensions.readValue(element);\n\n                if (elementValueBeforeEvent !== null && newValue === elementValueBeforeEvent) {\n                    ko.utils.setTimeout(updateFromModel, 0);\n                    return;\n                }\n\n                var valueHasChanged = newValue !== elementValue;\n\n                if (valueHasChanged || elementValue === undefined) {\n                    if (tagName === \"select\") {\n                        var allowUnset = allBindings.get('valueAllowUnset');\n                        ko.selectExtensions.writeValue(element, newValue, allowUnset);\n                        if (!allowUnset && newValue !== ko.selectExtensions.readValue(element)) {\n                            // If you try to set a model value that can't be represented in an already-populated dropdown, reject that change,\n                            // because you're not allowed to have a model value that disagrees with a visible UI selection.\n                            ko.dependencyDetection.ignore(valueUpdateHandler);\n                        }\n                    } else {\n                        ko.selectExtensions.writeValue(element, newValue);\n                    }\n                }\n            };\n        }\n\n        if (tagName === \"select\") {\n            var updateFromModelComputed;\n            ko.bindingEvent.subscribe(element, ko.bindingEvent.childrenComplete, function () {\n                if (!updateFromModelComputed) {\n                    ko.utils.registerEventHandler(element, \"change\", valueUpdateHandler);\n                    updateFromModelComputed = ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n                } else if (allBindings.get('valueAllowUnset')) {\n                    updateFromModel();\n                } else {\n                    valueUpdateHandler();\n                }\n            }, null, { 'notifyImmediately': true });\n        } else {\n            ko.utils.registerEventHandler(element, \"change\", valueUpdateHandler);\n            ko.computed(updateFromModel, null, { disposeWhenNodeIsRemoved: element });\n        }\n    },\n    'update': function() {} // Keep for backwards compatibility with code that may have wrapped value binding\n};\nko.expressionRewriting.twoWayBindings['value'] = true;\nko.bindingHandlers['visible'] = {\n    'update': function (element, valueAccessor) {\n        var value = ko.utils.unwrapObservable(valueAccessor());\n        var isCurrentlyVisible = !(element.style.display == \"none\");\n        if (value && !isCurrentlyVisible)\n            element.style.display = \"\";\n        else if ((!value) && isCurrentlyVisible)\n            element.style.display = \"none\";\n    }\n};\n\nko.bindingHandlers['hidden'] = {\n    'update': function (element, valueAccessor) {\n        ko.bindingHandlers['visible']['update'](element, function() { return !ko.utils.unwrapObservable(valueAccessor()) });\n    }\n};\n// 'click' is just a shorthand for the usual full-length event:{click:handler}\nmakeEventHandlerShortcut('click');\n// If you want to make a custom template engine,\n//\n// [1] Inherit from this class (like ko.nativeTemplateEngine does)\n// [2] Override 'renderTemplateSource', supplying a function with this signature:\n//\n//        function (templateSource, bindingContext, options) {\n//            // - templateSource.text() is the text of the template you should render\n//            // - bindingContext.$data is the data you should pass into the template\n//            //   - you might also want to make bindingContext.$parent, bindingContext.$parents,\n//            //     and bindingContext.$root available in the template too\n//            // - options gives you access to any other properties set on \"data-bind: { template: options }\"\n//            // - templateDocument is the document object of the template\n//            //\n//            // Return value: an array of DOM nodes\n//        }\n//\n// [3] Override 'createJavaScriptEvaluatorBlock', supplying a function with this signature:\n//\n//        function (script) {\n//            // Return value: Whatever syntax means \"Evaluate the JavaScript statement 'script' and output the result\"\n//            //               For example, the jquery.tmpl template engine converts 'someScript' to '${ someScript }'\n//        }\n//\n//     This is only necessary if you want to allow data-bind attributes to reference arbitrary template variables.\n//     If you don't want to allow that, you can set the property 'allowTemplateRewriting' to false (like ko.nativeTemplateEngine does)\n//     and then you don't need to override 'createJavaScriptEvaluatorBlock'.\n\nko.templateEngine = function () { };\n\nko.templateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    throw new Error(\"Override renderTemplateSource\");\n};\n\nko.templateEngine.prototype['createJavaScriptEvaluatorBlock'] = function (script) {\n    throw new Error(\"Override createJavaScriptEvaluatorBlock\");\n};\n\nko.templateEngine.prototype['makeTemplateSource'] = function(template, templateDocument) {\n    // Named template\n    if (typeof template == \"string\") {\n        templateDocument = templateDocument || document;\n        var elem = templateDocument.getElementById(template);\n        if (!elem)\n            throw new Error(\"Cannot find template with ID \" + template);\n        return new ko.templateSources.domElement(elem);\n    } else if ((template.nodeType == 1) || (template.nodeType == 8)) {\n        // Anonymous template\n        return new ko.templateSources.anonymousTemplate(template);\n    } else\n        throw new Error(\"Unknown template type: \" + template);\n};\n\nko.templateEngine.prototype['renderTemplate'] = function (template, bindingContext, options, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    return this['renderTemplateSource'](templateSource, bindingContext, options, templateDocument);\n};\n\nko.templateEngine.prototype['isTemplateRewritten'] = function (template, templateDocument) {\n    // Skip rewriting if requested\n    if (this['allowTemplateRewriting'] === false)\n        return true;\n    return this['makeTemplateSource'](template, templateDocument)['data'](\"isRewritten\");\n};\n\nko.templateEngine.prototype['rewriteTemplate'] = function (template, rewriterCallback, templateDocument) {\n    var templateSource = this['makeTemplateSource'](template, templateDocument);\n    var rewritten = rewriterCallback(templateSource['text']());\n    templateSource['text'](rewritten);\n    templateSource['data'](\"isRewritten\", true);\n};\n\nko.exportSymbol('templateEngine', ko.templateEngine);\n\nko.templateRewriting = (function () {\n    var memoizeDataBindingAttributeSyntaxRegex = /(<([a-z]+\\d*)(?:\\s+(?!data-bind\\s*=\\s*)[a-z0-9\\-]+(?:=(?:\\\"[^\\\"]*\\\"|\\'[^\\']*\\'|[^>]*))?)*\\s+)data-bind\\s*=\\s*([\"'])([\\s\\S]*?)\\3/gi;\n    var memoizeVirtualContainerBindingSyntaxRegex = /<!--\\s*ko\\b\\s*([\\s\\S]*?)\\s*-->/g;\n\n    function validateDataBindValuesForRewriting(keyValueArray) {\n        var allValidators = ko.expressionRewriting.bindingRewriteValidators;\n        for (var i = 0; i < keyValueArray.length; i++) {\n            var key = keyValueArray[i]['key'];\n            if (Object.prototype.hasOwnProperty.call(allValidators, key)) {\n                var validator = allValidators[key];\n\n                if (typeof validator === \"function\") {\n                    var possibleErrorMessage = validator(keyValueArray[i]['value']);\n                    if (possibleErrorMessage)\n                        throw new Error(possibleErrorMessage);\n                } else if (!validator) {\n                    throw new Error(\"This template engine does not support the '\" + key + \"' binding within its templates\");\n                }\n            }\n        }\n    }\n\n    function constructMemoizedTagReplacement(dataBindAttributeValue, tagToRetain, nodeName, templateEngine) {\n        var dataBindKeyValueArray = ko.expressionRewriting.parseObjectLiteral(dataBindAttributeValue);\n        validateDataBindValuesForRewriting(dataBindKeyValueArray);\n        var rewrittenDataBindAttributeValue = ko.expressionRewriting.preProcessBindings(dataBindKeyValueArray, {'valueAccessors':true});\n\n        // For no obvious reason, Opera fails to evaluate rewrittenDataBindAttributeValue unless it's wrapped in an additional\n        // anonymous function, even though Opera's built-in debugger can evaluate it anyway. No other browser requires this\n        // extra indirection.\n        var applyBindingsToNextSiblingScript =\n            \"ko.__tr_ambtns(function($context,$element){return(function(){return{ \" + rewrittenDataBindAttributeValue + \" } })()},'\" + nodeName.toLowerCase() + \"')\";\n        return templateEngine['createJavaScriptEvaluatorBlock'](applyBindingsToNextSiblingScript) + tagToRetain;\n    }\n\n    return {\n        ensureTemplateIsRewritten: function (template, templateEngine, templateDocument) {\n            if (!templateEngine['isTemplateRewritten'](template, templateDocument))\n                templateEngine['rewriteTemplate'](template, function (htmlString) {\n                    return ko.templateRewriting.memoizeBindingAttributeSyntax(htmlString, templateEngine);\n                }, templateDocument);\n        },\n\n        memoizeBindingAttributeSyntax: function (htmlString, templateEngine) {\n            return htmlString.replace(memoizeDataBindingAttributeSyntaxRegex, function () {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[4], /* tagToRetain: */ arguments[1], /* nodeName: */ arguments[2], templateEngine);\n            }).replace(memoizeVirtualContainerBindingSyntaxRegex, function() {\n                return constructMemoizedTagReplacement(/* dataBindAttributeValue: */ arguments[1], /* tagToRetain: */ \"<!-- ko -->\", /* nodeName: */ \"#comment\", templateEngine);\n            });\n        },\n\n        applyMemoizedBindingsToNextSibling: function (bindings, nodeName) {\n            return ko.memoization.memoize(function (domNode, bindingContext) {\n                var nodeToBind = domNode.nextSibling;\n                if (nodeToBind && nodeToBind.nodeName.toLowerCase() === nodeName) {\n                    ko.applyBindingAccessorsToNode(nodeToBind, bindings, bindingContext);\n                }\n            });\n        }\n    }\n})();\n\n\n// Exported only because it has to be referenced by string lookup from within rewritten template\nko.exportSymbol('__tr_ambtns', ko.templateRewriting.applyMemoizedBindingsToNextSibling);\n(function() {\n    // A template source represents a read/write way of accessing a template. This is to eliminate the need for template loading/saving\n    // logic to be duplicated in every template engine (and means they can all work with anonymous templates, etc.)\n    //\n    // Two are provided by default:\n    //  1. ko.templateSources.domElement       - reads/writes the text content of an arbitrary DOM element\n    //  2. ko.templateSources.anonymousElement - uses ko.utils.domData to read/write text *associated* with the DOM element, but\n    //                                           without reading/writing the actual element text content, since it will be overwritten\n    //                                           with the rendered template output.\n    // You can implement your own template source if you want to fetch/store templates somewhere other than in DOM elements.\n    // Template sources need to have the following functions:\n    //   text() \t\t\t- returns the template text from your storage location\n    //   text(value)\t\t- writes the supplied template text to your storage location\n    //   data(key)\t\t\t- reads values stored using data(key, value) - see below\n    //   data(key, value)\t- associates \"value\" with this template and the key \"key\". Is used to store information like \"isRewritten\".\n    //\n    // Optionally, template sources can also have the following functions:\n    //   nodes()            - returns a DOM element containing the nodes of this template, where available\n    //   nodes(value)       - writes the given DOM element to your storage location\n    // If a DOM element is available for a given template source, template engines are encouraged to use it in preference over text()\n    // for improved speed. However, all templateSources must supply text() even if they don't supply nodes().\n    //\n    // Once you've implemented a templateSource, make your template engine use it by subclassing whatever template engine you were\n    // using and overriding \"makeTemplateSource\" to return an instance of your custom template source.\n\n    ko.templateSources = {};\n\n    // ---- ko.templateSources.domElement -----\n\n    // template types\n    var templateScript = 1,\n        templateTextArea = 2,\n        templateTemplate = 3,\n        templateElement = 4;\n\n    ko.templateSources.domElement = function(element) {\n        this.domElement = element;\n\n        if (element) {\n            var tagNameLower = ko.utils.tagNameLower(element);\n            this.templateType =\n                tagNameLower === \"script\" ? templateScript :\n                tagNameLower === \"textarea\" ? templateTextArea :\n                    // For browsers with proper <template> element support, where the .content property gives a document fragment\n                tagNameLower == \"template\" && element.content && element.content.nodeType === 11 ? templateTemplate :\n                templateElement;\n        }\n    }\n\n    ko.templateSources.domElement.prototype['text'] = function(/* valueToWrite */) {\n        var elemContentsProperty = this.templateType === templateScript ? \"text\"\n                                 : this.templateType === templateTextArea ? \"value\"\n                                 : \"innerHTML\";\n\n        if (arguments.length == 0) {\n            return this.domElement[elemContentsProperty];\n        } else {\n            var valueToWrite = arguments[0];\n            if (elemContentsProperty === \"innerHTML\")\n                ko.utils.setHtml(this.domElement, valueToWrite);\n            else\n                this.domElement[elemContentsProperty] = valueToWrite;\n        }\n    };\n\n    var dataDomDataPrefix = ko.utils.domData.nextKey() + \"_\";\n    ko.templateSources.domElement.prototype['data'] = function(key /*, valueToWrite */) {\n        if (arguments.length === 1) {\n            return ko.utils.domData.get(this.domElement, dataDomDataPrefix + key);\n        } else {\n            ko.utils.domData.set(this.domElement, dataDomDataPrefix + key, arguments[1]);\n        }\n    };\n\n    var templatesDomDataKey = ko.utils.domData.nextKey();\n    function getTemplateDomData(element) {\n        return ko.utils.domData.get(element, templatesDomDataKey) || {};\n    }\n    function setTemplateDomData(element, data) {\n        ko.utils.domData.set(element, templatesDomDataKey, data);\n    }\n\n    ko.templateSources.domElement.prototype['nodes'] = function(/* valueToWrite */) {\n        var element = this.domElement;\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(element),\n                nodes = templateData.containerData || (\n                    this.templateType === templateTemplate ? element.content :\n                    this.templateType === templateElement ? element :\n                    undefined);\n            if (!nodes || templateData.alwaysCheckText) {\n                // If the template is associated with an element that stores the template as text,\n                // parse and cache the nodes whenever there's new text content available. This allows\n                // the user to update the template content by updating the text of template node.\n                var text = this['text']();\n                if (text && text !== templateData.textData) {\n                    nodes = ko.utils.parseHtmlForTemplateNodes(text, element.ownerDocument);\n                    setTemplateDomData(element, {containerData: nodes, textData: text, alwaysCheckText: true});\n                }\n            }\n            return nodes;\n        } else {\n            var valueToWrite = arguments[0];\n            if (this.templateType !== undefined) {\n                this['text'](\"\");   // clear the text from the node\n            }\n            setTemplateDomData(element, {containerData: valueToWrite});\n        }\n    };\n\n    // ---- ko.templateSources.anonymousTemplate -----\n    // Anonymous templates are normally saved/retrieved as DOM nodes through \"nodes\".\n    // For compatibility, you can also read \"text\"; it will be serialized from the nodes on demand.\n    // Writing to \"text\" is still supported, but then the template data will not be available as DOM nodes.\n\n    ko.templateSources.anonymousTemplate = function(element) {\n        this.domElement = element;\n    }\n    ko.templateSources.anonymousTemplate.prototype = new ko.templateSources.domElement();\n    ko.templateSources.anonymousTemplate.prototype.constructor = ko.templateSources.anonymousTemplate;\n    ko.templateSources.anonymousTemplate.prototype['text'] = function(/* valueToWrite */) {\n        if (arguments.length == 0) {\n            var templateData = getTemplateDomData(this.domElement);\n            if (templateData.textData === undefined && templateData.containerData)\n                templateData.textData = templateData.containerData.innerHTML;\n            return templateData.textData;\n        } else {\n            var valueToWrite = arguments[0];\n            setTemplateDomData(this.domElement, {textData: valueToWrite});\n        }\n    };\n\n    ko.exportSymbol('templateSources', ko.templateSources);\n    ko.exportSymbol('templateSources.domElement', ko.templateSources.domElement);\n    ko.exportSymbol('templateSources.anonymousTemplate', ko.templateSources.anonymousTemplate);\n})();\n(function () {\n    var _templateEngine;\n    ko.setTemplateEngine = function (templateEngine) {\n        if ((templateEngine != undefined) && !(templateEngine instanceof ko.templateEngine))\n            throw new Error(\"templateEngine must inherit from ko.templateEngine\");\n        _templateEngine = templateEngine;\n    }\n\n    function invokeForEachNodeInContinuousRange(firstNode, lastNode, action) {\n        var node, nextInQueue = firstNode, firstOutOfRangeNode = ko.virtualElements.nextSibling(lastNode);\n        while (nextInQueue && ((node = nextInQueue) !== firstOutOfRangeNode)) {\n            nextInQueue = ko.virtualElements.nextSibling(node);\n            action(node, nextInQueue);\n        }\n    }\n\n    function activateBindingsOnContinuousNodeArray(continuousNodeArray, bindingContext) {\n        // To be used on any nodes that have been rendered by a template and have been inserted into some parent element\n        // Walks through continuousNodeArray (which *must* be continuous, i.e., an uninterrupted sequence of sibling nodes, because\n        // the algorithm for walking them relies on this), and for each top-level item in the virtual-element sense,\n        // (1) Does a regular \"applyBindings\" to associate bindingContext with this node and to activate any non-memoized bindings\n        // (2) Unmemoizes any memos in the DOM subtree (e.g., to activate bindings that had been memoized during template rewriting)\n\n        if (continuousNodeArray.length) {\n            var firstNode = continuousNodeArray[0],\n                lastNode = continuousNodeArray[continuousNodeArray.length - 1],\n                parentNode = firstNode.parentNode,\n                provider = ko.bindingProvider['instance'],\n                preprocessNode = provider['preprocessNode'];\n\n            if (preprocessNode) {\n                invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node, nextNodeInRange) {\n                    var nodePreviousSibling = node.previousSibling;\n                    var newNodes = preprocessNode.call(provider, node);\n                    if (newNodes) {\n                        if (node === firstNode)\n                            firstNode = newNodes[0] || nextNodeInRange;\n                        if (node === lastNode)\n                            lastNode = newNodes[newNodes.length - 1] || nodePreviousSibling;\n                    }\n                });\n\n                // Because preprocessNode can change the nodes, including the first and last nodes, update continuousNodeArray to match.\n                // We need the full set, including inner nodes, because the unmemoize step might remove the first node (and so the real\n                // first node needs to be in the array).\n                continuousNodeArray.length = 0;\n                if (!firstNode) { // preprocessNode might have removed all the nodes, in which case there's nothing left to do\n                    return;\n                }\n                if (firstNode === lastNode) {\n                    continuousNodeArray.push(firstNode);\n                } else {\n                    continuousNodeArray.push(firstNode, lastNode);\n                    ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n                }\n            }\n\n            // Need to applyBindings *before* unmemoziation, because unmemoization might introduce extra nodes (that we don't want to re-bind)\n            // whereas a regular applyBindings won't introduce new memoized nodes\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.applyBindings(bindingContext, node);\n            });\n            invokeForEachNodeInContinuousRange(firstNode, lastNode, function(node) {\n                if (node.nodeType === 1 || node.nodeType === 8)\n                    ko.memoization.unmemoizeDomNodeAndDescendants(node, [bindingContext]);\n            });\n\n            // Make sure any changes done by applyBindings or unmemoize are reflected in the array\n            ko.utils.fixUpContinuousNodeArray(continuousNodeArray, parentNode);\n        }\n    }\n\n    function getFirstNodeFromPossibleArray(nodeOrNodeArray) {\n        return nodeOrNodeArray.nodeType ? nodeOrNodeArray\n                                        : nodeOrNodeArray.length > 0 ? nodeOrNodeArray[0]\n                                        : null;\n    }\n\n    function executeTemplate(targetNodeOrNodeArray, renderMode, template, bindingContext, options) {\n        options = options || {};\n        var firstTargetNode = targetNodeOrNodeArray && getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n        var templateDocument = (firstTargetNode || template || {}).ownerDocument;\n        var templateEngineToUse = (options['templateEngine'] || _templateEngine);\n        ko.templateRewriting.ensureTemplateIsRewritten(template, templateEngineToUse, templateDocument);\n        var renderedNodesArray = templateEngineToUse['renderTemplate'](template, bindingContext, options, templateDocument);\n\n        // Loosely check result is an array of DOM nodes\n        if ((typeof renderedNodesArray.length != \"number\") || (renderedNodesArray.length > 0 && typeof renderedNodesArray[0].nodeType != \"number\"))\n            throw new Error(\"Template engine must return an array of DOM nodes\");\n\n        var haveAddedNodesToParent = false;\n        switch (renderMode) {\n            case \"replaceChildren\":\n                ko.virtualElements.setDomNodeChildren(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"replaceNode\":\n                ko.utils.replaceDomNodes(targetNodeOrNodeArray, renderedNodesArray);\n                haveAddedNodesToParent = true;\n                break;\n            case \"ignoreTargetNode\": break;\n            default:\n                throw new Error(\"Unknown renderMode: \" + renderMode);\n        }\n\n        if (haveAddedNodesToParent) {\n            activateBindingsOnContinuousNodeArray(renderedNodesArray, bindingContext);\n            if (options['afterRender']) {\n                ko.dependencyDetection.ignore(options['afterRender'], null, [renderedNodesArray, bindingContext[options['as'] || '$data']]);\n            }\n            if (renderMode == \"replaceChildren\") {\n                ko.bindingEvent.notify(targetNodeOrNodeArray, ko.bindingEvent.childrenComplete);\n            }\n        }\n\n        return renderedNodesArray;\n    }\n\n    function resolveTemplateName(template, data, context) {\n        // The template can be specified as:\n        if (ko.isObservable(template)) {\n            // 1. An observable, with string value\n            return template();\n        } else if (typeof template === 'function') {\n            // 2. A function of (data, context) returning a string\n            return template(data, context);\n        } else {\n            // 3. A string\n            return template;\n        }\n    }\n\n    ko.renderTemplate = function (template, dataOrBindingContext, options, targetNodeOrNodeArray, renderMode) {\n        options = options || {};\n        if ((options['templateEngine'] || _templateEngine) == undefined)\n            throw new Error(\"Set a template engine before calling renderTemplate\");\n        renderMode = renderMode || \"replaceChildren\";\n\n        if (targetNodeOrNodeArray) {\n            var firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n\n            var whenToDispose = function () { return (!firstTargetNode) || !ko.utils.domNodeIsAttachedToDocument(firstTargetNode); }; // Passive disposal (on next evaluation)\n            var activelyDisposeWhenNodeIsRemoved = (firstTargetNode && renderMode == \"replaceNode\") ? firstTargetNode.parentNode : firstTargetNode;\n\n            return ko.dependentObservable( // So the DOM is automatically updated when any dependency changes\n                function () {\n                    // Ensure we've got a proper binding context to work with\n                    var bindingContext = (dataOrBindingContext && (dataOrBindingContext instanceof ko.bindingContext))\n                        ? dataOrBindingContext\n                        : new ko.bindingContext(dataOrBindingContext, null, null, null, { \"exportDependencies\": true });\n\n                    var templateName = resolveTemplateName(template, bindingContext['$data'], bindingContext),\n                        renderedNodesArray = executeTemplate(targetNodeOrNodeArray, renderMode, templateName, bindingContext, options);\n\n                    if (renderMode == \"replaceNode\") {\n                        targetNodeOrNodeArray = renderedNodesArray;\n                        firstTargetNode = getFirstNodeFromPossibleArray(targetNodeOrNodeArray);\n                    }\n                },\n                null,\n                { disposeWhen: whenToDispose, disposeWhenNodeIsRemoved: activelyDisposeWhenNodeIsRemoved }\n            );\n        } else {\n            // We don't yet have a DOM node to evaluate, so use a memo and render the template later when there is a DOM node\n            return ko.memoization.memoize(function (domNode) {\n                ko.renderTemplate(template, dataOrBindingContext, options, domNode, \"replaceNode\");\n            });\n        }\n    };\n\n    ko.renderTemplateForEach = function (template, arrayOrObservableArray, options, targetNode, parentBindingContext) {\n        // Since setDomNodeChildrenFromArrayMapping always calls executeTemplateForArrayItem and then\n        // activateBindingsCallback for added items, we can store the binding context in the former to use in the latter.\n        var arrayItemContext, asName = options['as'];\n\n        // This will be called by setDomNodeChildrenFromArrayMapping to get the nodes to add to targetNode\n        var executeTemplateForArrayItem = function (arrayValue, index) {\n            // Support selecting template as a function of the data being rendered\n            arrayItemContext = parentBindingContext['createChildContext'](arrayValue, {\n                'as': asName,\n                'noChildContext': options['noChildContext'],\n                'extend': function(context) {\n                    context['$index'] = index;\n                    if (asName) {\n                        context[asName + \"Index\"] = index;\n                    }\n                }\n            });\n\n            var templateName = resolveTemplateName(template, arrayValue, arrayItemContext);\n            return executeTemplate(targetNode, \"ignoreTargetNode\", templateName, arrayItemContext, options);\n        };\n\n        // This will be called whenever setDomNodeChildrenFromArrayMapping has added nodes to targetNode\n        var activateBindingsCallback = function(arrayValue, addedNodesArray, index) {\n            activateBindingsOnContinuousNodeArray(addedNodesArray, arrayItemContext);\n            if (options['afterRender'])\n                options['afterRender'](addedNodesArray, arrayValue);\n\n            // release the \"cache\" variable, so that it can be collected by\n            // the GC when its value isn't used from within the bindings anymore.\n            arrayItemContext = null;\n        };\n\n        var setDomNodeChildrenFromArrayMapping = function (newArray, changeList) {\n            // Call setDomNodeChildrenFromArrayMapping, ignoring any observables unwrapped within (most likely from a callback function).\n            // If the array items are observables, though, they will be unwrapped in executeTemplateForArrayItem and managed within setDomNodeChildrenFromArrayMapping.\n            ko.dependencyDetection.ignore(ko.utils.setDomNodeChildrenFromArrayMapping, null, [targetNode, newArray, executeTemplateForArrayItem, options, activateBindingsCallback, changeList]);\n            ko.bindingEvent.notify(targetNode, ko.bindingEvent.childrenComplete);\n        };\n\n        var shouldHideDestroyed = (options['includeDestroyed'] === false) || (ko.options['foreachHidesDestroyed'] && !options['includeDestroyed']);\n\n        if (!shouldHideDestroyed && !options['beforeRemove'] && ko.isObservableArray(arrayOrObservableArray)) {\n            setDomNodeChildrenFromArrayMapping(arrayOrObservableArray.peek());\n\n            var subscription = arrayOrObservableArray.subscribe(function (changeList) {\n                setDomNodeChildrenFromArrayMapping(arrayOrObservableArray(), changeList);\n            }, null, \"arrayChange\");\n            subscription.disposeWhenNodeIsRemoved(targetNode);\n\n            return subscription;\n        } else {\n            return ko.dependentObservable(function () {\n                var unwrappedArray = ko.utils.unwrapObservable(arrayOrObservableArray) || [];\n                if (typeof unwrappedArray.length == \"undefined\") // Coerce single value into array\n                    unwrappedArray = [unwrappedArray];\n\n                if (shouldHideDestroyed) {\n                    // Filter out any entries marked as destroyed\n                    unwrappedArray = ko.utils.arrayFilter(unwrappedArray, function(item) {\n                        return item === undefined || item === null || !ko.utils.unwrapObservable(item['_destroy']);\n                    });\n                }\n                setDomNodeChildrenFromArrayMapping(unwrappedArray);\n\n            }, null, { disposeWhenNodeIsRemoved: targetNode });\n        }\n    };\n\n    var templateComputedDomDataKey = ko.utils.domData.nextKey();\n    function disposeOldComputedAndStoreNewOne(element, newComputed) {\n        var oldComputed = ko.utils.domData.get(element, templateComputedDomDataKey);\n        if (oldComputed && (typeof(oldComputed.dispose) == 'function'))\n            oldComputed.dispose();\n        ko.utils.domData.set(element, templateComputedDomDataKey, (newComputed && (!newComputed.isActive || newComputed.isActive())) ? newComputed : undefined);\n    }\n\n    var cleanContainerDomDataKey = ko.utils.domData.nextKey();\n    ko.bindingHandlers['template'] = {\n        'init': function(element, valueAccessor) {\n            // Support anonymous templates\n            var bindingValue = ko.utils.unwrapObservable(valueAccessor());\n            if (typeof bindingValue == \"string\" || 'name' in bindingValue) {\n                // It's a named template - clear the element\n                ko.virtualElements.emptyNode(element);\n            } else if ('nodes' in bindingValue) {\n                // We've been given an array of DOM nodes. Save them as the template source.\n                // There is no known use case for the node array being an observable array (if the output\n                // varies, put that behavior *into* your template - that's what templates are for), and\n                // the implementation would be a mess, so assert that it's not observable.\n                var nodes = bindingValue['nodes'] || [];\n                if (ko.isObservable(nodes)) {\n                    throw new Error('The \"nodes\" option must be a plain, non-observable array.');\n                }\n\n                // If the nodes are already attached to a KO-generated container, we reuse that container without moving the\n                // elements to a new one (we check only the first node, as the nodes are always moved together)\n                var container = nodes[0] && nodes[0].parentNode;\n                if (!container || !ko.utils.domData.get(container, cleanContainerDomDataKey)) {\n                    container = ko.utils.moveCleanedNodesToContainerElement(nodes);\n                    ko.utils.domData.set(container, cleanContainerDomDataKey, true);\n                }\n\n                new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n            } else {\n                // It's an anonymous template - store the element contents, then clear the element\n                var templateNodes = ko.virtualElements.childNodes(element);\n                if (templateNodes.length > 0) {\n                    var container = ko.utils.moveCleanedNodesToContainerElement(templateNodes); // This also removes the nodes from their current parent\n                    new ko.templateSources.anonymousTemplate(element)['nodes'](container);\n                } else {\n                    throw new Error(\"Anonymous template defined, but no template content was provided\");\n                }\n            }\n            return { 'controlsDescendantBindings': true };\n        },\n        'update': function (element, valueAccessor, allBindings, viewModel, bindingContext) {\n            var value = valueAccessor(),\n                options = ko.utils.unwrapObservable(value),\n                shouldDisplay = true,\n                templateComputed = null,\n                template;\n\n            if (typeof options == \"string\") {\n                template = value;\n                options = {};\n            } else {\n                template = 'name' in options ? options['name'] : element;\n\n                // Support \"if\"/\"ifnot\" conditions\n                if ('if' in options)\n                    shouldDisplay = ko.utils.unwrapObservable(options['if']);\n                if (shouldDisplay && 'ifnot' in options)\n                    shouldDisplay = !ko.utils.unwrapObservable(options['ifnot']);\n\n                // Don't show anything if an empty name is given (see #2446)\n                if (shouldDisplay && !template) {\n                    shouldDisplay = false;\n                }\n            }\n\n            if ('foreach' in options) {\n                // Render once for each data point (treating data set as empty if shouldDisplay==false)\n                var dataArray = (shouldDisplay && options['foreach']) || [];\n                templateComputed = ko.renderTemplateForEach(template, dataArray, options, element, bindingContext);\n            } else if (!shouldDisplay) {\n                ko.virtualElements.emptyNode(element);\n            } else {\n                // Render once for this single data point (or use the viewModel if no data was provided)\n                var innerBindingContext = bindingContext;\n                if ('data' in options) {\n                    innerBindingContext = bindingContext['createChildContext'](options['data'], {\n                        'as': options['as'],\n                        'noChildContext': options['noChildContext'],\n                        'exportDependencies': true\n                    });\n                }\n                templateComputed = ko.renderTemplate(template, innerBindingContext, options, element);\n            }\n\n            // It only makes sense to have a single template computed per element (otherwise which one should have its output displayed?)\n            disposeOldComputedAndStoreNewOne(element, templateComputed);\n        }\n    };\n\n    // Anonymous templates can't be rewritten. Give a nice error message if you try to do it.\n    ko.expressionRewriting.bindingRewriteValidators['template'] = function(bindingValue) {\n        var parsedBindingValue = ko.expressionRewriting.parseObjectLiteral(bindingValue);\n\n        if ((parsedBindingValue.length == 1) && parsedBindingValue[0]['unknown'])\n            return null; // It looks like a string literal, not an object literal, so treat it as a named template (which is allowed for rewriting)\n\n        if (ko.expressionRewriting.keyValueArrayContainsKey(parsedBindingValue, \"name\"))\n            return null; // Named templates can be rewritten, so return \"no error\"\n        return \"This template engine does not support anonymous templates nested within its templates\";\n    };\n\n    ko.virtualElements.allowedBindings['template'] = true;\n})();\n\nko.exportSymbol('setTemplateEngine', ko.setTemplateEngine);\nko.exportSymbol('renderTemplate', ko.renderTemplate);\n// Go through the items that have been added and deleted and try to find matches between them.\nko.utils.findMovesInArrayComparison = function (left, right, limitFailedCompares) {\n    if (left.length && right.length) {\n        var failedCompares, l, r, leftItem, rightItem;\n        for (failedCompares = l = 0; (!limitFailedCompares || failedCompares < limitFailedCompares) && (leftItem = left[l]); ++l) {\n            for (r = 0; rightItem = right[r]; ++r) {\n                if (leftItem['value'] === rightItem['value']) {\n                    leftItem['moved'] = rightItem['index'];\n                    rightItem['moved'] = leftItem['index'];\n                    right.splice(r, 1);         // This item is marked as moved; so remove it from right list\n                    failedCompares = r = 0;     // Reset failed compares count because we're checking for consecutive failures\n                    break;\n                }\n            }\n            failedCompares += r;\n        }\n    }\n};\n\nko.utils.compareArrays = (function () {\n    var statusNotInOld = 'added', statusNotInNew = 'deleted';\n\n    // Simple calculation based on Levenshtein distance.\n    function compareArrays(oldArray, newArray, options) {\n        // For backward compatibility, if the third arg is actually a bool, interpret\n        // it as the old parameter 'dontLimitMoves'. Newer code should use { dontLimitMoves: true }.\n        options = (typeof options === 'boolean') ? { 'dontLimitMoves': options } : (options || {});\n        oldArray = oldArray || [];\n        newArray = newArray || [];\n\n        if (oldArray.length < newArray.length)\n            return compareSmallArrayToBigArray(oldArray, newArray, statusNotInOld, statusNotInNew, options);\n        else\n            return compareSmallArrayToBigArray(newArray, oldArray, statusNotInNew, statusNotInOld, options);\n    }\n\n    function compareSmallArrayToBigArray(smlArray, bigArray, statusNotInSml, statusNotInBig, options) {\n        var myMin = Math.min,\n            myMax = Math.max,\n            editDistanceMatrix = [],\n            smlIndex, smlIndexMax = smlArray.length,\n            bigIndex, bigIndexMax = bigArray.length,\n            compareRange = (bigIndexMax - smlIndexMax) || 1,\n            maxDistance = smlIndexMax + bigIndexMax + 1,\n            thisRow, lastRow,\n            bigIndexMaxForRow, bigIndexMinForRow;\n\n        for (smlIndex = 0; smlIndex <= smlIndexMax; smlIndex++) {\n            lastRow = thisRow;\n            editDistanceMatrix.push(thisRow = []);\n            bigIndexMaxForRow = myMin(bigIndexMax, smlIndex + compareRange);\n            bigIndexMinForRow = myMax(0, smlIndex - 1);\n            for (bigIndex = bigIndexMinForRow; bigIndex <= bigIndexMaxForRow; bigIndex++) {\n                if (!bigIndex)\n                    thisRow[bigIndex] = smlIndex + 1;\n                else if (!smlIndex)  // Top row - transform empty array into new array via additions\n                    thisRow[bigIndex] = bigIndex + 1;\n                else if (smlArray[smlIndex - 1] === bigArray[bigIndex - 1])\n                    thisRow[bigIndex] = lastRow[bigIndex - 1];                  // copy value (no edit)\n                else {\n                    var northDistance = lastRow[bigIndex] || maxDistance;       // not in big (deletion)\n                    var westDistance = thisRow[bigIndex - 1] || maxDistance;    // not in small (addition)\n                    thisRow[bigIndex] = myMin(northDistance, westDistance) + 1;\n                }\n            }\n        }\n\n        var editScript = [], meMinusOne, notInSml = [], notInBig = [];\n        for (smlIndex = smlIndexMax, bigIndex = bigIndexMax; smlIndex || bigIndex;) {\n            meMinusOne = editDistanceMatrix[smlIndex][bigIndex] - 1;\n            if (bigIndex && meMinusOne === editDistanceMatrix[smlIndex][bigIndex-1]) {\n                notInSml.push(editScript[editScript.length] = {     // added\n                    'status': statusNotInSml,\n                    'value': bigArray[--bigIndex],\n                    'index': bigIndex });\n            } else if (smlIndex && meMinusOne === editDistanceMatrix[smlIndex - 1][bigIndex]) {\n                notInBig.push(editScript[editScript.length] = {     // deleted\n                    'status': statusNotInBig,\n                    'value': smlArray[--smlIndex],\n                    'index': smlIndex });\n            } else {\n                --bigIndex;\n                --smlIndex;\n                if (!options['sparse']) {\n                    editScript.push({\n                        'status': \"retained\",\n                        'value': bigArray[bigIndex] });\n                }\n            }\n        }\n\n        // Set a limit on the number of consecutive non-matching comparisons; having it a multiple of\n        // smlIndexMax keeps the time complexity of this algorithm linear.\n        ko.utils.findMovesInArrayComparison(notInBig, notInSml, !options['dontLimitMoves'] && smlIndexMax * 10);\n\n        return editScript.reverse();\n    }\n\n    return compareArrays;\n})();\n\nko.exportSymbol('utils.compareArrays', ko.utils.compareArrays);\n(function () {\n    // Objective:\n    // * Given an input array, a container DOM node, and a function from array elements to arrays of DOM nodes,\n    //   map the array elements to arrays of DOM nodes, concatenate together all these arrays, and use them to populate the container DOM node\n    // * Next time we're given the same combination of things (with the array possibly having mutated), update the container DOM node\n    //   so that its children is again the concatenation of the mappings of the array elements, but don't re-map any array elements that we\n    //   previously mapped - retain those nodes, and just insert/delete other ones\n\n    // \"callbackAfterAddingNodes\" will be invoked after any \"mapping\"-generated nodes are inserted into the container node\n    // You can use this, for example, to activate bindings on those nodes.\n\n    function mapNodeAndRefreshWhenChanged(containerNode, mapping, valueToMap, callbackAfterAddingNodes, index) {\n        // Map this array value inside a dependentObservable so we re-map when any dependency changes\n        var mappedNodes = [];\n        var dependentObservable = ko.dependentObservable(function() {\n            var newMappedNodes = mapping(valueToMap, index, ko.utils.fixUpContinuousNodeArray(mappedNodes, containerNode)) || [];\n\n            // On subsequent evaluations, just replace the previously-inserted DOM nodes\n            if (mappedNodes.length > 0) {\n                ko.utils.replaceDomNodes(mappedNodes, newMappedNodes);\n                if (callbackAfterAddingNodes)\n                    ko.dependencyDetection.ignore(callbackAfterAddingNodes, null, [valueToMap, newMappedNodes, index]);\n            }\n\n            // Replace the contents of the mappedNodes array, thereby updating the record\n            // of which nodes would be deleted if valueToMap was itself later removed\n            mappedNodes.length = 0;\n            ko.utils.arrayPushAll(mappedNodes, newMappedNodes);\n        }, null, { disposeWhenNodeIsRemoved: containerNode, disposeWhen: function() { return !ko.utils.anyDomNodeIsAttachedToDocument(mappedNodes); } });\n        return { mappedNodes : mappedNodes, dependentObservable : (dependentObservable.isActive() ? dependentObservable : undefined) };\n    }\n\n    var lastMappingResultDomDataKey = ko.utils.domData.nextKey(),\n        deletedItemDummyValue = ko.utils.domData.nextKey();\n\n    ko.utils.setDomNodeChildrenFromArrayMapping = function (domNode, array, mapping, options, callbackAfterAddingNodes, editScript) {\n        array = array || [];\n        if (typeof array.length == \"undefined\") // Coerce single value into array\n            array = [array];\n\n        options = options || {};\n        var lastMappingResult = ko.utils.domData.get(domNode, lastMappingResultDomDataKey);\n        var isFirstExecution = !lastMappingResult;\n\n        // Build the new mapping result\n        var newMappingResult = [];\n        var lastMappingResultIndex = 0;\n        var currentArrayIndex = 0;\n\n        var nodesToDelete = [];\n        var itemsToMoveFirstIndexes = [];\n        var itemsForBeforeRemoveCallbacks = [];\n        var itemsForMoveCallbacks = [];\n        var itemsForAfterAddCallbacks = [];\n        var mapData;\n        var countWaitingForRemove = 0;\n\n        function itemAdded(value) {\n            mapData = { arrayEntry: value, indexObservable: ko.observable(currentArrayIndex++) };\n            newMappingResult.push(mapData);\n            if (!isFirstExecution) {\n                itemsForAfterAddCallbacks.push(mapData);\n            }\n        }\n\n        function itemMovedOrRetained(oldPosition) {\n            mapData = lastMappingResult[oldPosition];\n            if (currentArrayIndex !== mapData.indexObservable.peek())\n                itemsForMoveCallbacks.push(mapData);\n            // Since updating the index might change the nodes, do so before calling fixUpContinuousNodeArray\n            mapData.indexObservable(currentArrayIndex++);\n            ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode);\n            newMappingResult.push(mapData);\n        }\n\n        function callCallback(callback, items) {\n            if (callback) {\n                for (var i = 0, n = items.length; i < n; i++) {\n                    ko.utils.arrayForEach(items[i].mappedNodes, function(node) {\n                        callback(node, i, items[i].arrayEntry);\n                    });\n                }\n            }\n        }\n\n        if (isFirstExecution) {\n            ko.utils.arrayForEach(array, itemAdded);\n        } else {\n            if (!editScript || (lastMappingResult && lastMappingResult['_countWaitingForRemove'])) {\n                // Compare the provided array against the previous one\n                var lastArray = ko.utils.arrayMap(lastMappingResult, function (x) { return x.arrayEntry; }),\n                    compareOptions = {\n                        'dontLimitMoves': options['dontLimitMoves'],\n                        'sparse': true\n                    };\n                editScript = ko.utils.compareArrays(lastArray, array, compareOptions);\n            }\n\n            for (var i = 0, editScriptItem, movedIndex, itemIndex; editScriptItem = editScript[i]; i++) {\n                movedIndex = editScriptItem['moved'];\n                itemIndex = editScriptItem['index'];\n                switch (editScriptItem['status']) {\n                    case \"deleted\":\n                        while (lastMappingResultIndex < itemIndex) {\n                            itemMovedOrRetained(lastMappingResultIndex++);\n                        }\n                        if (movedIndex === undefined) {\n                            mapData = lastMappingResult[lastMappingResultIndex];\n\n                            // Stop tracking changes to the mapping for these nodes\n                            if (mapData.dependentObservable) {\n                                mapData.dependentObservable.dispose();\n                                mapData.dependentObservable = undefined;\n                            }\n\n                            // Queue these nodes for later removal\n                            if (ko.utils.fixUpContinuousNodeArray(mapData.mappedNodes, domNode).length) {\n                                if (options['beforeRemove']) {\n                                    newMappingResult.push(mapData);\n                                    countWaitingForRemove++;\n                                    if (mapData.arrayEntry === deletedItemDummyValue) {\n                                        mapData = null;\n                                    } else {\n                                        itemsForBeforeRemoveCallbacks.push(mapData);\n                                    }\n                                }\n                                if (mapData) {\n                                    nodesToDelete.push.apply(nodesToDelete, mapData.mappedNodes);\n                                }\n                            }\n                        }\n                        lastMappingResultIndex++;\n                        break;\n\n                    case \"added\":\n                        while (currentArrayIndex < itemIndex) {\n                            itemMovedOrRetained(lastMappingResultIndex++);\n                        }\n                        if (movedIndex !== undefined) {\n                            itemsToMoveFirstIndexes.push(newMappingResult.length);\n                            itemMovedOrRetained(movedIndex);\n                        } else {\n                            itemAdded(editScriptItem['value']);\n                        }\n                        break;\n                }\n            }\n\n            while (currentArrayIndex < array.length) {\n                itemMovedOrRetained(lastMappingResultIndex++);\n            }\n\n            // Record that the current view may still contain deleted items\n            // because it means we won't be able to use a provided editScript.\n            newMappingResult['_countWaitingForRemove'] = countWaitingForRemove;\n        }\n\n        // Store a copy of the array items we just considered so we can difference it next time\n        ko.utils.domData.set(domNode, lastMappingResultDomDataKey, newMappingResult);\n\n        // Call beforeMove first before any changes have been made to the DOM\n        callCallback(options['beforeMove'], itemsForMoveCallbacks);\n\n        // Next remove nodes for deleted items (or just clean if there's a beforeRemove callback)\n        ko.utils.arrayForEach(nodesToDelete, options['beforeRemove'] ? ko.cleanNode : ko.removeNode);\n\n        var i, j, lastNode, nodeToInsert, mappedNodes, activeElement;\n\n        // Since most browsers remove the focus from an element when it's moved to another location,\n        // save the focused element and try to restore it later.\n        try {\n            activeElement = domNode.ownerDocument.activeElement;\n        } catch(e) {\n            // IE9 throws if you access activeElement during page load (see issue #703)\n        }\n\n        // Try to reduce overall moved nodes by first moving the ones that were marked as moved by the edit script\n        if (itemsToMoveFirstIndexes.length) {\n            while ((i = itemsToMoveFirstIndexes.shift()) != undefined) {\n                mapData = newMappingResult[i];\n                for (lastNode = undefined; i; ) {\n                    if ((mappedNodes = newMappingResult[--i].mappedNodes) && mappedNodes.length) {\n                        lastNode = mappedNodes[mappedNodes.length-1];\n                        break;\n                    }\n                }\n                for (j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\n                    ko.virtualElements.insertAfter(domNode, nodeToInsert, lastNode);\n                }\n            }\n        }\n\n        // Next add/reorder the remaining items (will include deleted items if there's a beforeRemove callback)\n        for (i = 0; mapData = newMappingResult[i]; i++) {\n            // Get nodes for newly added items\n            if (!mapData.mappedNodes)\n                ko.utils.extend(mapData, mapNodeAndRefreshWhenChanged(domNode, mapping, mapData.arrayEntry, callbackAfterAddingNodes, mapData.indexObservable));\n\n            // Put nodes in the right place if they aren't there already\n            for (j = 0; nodeToInsert = mapData.mappedNodes[j]; lastNode = nodeToInsert, j++) {\n                ko.virtualElements.insertAfter(domNode, nodeToInsert, lastNode);\n            }\n\n            // Run the callbacks for newly added nodes (for example, to apply bindings, etc.)\n            if (!mapData.initialized && callbackAfterAddingNodes) {\n                callbackAfterAddingNodes(mapData.arrayEntry, mapData.mappedNodes, mapData.indexObservable);\n                mapData.initialized = true;\n                lastNode = mapData.mappedNodes[mapData.mappedNodes.length - 1];     // get the last node again since it may have been changed by a preprocessor\n            }\n        }\n\n        // Restore the focused element if it had lost focus\n        if (activeElement && domNode.ownerDocument.activeElement != activeElement) {\n            activeElement.focus();\n        }\n\n        // If there's a beforeRemove callback, call it after reordering.\n        // Note that we assume that the beforeRemove callback will usually be used to remove the nodes using\n        // some sort of animation, which is why we first reorder the nodes that will be removed. If the\n        // callback instead removes the nodes right away, it would be more efficient to skip reordering them.\n        // Perhaps we'll make that change in the future if this scenario becomes more common.\n        callCallback(options['beforeRemove'], itemsForBeforeRemoveCallbacks);\n\n        // Replace the stored values of deleted items with a dummy value. This provides two benefits: it marks this item\n        // as already \"removed\" so we won't call beforeRemove for it again, and it ensures that the item won't match up\n        // with an actual item in the array and appear as \"retained\" or \"moved\".\n        for (i = 0; i < itemsForBeforeRemoveCallbacks.length; ++i) {\n            itemsForBeforeRemoveCallbacks[i].arrayEntry = deletedItemDummyValue;\n        }\n\n        // Finally call afterMove and afterAdd callbacks\n        callCallback(options['afterMove'], itemsForMoveCallbacks);\n        callCallback(options['afterAdd'], itemsForAfterAddCallbacks);\n    }\n})();\n\nko.exportSymbol('utils.setDomNodeChildrenFromArrayMapping', ko.utils.setDomNodeChildrenFromArrayMapping);\nko.nativeTemplateEngine = function () {\n    this['allowTemplateRewriting'] = false;\n}\n\nko.nativeTemplateEngine.prototype = new ko.templateEngine();\nko.nativeTemplateEngine.prototype.constructor = ko.nativeTemplateEngine;\nko.nativeTemplateEngine.prototype['renderTemplateSource'] = function (templateSource, bindingContext, options, templateDocument) {\n    var useNodesIfAvailable = !(ko.utils.ieVersion < 9), // IE<9 cloneNode doesn't work properly\n        templateNodesFunc = useNodesIfAvailable ? templateSource['nodes'] : null,\n        templateNodes = templateNodesFunc ? templateSource['nodes']() : null;\n\n    if (templateNodes) {\n        return ko.utils.makeArray(templateNodes.cloneNode(true).childNodes);\n    } else {\n        var templateText = templateSource['text']();\n        return ko.utils.parseHtmlFragment(templateText, templateDocument);\n    }\n};\n\nko.nativeTemplateEngine.instance = new ko.nativeTemplateEngine();\nko.setTemplateEngine(ko.nativeTemplateEngine.instance);\n\nko.exportSymbol('nativeTemplateEngine', ko.nativeTemplateEngine);\n(function() {\n    ko.jqueryTmplTemplateEngine = function () {\n        // Detect which version of jquery-tmpl you're using. Unfortunately jquery-tmpl\n        // doesn't expose a version number, so we have to infer it.\n        // Note that as of Knockout 1.3, we only support jQuery.tmpl 1.0.0pre and later,\n        // which KO internally refers to as version \"2\", so older versions are no longer detected.\n        var jQueryTmplVersion = this.jQueryTmplVersion = (function() {\n            if (!jQueryInstance || !(jQueryInstance['tmpl']))\n                return 0;\n            // Since it exposes no official version number, we use our own numbering system. To be updated as jquery-tmpl evolves.\n            try {\n                if (jQueryInstance['tmpl']['tag']['tmpl']['open'].toString().indexOf('__') >= 0) {\n                    // Since 1.0.0pre, custom tags should append markup to an array called \"__\"\n                    return 2; // Final version of jquery.tmpl\n                }\n            } catch(ex) { /* Apparently not the version we were looking for */ }\n\n            return 1; // Any older version that we don't support\n        })();\n\n        function ensureHasReferencedJQueryTemplates() {\n            if (jQueryTmplVersion < 2)\n                throw new Error(\"Your version of jQuery.tmpl is too old. Please upgrade to jQuery.tmpl 1.0.0pre or later.\");\n        }\n\n        function executeTemplate(compiledTemplate, data, jQueryTemplateOptions) {\n            return jQueryInstance['tmpl'](compiledTemplate, data, jQueryTemplateOptions);\n        }\n\n        this['renderTemplateSource'] = function(templateSource, bindingContext, options, templateDocument) {\n            templateDocument = templateDocument || document;\n            options = options || {};\n            ensureHasReferencedJQueryTemplates();\n\n            // Ensure we have stored a precompiled version of this template (don't want to reparse on every render)\n            var precompiled = templateSource['data']('precompiled');\n            if (!precompiled) {\n                var templateText = templateSource['text']() || \"\";\n                // Wrap in \"with($whatever.koBindingContext) { ... }\"\n                templateText = \"{{ko_with $item.koBindingContext}}\" + templateText + \"{{/ko_with}}\";\n\n                precompiled = jQueryInstance['template'](null, templateText);\n                templateSource['data']('precompiled', precompiled);\n            }\n\n            var data = [bindingContext['$data']]; // Prewrap the data in an array to stop jquery.tmpl from trying to unwrap any arrays\n            var jQueryTemplateOptions = jQueryInstance['extend']({ 'koBindingContext': bindingContext }, options['templateOptions']);\n\n            var resultNodes = executeTemplate(precompiled, data, jQueryTemplateOptions);\n            resultNodes['appendTo'](templateDocument.createElement(\"div\")); // Using \"appendTo\" forces jQuery/jQuery.tmpl to perform necessary cleanup work\n\n            jQueryInstance['fragments'] = {}; // Clear jQuery's fragment cache to avoid a memory leak after a large number of template renders\n            return resultNodes;\n        };\n\n        this['createJavaScriptEvaluatorBlock'] = function(script) {\n            return \"{{ko_code ((function() { return \" + script + \" })()) }}\";\n        };\n\n        this['addTemplate'] = function(templateName, templateMarkup) {\n            document.write(\"<script type='text/html' id='\" + templateName + \"'>\" + templateMarkup + \"<\" + \"/script>\");\n        };\n\n        if (jQueryTmplVersion > 0) {\n            jQueryInstance['tmpl']['tag']['ko_code'] = {\n                open: \"__.push($1 || '');\"\n            };\n            jQueryInstance['tmpl']['tag']['ko_with'] = {\n                open: \"with($1) {\",\n                close: \"} \"\n            };\n        }\n    };\n\n    ko.jqueryTmplTemplateEngine.prototype = new ko.templateEngine();\n    ko.jqueryTmplTemplateEngine.prototype.constructor = ko.jqueryTmplTemplateEngine;\n\n    // Use this one by default *only if jquery.tmpl is referenced*\n    var jqueryTmplTemplateEngineInstance = new ko.jqueryTmplTemplateEngine();\n    if (jqueryTmplTemplateEngineInstance.jQueryTmplVersion > 0)\n        ko.setTemplateEngine(jqueryTmplTemplateEngineInstance);\n\n    ko.exportSymbol('jqueryTmplTemplateEngine', ko.jqueryTmplTemplateEngine);\n})();\n}));\n}());\n})();\n"]}